{"version":3,"file":"tab-nav-bar.js","sourceRoot":"","sources":["../../../../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  ViewEncapsulation,\n  Directive, NgZone, Inject, Optional,\n} from '@angular/core';\nimport {MdInkBar} from '../ink-bar';\nimport {MdRipple} from '../../core/ripple/index';\nimport {ViewportRuler} from '../../core/overlay/position/viewport-ruler';\nimport {MD_RIPPLE_GLOBAL_OPTIONS, RippleGlobalOptions} from '../../core/ripple/ripple';\n\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\n@Component({\n  moduleId: module.id,\n  selector: '[md-tab-nav-bar], [mat-tab-nav-bar]',\n  templateUrl: 'tab-nav-bar.html',\n  styleUrls: ['tab-nav-bar.css'],\n  host: {\n    '[class.mat-tab-nav-bar]': 'true',\n  },\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MdTabNavBar {\n  _activeLinkChanged: boolean;\n  _activeLinkElement: ElementRef;\n\n  @ViewChild(MdInkBar) _inkBar: MdInkBar;\n\n  /** Notifies the component that the active link has been changed. */\n  updateActiveLink(element: ElementRef) {\n    this._activeLinkChanged = this._activeLinkElement != element;\n    this._activeLinkElement = element;\n  }\n\n  /** Checks if the active link has been changed and, if so, will update the ink bar. */\n  ngAfterContentChecked(): void {\n    if (this._activeLinkChanged) {\n      this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\n      this._activeLinkChanged = false;\n    }\n  }\n}\n\n/**\n * Link inside of a `md-tab-nav-bar`.\n */\n@Directive({\n  selector: '[md-tab-link], [mat-tab-link]',\n  host: {\n    '[class.mat-tab-link]': 'true',\n  }\n})\nexport class MdTabLink {\n  private _isActive: boolean = false;\n\n  /** Whether the link is active. */\n  @Input()\n  get active(): boolean { return this._isActive; }\n  set active(value: boolean) {\n    this._isActive = value;\n    if (value) {\n      this._mdTabNavBar.updateActiveLink(this._elementRef);\n    }\n  }\n\n  constructor(private _mdTabNavBar: MdTabNavBar, private _elementRef: ElementRef) {}\n}\n\n/**\n * Simple directive that extends the ripple and matches the selector of the MdTabLink. This\n * adds the ripple behavior to nav bar labels.\n */\n@Directive({\n  selector: '[md-tab-link], [mat-tab-link]',\n  host: {\n    '[class.mat-tab-link]': 'true',\n  },\n})\nexport class MdTabLinkRipple extends MdRipple {\n  constructor(elementRef: ElementRef, ngZone: NgZone, ruler: ViewportRuler,\n              @Optional() @Inject(MD_RIPPLE_GLOBAL_OPTIONS) globalOptions: RippleGlobalOptions) {\n    super(elementRef, ngZone, ruler, globalOptions);\n  }\n}\n"]}