{"version":3,"file":"button.js","sourceRoot":"","sources":["../../../../src/lib/button/button.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  Renderer,\n  ViewEncapsulation\n} from '@angular/core';\nimport {coerceBooleanProperty, FocusOriginMonitor} from '../core';\n\n\n// TODO(kara): Convert attribute selectors to classes when attr maps become available\n\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: 'button[md-button], button[mat-button], a[md-button], a[mat-button]',\n  host: {\n    '[class.mat-button]': 'true'\n  }\n})\nexport class MdButtonCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector:\n      'button[md-raised-button], button[mat-raised-button], ' +\n      'a[md-raised-button], a[mat-raised-button]',\n  host: {\n    '[class.mat-raised-button]': 'true'\n  }\n})\nexport class MdRaisedButtonCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector:\n      'button[md-icon-button], button[mat-icon-button], a[md-icon-button], a[mat-icon-button]',\n  host: {\n    '[class.mat-icon-button]': 'true',\n  }\n})\nexport class MdIconButtonCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: 'button[md-fab], button[mat-fab], a[md-fab], a[mat-fab]',\n  host: {\n    '[class.mat-fab]': 'true'\n  }\n})\nexport class MdFabCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n  selector: 'button[md-mini-fab], button[mat-mini-fab], a[md-mini-fab], a[mat-mini-fab]',\n  host: {\n    '[class.mat-mini-fab]': 'true'\n  }\n})\nexport class MdMiniFabCssMatStyler {}\n\n\n/**\n * Material design button.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'button[md-button], button[md-raised-button], button[md-icon-button],' +\n            'button[md-fab], button[md-mini-fab],' +\n            'button[mat-button], button[mat-raised-button], button[mat-icon-button],' +\n            'button[mat-fab], button[mat-mini-fab]',\n  host: {\n    '[disabled]': 'disabled',\n  },\n  templateUrl: 'button.html',\n  styleUrls: ['button.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MdButton implements OnDestroy {\n  private _color: string;\n\n  /** Whether the button is round. */\n  _isRoundButton: boolean = ['icon-button', 'fab', 'mini-fab'].some(suffix => {\n    let el = this._getHostElement();\n    return el.hasAttribute('md-' + suffix) || el.hasAttribute('mat-' + suffix);\n  });\n\n  /** Whether the ripple effect on click should be disabled. */\n  private _disableRipple: boolean = false;\n  private _disabled: boolean = null;\n\n  /** Whether the ripple effect for this button is disabled. */\n  @Input()\n  get disableRipple() { return this._disableRipple; }\n  set disableRipple(v) { this._disableRipple = coerceBooleanProperty(v); }\n\n  /** Whether the button is disabled. */\n  @Input()\n  get disabled() { return this._disabled; }\n  set disabled(value: boolean) { this._disabled = coerceBooleanProperty(value) ? true : null; }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer,\n              private _focusOriginMonitor: FocusOriginMonitor) {\n    this._focusOriginMonitor.monitor(this._elementRef.nativeElement, this._renderer, true);\n  }\n\n  ngOnDestroy() {\n    this._focusOriginMonitor.unmonitor(this._elementRef.nativeElement);\n  }\n\n  /** The color of the button. Can be `primary`, `accent`, or `warn`. */\n  @Input()\n  get color(): string { return this._color; }\n  set color(value: string) { this._updateColor(value); }\n\n  _updateColor(newColor: string) {\n    this._setElementColor(this._color, false);\n    this._setElementColor(newColor, true);\n    this._color = newColor;\n  }\n\n  _setElementColor(color: string, isAdd: boolean) {\n    if (color != null && color != '') {\n      this._renderer.setElementClass(this._getHostElement(), `mat-${color}`, isAdd);\n    }\n  }\n\n  /** Focuses the button. */\n  focus(): void {\n    this._renderer.invokeElementMethod(this._getHostElement(), 'focus');\n  }\n\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n\n  _isRippleDisabled() {\n    return this.disableRipple || this.disabled;\n  }\n}\n\n/**\n * Raised Material design button.\n */\n@Component({\n  moduleId: module.id,\n  selector: `a[md-button], a[md-raised-button], a[md-icon-button], a[md-fab], a[md-mini-fab],\n             a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab], a[mat-mini-fab]`,\n  host: {\n    '[attr.disabled]': 'disabled',\n    '[attr.aria-disabled]': '_isAriaDisabled',\n    '(click)': '_haltDisabledEvents($event)',\n  },\n  templateUrl: 'button.html',\n  styleUrls: ['button.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MdAnchor extends MdButton {\n  constructor(elementRef: ElementRef, renderer: Renderer, focusOriginMonitor: FocusOriginMonitor) {\n    super(elementRef, renderer, focusOriginMonitor);\n  }\n\n  /** @docs-private */\n  @HostBinding('tabIndex')\n  get tabIndex(): number {\n    return this.disabled ? -1 : 0;\n  }\n\n  get _isAriaDisabled(): string {\n    return this.disabled ? 'true' : 'false';\n  }\n\n  _haltDisabledEvents(event: Event) {\n    // A disabled button shouldn't apply any actions\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    }\n  }\n}\n"]}