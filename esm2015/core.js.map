{"version":3,"file":"core.js","sources":["../../packages/material/core/animation/animation.js","../../packages/material/core/common-behaviors/common-module.js","../../packages/material/core/common-behaviors/disabled.js","../../packages/material/core/common-behaviors/color.js","../../packages/material/core/common-behaviors/disable-ripple.js","../../packages/material/core/common-behaviors/tabindex.js","../../packages/material/core/common-behaviors/index.js","../../packages/material/core/datetime/date-adapter.js","../../packages/material/core/datetime/date-formats.js","../../packages/material/core/util/object-extend.js","../../packages/material/core/datetime/native-date-adapter.js","../../packages/material/core/datetime/native-date-formats.js","../../packages/material/core/datetime/index.js","../../packages/material/core/error/error-options.js","../../packages/material/core/gestures/gesture-config.js","../../packages/material/core/line/line.js","../../packages/material/core/ripple/ripple-ref.js","../../packages/material/core/ripple/ripple-renderer.js","../../packages/material/core/ripple/ripple.js","../../packages/material/core/ripple/index.js","../../packages/material/core/selection/pseudo-checkbox/pseudo-checkbox.js","../../packages/material/core/selection/index.js","../../packages/material/core/option/optgroup.js","../../packages/material/core/option/option.js","../../packages/material/core/option/index.js","../../packages/material/core/placeholder/placeholder-options.js","../../packages/material/core/style/apply-transform.js","../../packages/material/core/style/index.js","../../packages/material/core/testing/month-constants.js","../../packages/material/core/public-api.js","../../packages/material/core/index.js"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n */\nexport class AnimationCurves {\n}\nfunction AnimationCurves_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AnimationCurves.STANDARD_CURVE;\n    /** @type {?} */\n    AnimationCurves.DECELERATION_CURVE;\n    /** @type {?} */\n    AnimationCurves.ACCELERATION_CURVE;\n    /** @type {?} */\n    AnimationCurves.SHARP_CURVE;\n}\n/**\n * \\@docs-private\n */\nexport class AnimationDurations {\n}\nfunction AnimationDurations_tsickle_Closure_declarations() {\n    /** @type {?} */\n    AnimationDurations.COMPLEX;\n    /** @type {?} */\n    AnimationDurations.ENTERING;\n    /** @type {?} */\n    AnimationDurations.EXITING;\n}\n//# sourceMappingURL=animation.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule, InjectionToken, Optional, Inject, isDevMode } from \"@angular/core\";\nimport { BidiModule } from \"@angular/cdk/bidi\";\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n */\nexport const /** @type {?} */ MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks');\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nexport class MatCommonModule {\n    /**\n     * @param {?} _sanityChecksEnabled\n     */\n    constructor(_sanityChecksEnabled) {\n        this._sanityChecksEnabled = _sanityChecksEnabled;\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n    /**\n     * Whether any sanity checks are enabled\n     * @return {?}\n     */\n    _areChecksEnabled() {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n    /**\n     * Whether the code is running in tests.\n     * @return {?}\n     */\n    _isTestEnv() {\n        return window['__karma__'] || window['jasmine'];\n    }\n    /**\n     * @return {?}\n     */\n    _checkDoctypeIsDefined() {\n        if (this._document && !this._document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _checkThemeIsPresent() {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const /** @type {?} */ testElement = this._document.createElement('div');\n            testElement.classList.add('mat-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n            const /** @type {?} */ computedStyle = getComputedStyle(testElement);\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn('Could not find Angular Material core theme. Most Material ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: https://material.angular.io/guide/theming');\n            }\n            this._document.body.removeChild(testElement);\n        }\n    }\n    /**\n     * Checks whether HammerJS is available.\n     * @return {?}\n     */\n    _checkHammerIsAvailable() {\n        if (this._areChecksEnabled() && !this._hasCheckedHammer && !window['Hammer']) {\n            console.warn('Could not find HammerJS. Certain Angular Material components may not work correctly.');\n        }\n        this._hasCheckedHammer = true;\n    }\n}\nfunction MatCommonModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatCommonModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatCommonModule.ctorParameters;\n    /**\n     * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n     * @type {?}\n     */\n    MatCommonModule.prototype._hasDoneGlobalChecks;\n    /**\n     * Whether we've already checked for HammerJs availability.\n     * @type {?}\n     */\n    MatCommonModule.prototype._hasCheckedHammer;\n    /**\n     * Reference to the global `document` object.\n     * @type {?}\n     */\n    MatCommonModule.prototype._document;\n    /** @type {?} */\n    MatCommonModule.prototype._sanityChecksEnabled;\n}\n//# sourceMappingURL=common-module.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { coerceBooleanProperty } from \"@angular/cdk/coercion\";\n/**\n * \\@docs-private\n * @record\n */\nexport function CanDisable() { }\nfunction CanDisable_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CanDisable.prototype.disabled;\n}\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nexport function mixinDisabled(base) {\n    return class extends base {\n        /**\n         * @return {?}\n         */\n        get disabled() { return this._disabled; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) { super(...args); }\n    };\n}\n//# sourceMappingURL=disabled.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\nexport function CanColor() { }\nfunction CanColor_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CanColor.prototype.color;\n}\n/**\n * \\@docs-private\n * @record\n */\nexport function HasRenderer() { }\nfunction HasRenderer_tsickle_Closure_declarations() {\n    /** @type {?} */\n    HasRenderer.prototype._renderer;\n    /** @type {?} */\n    HasRenderer.prototype._elementRef;\n}\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\nexport function mixinColor(base, defaultColor) {\n    return class extends base {\n        /**\n         * @return {?}\n         */\n        get color() { return this._color; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set color(value) {\n            const /** @type {?} */ colorPalette = value || defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._renderer.removeClass(this._elementRef.nativeElement, `mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._renderer.addClass(this._elementRef.nativeElement, `mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n    };\n}\n//# sourceMappingURL=color.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { coerceBooleanProperty } from \"@angular/cdk/coercion\";\n/**\n * \\@docs-private\n * @record\n */\nexport function CanDisableRipple() { }\nfunction CanDisableRipple_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CanDisableRipple.prototype.disableRipple;\n}\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nexport function mixinDisableRipple(base) {\n    return class extends base {\n        /**\n         * Whether the ripple effect is disabled or not.\n         * @return {?}\n         */\n        get disableRipple() { return this._disableRipple; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) { super(...args); }\n    };\n}\n//# sourceMappingURL=disable-ripple.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\nexport function HasTabIndex() { }\nfunction HasTabIndex_tsickle_Closure_declarations() {\n    /** @type {?} */\n    HasTabIndex.prototype.tabIndex;\n}\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\nexport function mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        /**\n         * @return {?}\n         */\n        get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n        }\n    };\n}\n//# sourceMappingURL=tabindex.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { MatCommonModule, MATERIAL_SANITY_CHECKS } from \"./common-module\";\nexport { mixinDisabled } from \"./disabled\";\nexport { mixinColor } from \"./color\";\nexport { mixinDisableRipple } from \"./disable-ripple\";\nexport { mixinTabIndex } from \"./tabindex\";\n//# sourceMappingURL=index.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, LOCALE_ID } from \"@angular/core\";\nimport { Subject } from \"rxjs/Subject\";\n/**\n * InjectionToken for datepicker that can be used to override default locale code.\n */\nexport const /** @type {?} */ MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE');\n/**\n * Provider for MAT_DATE_LOCALE injection token.\n */\nexport const /** @type {?} */ MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID };\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n */\nexport class DateAdapter {\n    /**\n     * A stream that emits when the locale changes.\n     * @return {?}\n     */\n    get localeChanges() { return this._localeChanges; }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of it's `\\@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param {?} value The value to be deserialized into a date object.\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param {?} locale The new locale.\n     * @return {?}\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param {?} first The first date to compare.\n     * @param {?} second The second date to compare.\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param {?} first The first date to check.\n     * @param {?} second The second date to check.\n     * @return {?} Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            let /** @type {?} */ firstValid = this.isValid(first);\n            let /** @type {?} */ secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param {?} date The date to clamp.\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\nfunction DateAdapter_tsickle_Closure_declarations() {\n    /**\n     * The locale to use for all dates.\n     * @type {?}\n     */\n    DateAdapter.prototype.locale;\n    /** @type {?} */\n    DateAdapter.prototype._localeChanges;\n    /**\n     * Gets the year component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the year from.\n     * @return {?} The year component.\n     */\n    DateAdapter.prototype.getYear = function (date) { };\n    /**\n     * Gets the month component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the month from.\n     * @return {?} The month component (0-indexed, 0 = January).\n     */\n    DateAdapter.prototype.getMonth = function (date) { };\n    /**\n     * Gets the date of the month component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the date of the month from.\n     * @return {?} The month component (1-indexed, 1 = first of month).\n     */\n    DateAdapter.prototype.getDate = function (date) { };\n    /**\n     * Gets the day of the week component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the day of the week from.\n     * @return {?} The month component (0-indexed, 0 = Sunday).\n     */\n    DateAdapter.prototype.getDayOfWeek = function (date) { };\n    /**\n     * Gets a list of names for the months.\n     * @abstract\n     * @param {?} style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\n     * @return {?} An ordered list of all month names, starting with January.\n     */\n    DateAdapter.prototype.getMonthNames = function (style) { };\n    /**\n     * Gets a list of names for the dates of the month.\n     * @abstract\n     * @return {?} An ordered list of all date of the month names, starting with '1'.\n     */\n    DateAdapter.prototype.getDateNames = function () { };\n    /**\n     * Gets a list of names for the days of the week.\n     * @abstract\n     * @param {?} style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\n     * @return {?} An ordered list of all weekday names, starting with Sunday.\n     */\n    DateAdapter.prototype.getDayOfWeekNames = function (style) { };\n    /**\n     * Gets the name for the year of the given date.\n     * @abstract\n     * @param {?} date The date to get the year name for.\n     * @return {?} The name of the given year (e.g. '2017').\n     */\n    DateAdapter.prototype.getYearName = function (date) { };\n    /**\n     * Gets the first day of the week.\n     * @abstract\n     * @return {?} The first day of the week (0-indexed, 0 = Sunday).\n     */\n    DateAdapter.prototype.getFirstDayOfWeek = function () { };\n    /**\n     * Gets the number of days in the month of the given date.\n     * @abstract\n     * @param {?} date The date whose month should be checked.\n     * @return {?} The number of days in the month of the given date.\n     */\n    DateAdapter.prototype.getNumDaysInMonth = function (date) { };\n    /**\n     * Clones the given date.\n     * @abstract\n     * @param {?} date The date to clone\n     * @return {?} A new date equal to the given date.\n     */\n    DateAdapter.prototype.clone = function (date) { };\n    /**\n     * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\n     * month and date.\n     * @abstract\n     * @param {?} year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\n     * @param {?} month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\n     * @param {?} date The date of month of the date. Must be an integer 1 - length of the given month.\n     * @return {?} The new date, or null if invalid.\n     */\n    DateAdapter.prototype.createDate = function (year, month, date) { };\n    /**\n     * Gets today's date.\n     * @abstract\n     * @return {?} Today's date.\n     */\n    DateAdapter.prototype.today = function () { };\n    /**\n     * Parses a date from a user-provided value.\n     * @abstract\n     * @param {?} value The value to parse.\n     * @param {?} parseFormat The expected format of the value being parsed\n     *     (type is implementation-dependent).\n     * @return {?} The parsed date.\n     */\n    DateAdapter.prototype.parse = function (value, parseFormat) { };\n    /**\n     * Formats a date as a string according to the given format.\n     * @abstract\n     * @param {?} date The value to format.\n     * @param {?} displayFormat The format to use to display the date as a string.\n     * @return {?} The formatted date string.\n     */\n    DateAdapter.prototype.format = function (date, displayFormat) { };\n    /**\n     * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\n     * calendar for each year and then finding the closest date in the new month. For example when\n     * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\n     * @abstract\n     * @param {?} date The date to add years to.\n     * @param {?} years The number of years to add (may be negative).\n     * @return {?} A new date equal to the given one with the specified number of years added.\n     */\n    DateAdapter.prototype.addCalendarYears = function (date, years) { };\n    /**\n     * Adds the given number of months to the date. Months are counted as if flipping a page on the\n     * calendar for each month and then finding the closest date in the new month. For example when\n     * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\n     * @abstract\n     * @param {?} date The date to add months to.\n     * @param {?} months The number of months to add (may be negative).\n     * @return {?} A new date equal to the given one with the specified number of months added.\n     */\n    DateAdapter.prototype.addCalendarMonths = function (date, months) { };\n    /**\n     * Adds the given number of days to the date. Days are counted as if moving one cell on the\n     * calendar for each day.\n     * @abstract\n     * @param {?} date The date to add days to.\n     * @param {?} days The number of days to add (may be negative).\n     * @return {?} A new date equal to the given one with the specified number of days added.\n     */\n    DateAdapter.prototype.addCalendarDays = function (date, days) { };\n    /**\n     * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\n     * This method is used to generate date strings that are compatible with native HTML attributes\n     * such as the `min` or `max` attribute of an `<input>`.\n     * @abstract\n     * @param {?} date The date to get the ISO date string for.\n     * @return {?} The ISO date string date string.\n     */\n    DateAdapter.prototype.toIso8601 = function (date) { };\n    /**\n     * Checks whether the given object is considered a date instance by this DateAdapter.\n     * @abstract\n     * @param {?} obj The object to check\n     * @return {?} Whether the object is a date instance.\n     */\n    DateAdapter.prototype.isDateInstance = function (obj) { };\n    /**\n     * Checks whether the given date is valid.\n     * @abstract\n     * @param {?} date The date to check.\n     * @return {?} Whether the date is valid.\n     */\n    DateAdapter.prototype.isValid = function (date) { };\n    /**\n     * Gets date instance that is not valid.\n     * @abstract\n     * @return {?} An invalid date.\n     */\n    DateAdapter.prototype.invalid = function () { };\n}\n//# sourceMappingURL=date-adapter.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken } from \"@angular/core\";\nexport const /** @type {?} */ MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n//# sourceMappingURL=date-formats.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param {?} dest The object which will have properties copied to it.\n * @param {...?} sources The source objects from which properties will be copied.\n * @return {?}\n */\nexport function extendObject(dest, ...sources) {\n    if (dest == null) {\n        throw TypeError('Cannot convert undefined or null to object');\n    }\n    for (let /** @type {?} */ source of sources) {\n        if (source != null) {\n            for (let /** @type {?} */ key in source) {\n                if (source.hasOwnProperty(key)) {\n                    dest[key] = source[key];\n                }\n            }\n        }\n    }\n    return dest;\n}\n//# sourceMappingURL=object-extend.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Inject, Injectable, Optional } from \"@angular/core\";\nimport { extendObject } from \"../util/object-extend\";\nimport { DateAdapter, MAT_DATE_LOCALE } from \"./date-adapter\";\n/**\n * Whether the browser supports the Intl API.\n */\nconst /** @type {?} */ SUPPORTS_INTL_API = typeof Intl != 'undefined';\n/**\n * The default month names to use if Intl API is not available.\n */\nconst /** @type {?} */ DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nconst ɵ0 = i => String(i + 1);\n/**\n * The default date names to use if Intl API is not available.\n */\nconst /** @type {?} */ DEFAULT_DATE_NAMES = range(31, ɵ0);\n/**\n * The default day of the week names to use if Intl API is not available.\n */\nconst /** @type {?} */ DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst /** @type {?} */ ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    const /** @type {?} */ valuesArray = Array(length);\n    for (let /** @type {?} */ i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nexport class NativeDateAdapter extends DateAdapter {\n    /**\n     * @param {?} matDateLocale\n     */\n    constructor(matDateLocale) {\n        super();\n        super.setLocale(matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        // TODO(mmalerba): replace with !platform.TRIDENT, logic currently duplicated to avoid breaking\n        // change from injecting the Platform.\n        this.useUtcForDisplay = !(typeof document === 'object' && !!document &&\n            /(msie|trident)/i.test(navigator.userAgent));\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYear(date) {\n        return date.getFullYear();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getMonth(date) {\n        return date.getMonth();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDate(date) {\n        return date.getDate();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getMonthNames(style) {\n        if (SUPPORTS_INTL_API) {\n            let /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, { month: style });\n            return range(12, i => this._stripDirectionalityCharacters(dtf.format(new Date(2017, i, 1))));\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n    /**\n     * @return {?}\n     */\n    getDateNames() {\n        if (SUPPORTS_INTL_API) {\n            let /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric' });\n            return range(31, i => this._stripDirectionalityCharacters(dtf.format(new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getDayOfWeekNames(style) {\n        if (SUPPORTS_INTL_API) {\n            let /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, { weekday: style });\n            return range(7, i => this._stripDirectionalityCharacters(dtf.format(new Date(2017, 0, i + 1))));\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYearName(date) {\n        if (SUPPORTS_INTL_API) {\n            let /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric' });\n            return this._stripDirectionalityCharacters(dtf.format(date));\n        }\n        return String(this.getYear(date));\n    }\n    /**\n     * @return {?}\n     */\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    clone(date) {\n        return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    createDate(year, month, date) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n        let /** @type {?} */ result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    today() {\n        return new Date();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            if (this.useUtcForDisplay) {\n                date = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n                displayFormat = extendObject({}, displayFormat, { timeZone: 'utc' });\n            }\n            let /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(dtf.format(date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    }\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    addCalendarMonths(date, months) {\n        let /** @type {?} */ newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate())\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                let /** @type {?} */ date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    /**\n     * @return {?}\n     */\n    invalid() {\n        return new Date(NaN);\n    }\n    /**\n     * Creates a date but allows the month and date to overflow.\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    _createDateWithOverflow(year, month, date) {\n        let /** @type {?} */ result = new Date(year, month, date);\n        // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n        // abbreviations for 19xx.\n        if (year >= 0 && year < 100) {\n            result.setFullYear(this.getYear(result) - 1900);\n        }\n        return result;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n    _stripDirectionalityCharacters(str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n}\nfunction NativeDateAdapter_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    NativeDateAdapter.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    NativeDateAdapter.ctorParameters;\n    /**\n     * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n     * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n     * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n     * will produce `'8/13/1800'`.\n     * @type {?}\n     */\n    NativeDateAdapter.prototype.useUtcForDisplay;\n}\nexport { ɵ0 };\n//# sourceMappingURL=native-date-adapter.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nexport const /** @type {?} */ MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n//# sourceMappingURL=native-date-formats.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule } from \"@angular/core\";\nimport { DateAdapter, MAT_DATE_LOCALE_PROVIDER } from \"./date-adapter\";\nimport { MAT_DATE_FORMATS } from \"./date-formats\";\nimport { NativeDateAdapter } from \"./native-date-adapter\";\nimport { MAT_NATIVE_DATE_FORMATS } from \"./native-date-formats\";\nexport { MAT_DATE_LOCALE, MAT_DATE_LOCALE_PROVIDER, DateAdapter } from \"./date-adapter\";\nexport { MAT_DATE_FORMATS } from \"./date-formats\";\nexport { NativeDateAdapter } from \"./native-date-adapter\";\nexport { MAT_NATIVE_DATE_FORMATS } from \"./native-date-formats\";\nexport class NativeDateModule {\n}\nfunction NativeDateModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    NativeDateModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    NativeDateModule.ctorParameters;\n}\nconst ɵ0 = MAT_NATIVE_DATE_FORMATS;\nexport class MatNativeDateModule {\n}\nfunction MatNativeDateModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatNativeDateModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatNativeDateModule.ctorParameters;\n}\nexport { ɵ0 };\n//# sourceMappingURL=index.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable } from \"@angular/core\";\n/**\n * Error state matcher that matches when a control is invalid and dirty.\n */\nexport class ShowOnDirtyErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nfunction ShowOnDirtyErrorStateMatcher_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ShowOnDirtyErrorStateMatcher.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ShowOnDirtyErrorStateMatcher.ctorParameters;\n}\n/**\n * Provider that defines how form controls behave with regards to displaying error messages.\n */\nexport class ErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nfunction ErrorStateMatcher_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ErrorStateMatcher.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ErrorStateMatcher.ctorParameters;\n}\n//# sourceMappingURL=error-options.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable, Optional } from \"@angular/core\";\nimport { HammerGestureConfig } from \"@angular/platform-browser\";\nimport { MatCommonModule } from \"../common-behaviors/common-module\";\nexport class GestureConfig extends HammerGestureConfig {\n    /**\n     * @param {?=} commonModule\n     */\n    constructor(commonModule) {\n        super();\n        if (commonModule) {\n            commonModule._checkHammerIsAvailable();\n        }\n    }\n    /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param {?} element Element to which to assign the new HammerJS gestures.\n     * @return {?} Newly-created HammerJS instance.\n     */\n    buildHammer(element) {\n        const /** @type {?} */ mc = new this._hammer(element);\n        // Default Hammer Recognizers.\n        let /** @type {?} */ pan = new this._hammer.Pan();\n        let /** @type {?} */ swipe = new this._hammer.Swipe();\n        let /** @type {?} */ press = new this._hammer.Press();\n        // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n        // Otherwise the previous `recognizeWith` will be dropped.\n        // TODO: Confirm threshold numbers with Material Design UX Team\n        let /** @type {?} */ slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\n        let /** @type {?} */ longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\n        // Overwrite the default `pan` event to use the swipe event.\n        pan.recognizeWith(swipe);\n        // Add customized gestures to Hammer manager\n        mc.add([swipe, press, pan, slide, longpress]);\n        return /** @type {?} */ (mc);\n    }\n    /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n    _createRecognizer(base, options, ...inheritances) {\n        let /** @type {?} */ recognizer = new (/** @type {?} */ (base.constructor))(options);\n        inheritances.push(base);\n        inheritances.forEach(item => recognizer.recognizeWith(item));\n        return recognizer;\n    }\n}\nfunction GestureConfig_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    GestureConfig.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    GestureConfig.ctorParameters;\n    /** @type {?} */\n    GestureConfig.prototype._hammer;\n    /** @type {?} */\n    GestureConfig.prototype.events;\n}\n//# sourceMappingURL=gesture-config.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule, Directive, } from \"@angular/core\";\nimport { MatCommonModule } from \"../common-behaviors/common-module\";\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nexport class MatLine {\n}\nfunction MatLine_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatLine.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatLine.ctorParameters;\n}\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n */\nexport class MatLineSetter {\n    /**\n     * @param {?} _lines\n     * @param {?} _renderer\n     * @param {?} _element\n     */\n    constructor(_lines, _renderer, _element) {\n        this._lines = _lines;\n        this._renderer = _renderer;\n        this._element = _element;\n        this._setLineClass(this._lines.length);\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    _setLineClass(count) {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mat-${count}-line`, true);\n        }\n        else if (count > 3) {\n            this._setClass(`mat-multi-line`, true);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _resetClasses() {\n        this._setClass('mat-2-line', false);\n        this._setClass('mat-3-line', false);\n        this._setClass('mat-multi-line', false);\n    }\n    /**\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _setClass(className, isAdd) {\n        if (isAdd) {\n            this._renderer.addClass(this._element.nativeElement, className);\n        }\n        else {\n            this._renderer.removeClass(this._element.nativeElement, className);\n        }\n    }\n}\nfunction MatLineSetter_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MatLineSetter.prototype._lines;\n    /** @type {?} */\n    MatLineSetter.prototype._renderer;\n    /** @type {?} */\n    MatLineSetter.prototype._element;\n}\nexport class MatLineModule {\n}\nfunction MatLineModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatLineModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatLineModule.ctorParameters;\n}\n//# sourceMappingURL=line.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nconst RippleState = {\n    FADING_IN: 0,\n    VISIBLE: 1,\n    FADING_OUT: 2,\n    HIDDEN: 3,\n};\nexport { RippleState };\nRippleState[RippleState.FADING_IN] = \"FADING_IN\";\nRippleState[RippleState.VISIBLE] = \"VISIBLE\";\nRippleState[RippleState.FADING_OUT] = \"FADING_OUT\";\nRippleState[RippleState.HIDDEN] = \"HIDDEN\";\n/**\n * Reference to a previously launched ripple element.\n */\nexport class RippleRef {\n    /**\n     * @param {?} _renderer\n     * @param {?} element\n     * @param {?} config\n     */\n    constructor(_renderer, element, config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n    }\n    /**\n     * Fades out the ripple element.\n     * @return {?}\n     */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\nfunction RippleRef_tsickle_Closure_declarations() {\n    /**\n     * Current state of the ripple reference.\n     * @type {?}\n     */\n    RippleRef.prototype.state;\n    /** @type {?} */\n    RippleRef.prototype._renderer;\n    /** @type {?} */\n    RippleRef.prototype.element;\n    /** @type {?} */\n    RippleRef.prototype.config;\n}\n//# sourceMappingURL=ripple-ref.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { RippleRef, RippleState } from \"./ripple-ref\";\n/**\n * Fade-in duration for the ripples. Can be modified with the speedFactor option.\n */\nexport const /** @type {?} */ RIPPLE_FADE_IN_DURATION = 450;\n/**\n * Fade-out duration for the ripples in milliseconds. This can't be modified by the speedFactor.\n */\nexport const /** @type {?} */ RIPPLE_FADE_OUT_DURATION = 400;\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nexport class RippleRenderer {\n    /**\n     * @param {?} elementRef\n     * @param {?} _ngZone\n     * @param {?} platform\n     */\n    constructor(elementRef, _ngZone, platform) {\n        this._ngZone = _ngZone;\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = elementRef.nativeElement;\n            // Specify events which need to be registered on the trigger.\n            this._triggerEvents.set('mousedown', this.onMousedown.bind(this));\n            this._triggerEvents.set('mouseup', this.onMouseup.bind(this));\n            this._triggerEvents.set('mouseleave', this.onMouseup.bind(this));\n            // By default use the host element as trigger element.\n            this.setTriggerElement(this._containerElement);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param {?=} config Extra ripple options.\n     * @return {?}\n     */\n    fadeInRipple(x, y, config = {}) {\n        const /** @type {?} */ containerRect = this._containerElement.getBoundingClientRect();\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        const /** @type {?} */ radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        const /** @type {?} */ duration = RIPPLE_FADE_IN_DURATION * (1 / (config.speedFactor || 1));\n        const /** @type {?} */ offsetX = x - containerRect.left;\n        const /** @type {?} */ offsetY = y - containerRect.top;\n        const /** @type {?} */ ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If the color is not set, the default CSS color will be used.\n        ripple.style.backgroundColor = config.color || null;\n        ripple.style.transitionDuration = `${duration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        let /** @type {?} */ rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = RippleState.FADING_IN;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this.runTimeoutOutsideZone(() => {\n            rippleRef.state = RippleState.VISIBLE;\n            if (!config.persistent && !this._isMousedown) {\n                rippleRef.fadeOut();\n            }\n        }, duration);\n        return rippleRef;\n    }\n    /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n    fadeOutRipple(rippleRef) {\n        // For ripples that are not active anymore, don't re-un the fade-out animation.\n        if (!this._activeRipples.delete(rippleRef)) {\n            return;\n        }\n        let /** @type {?} */ rippleEl = rippleRef.element;\n        rippleEl.style.transitionDuration = `${RIPPLE_FADE_OUT_DURATION}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = RippleState.FADING_OUT;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this.runTimeoutOutsideZone(() => {\n            rippleRef.state = RippleState.HIDDEN; /** @type {?} */\n            ((rippleEl.parentNode)).removeChild(rippleEl);\n        }, RIPPLE_FADE_OUT_DURATION);\n    }\n    /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._activeRipples.forEach(ripple => ripple.fadeOut());\n    }\n    /**\n     * Sets the trigger element and registers the mouse events.\n     * @param {?} element\n     * @return {?}\n     */\n    setTriggerElement(element) {\n        // Remove all previously register event listeners from the trigger element.\n        if (this._triggerElement) {\n            this._triggerEvents.forEach((fn, type) => {\n                /** @type {?} */ ((this._triggerElement)).removeEventListener(type, fn);\n            });\n        }\n        if (element) {\n            // If the element is not null, register all event listeners on the trigger element.\n            this._ngZone.runOutsideAngular(() => {\n                this._triggerEvents.forEach((fn, type) => element.addEventListener(type, fn));\n            });\n        }\n        this._triggerElement = element;\n    }\n    /**\n     * Function being called whenever the trigger is being pressed.\n     * @param {?} event\n     * @return {?}\n     */\n    onMousedown(event) {\n        if (!this.rippleDisabled) {\n            this._isMousedown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this.rippleConfig);\n        }\n    }\n    /**\n     * Function being called whenever the trigger is being released.\n     * @return {?}\n     */\n    onMouseup() {\n        if (!this._isMousedown) {\n            return;\n        }\n        this._isMousedown = false;\n        // Fade-out all ripples that are completely visible and not persistent.\n        this._activeRipples.forEach(ripple => {\n            if (!ripple.config.persistent && ripple.state === RippleState.VISIBLE) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n    runTimeoutOutsideZone(fn, delay = 0) {\n        this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n    }\n}\nfunction RippleRenderer_tsickle_Closure_declarations() {\n    /**\n     * Element where the ripples are being added to.\n     * @type {?}\n     */\n    RippleRenderer.prototype._containerElement;\n    /**\n     * Element which triggers the ripple elements on mouse events.\n     * @type {?}\n     */\n    RippleRenderer.prototype._triggerElement;\n    /**\n     * Whether the mouse is currently down or not.\n     * @type {?}\n     */\n    RippleRenderer.prototype._isMousedown;\n    /**\n     * Events to be registered on the trigger element.\n     * @type {?}\n     */\n    RippleRenderer.prototype._triggerEvents;\n    /**\n     * Set of currently active ripple references.\n     * @type {?}\n     */\n    RippleRenderer.prototype._activeRipples;\n    /**\n     * Ripple config for all ripples created by events.\n     * @type {?}\n     */\n    RippleRenderer.prototype.rippleConfig;\n    /**\n     * Whether mouse ripples should be created or not.\n     * @type {?}\n     */\n    RippleRenderer.prototype.rippleDisabled;\n    /** @type {?} */\n    RippleRenderer.prototype._ngZone;\n}\n/**\n * Enforces a style recalculation of a DOM element by computing its styles.\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    const /** @type {?} */ distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    const /** @type {?} */ distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n//# sourceMappingURL=ripple-renderer.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, Input, Inject, NgZone, InjectionToken, Optional, } from \"@angular/core\";\nimport { Platform } from \"@angular/cdk/platform\";\nimport { RippleRenderer } from \"./ripple-renderer\";\n/**\n * @record\n */\nexport function RippleGlobalOptions() { }\nfunction RippleGlobalOptions_tsickle_Closure_declarations() {\n    /** @type {?|undefined} */\n    RippleGlobalOptions.prototype.disabled;\n    /** @type {?|undefined} */\n    RippleGlobalOptions.prototype.baseSpeedFactor;\n}\n/**\n * Injection token that can be used to specify the global ripple options.\n */\nexport const /** @type {?} */ MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nexport class MatRipple {\n    /**\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?} globalOptions\n     */\n    constructor(elementRef, ngZone, platform, globalOptions) {\n        this._rippleRenderer = new RippleRenderer(elementRef, ngZone, platform);\n        this._globalOptions = globalOptions ? globalOptions : {};\n        this._updateRippleRenderer();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['trigger'] && this.trigger) {\n            this._rippleRenderer.setTriggerElement(this.trigger);\n        }\n        this._updateRippleRenderer();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // Set the trigger element to null to cleanup all listeners.\n        this._rippleRenderer.setTriggerElement(null);\n    }\n    /**\n     * Launches a manual ripple at the specified position.\n     * @param {?} x\n     * @param {?} y\n     * @param {?=} config\n     * @return {?}\n     */\n    launch(x, y, config = this.rippleConfig) {\n        return this._rippleRenderer.fadeInRipple(x, y, config);\n    }\n    /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @return {?}\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            speedFactor: this.speedFactor * (this._globalOptions.baseSpeedFactor || 1),\n            radius: this.radius,\n            color: this.color\n        };\n    }\n    /**\n     * Updates the ripple renderer with the latest ripple configuration.\n     * @return {?}\n     */\n    _updateRippleRenderer() {\n        this._rippleRenderer.rippleDisabled = this._globalOptions.disabled || this.disabled;\n        this._rippleRenderer.rippleConfig = this.rippleConfig;\n    }\n}\nfunction MatRipple_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatRipple.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatRipple.ctorParameters;\n    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\n    MatRipple.propDecorators;\n    /**\n     * The element that triggers the ripple when click events are received. Defaults to the\n     * directive's host element.\n     * @type {?}\n     */\n    MatRipple.prototype.trigger;\n    /**\n     * Whether the ripple always originates from the center of the host element's bounds, rather\n     * than originating from the location of the click event.\n     * @type {?}\n     */\n    MatRipple.prototype.centered;\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     * @type {?}\n     */\n    MatRipple.prototype.disabled;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     * @type {?}\n     */\n    MatRipple.prototype.radius;\n    /**\n     * If set, the normal duration of ripple animations is divided by this value. For example,\n     * setting it to 0.5 will cause the animations to take twice as long.\n     * A changed speedFactor will not modify the fade-out duration of the ripples.\n     * @type {?}\n     */\n    MatRipple.prototype.speedFactor;\n    /**\n     * Custom color for ripples.\n     * @type {?}\n     */\n    MatRipple.prototype.color;\n    /**\n     * Whether foreground ripples should be visible outside the component's bounds.\n     * @type {?}\n     */\n    MatRipple.prototype.unbounded;\n    /**\n     * Renderer for the ripple DOM manipulations.\n     * @type {?}\n     */\n    MatRipple.prototype._rippleRenderer;\n    /**\n     * Options that are set globally for all ripples.\n     * @type {?}\n     */\n    MatRipple.prototype._globalOptions;\n}\n//# sourceMappingURL=ripple.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule } from \"@angular/core\";\nimport { PlatformModule } from \"@angular/cdk/platform\";\nimport { MatCommonModule } from \"../common-behaviors/common-module\";\nimport { MatRipple } from \"./ripple\";\nexport { MatRipple, MAT_RIPPLE_GLOBAL_OPTIONS } from \"./ripple\";\nexport { RippleRef, RippleState } from \"./ripple-ref\";\nexport { RIPPLE_FADE_IN_DURATION, RIPPLE_FADE_OUT_DURATION } from \"./ripple-renderer\";\nexport class MatRippleModule {\n}\nfunction MatRippleModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatRippleModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatRippleModule.ctorParameters;\n}\n//# sourceMappingURL=index.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from \"@angular/core\";\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with <mat-checkbox> and should *not* be used if the user would directly interact\n * with the checkbox. The pseudo-checkbox should only be used as an implementation detail of\n * more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nexport class MatPseudoCheckbox {\n}\nfunction MatPseudoCheckbox_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatPseudoCheckbox.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatPseudoCheckbox.ctorParameters;\n    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\n    MatPseudoCheckbox.propDecorators;\n    /**\n     * Display state of the checkbox.\n     * @type {?}\n     */\n    MatPseudoCheckbox.prototype.state;\n    /**\n     * Whether the checkbox is disabled.\n     * @type {?}\n     */\n    MatPseudoCheckbox.prototype.disabled;\n}\n//# sourceMappingURL=pseudo-checkbox.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule } from \"@angular/core\";\nimport { MatPseudoCheckbox } from \"./pseudo-checkbox/pseudo-checkbox\";\nexport class MatPseudoCheckboxModule {\n}\nfunction MatPseudoCheckboxModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatPseudoCheckboxModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatPseudoCheckboxModule.ctorParameters;\n}\nexport { MatPseudoCheckbox } from \"./pseudo-checkbox/pseudo-checkbox\";\n//# sourceMappingURL=index.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from \"@angular/core\";\nimport { mixinDisabled } from \"../common-behaviors/disabled\";\n/**\n * \\@docs-private\n */\nexport class MatOptgroupBase {\n}\nexport const /** @type {?} */ _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n// Counter for unique group ids.\nlet /** @type {?} */ _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `mat-option`.\n */\nexport class MatOptgroup extends _MatOptgroupMixinBase {\n}\nfunction MatOptgroup_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatOptgroup.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatOptgroup.ctorParameters;\n    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\n    MatOptgroup.propDecorators;\n    /**\n     * Label for the option group.\n     * @type {?}\n     */\n    MatOptgroup.prototype.label;\n    /**\n     * Unique id for the underlying label.\n     * @type {?}\n     */\n    MatOptgroup.prototype._labelId;\n}\n//# sourceMappingURL=optgroup.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { coerceBooleanProperty } from \"@angular/cdk/coercion\";\nimport { ENTER, SPACE } from \"@angular/cdk/keycodes\";\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Optional, Output, ViewEncapsulation, InjectionToken, Inject, } from \"@angular/core\";\nimport { MatOptgroup } from \"./optgroup\";\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet /** @type {?} */ _uniqueIdCounter = 0;\n/**\n * Event object emitted by MatOption when selected or deselected.\n */\nexport class MatOptionSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?=} isUserInput\n     */\n    constructor(source, isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\nfunction MatOptionSelectionChange_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MatOptionSelectionChange.prototype.source;\n    /** @type {?} */\n    MatOptionSelectionChange.prototype.isUserInput;\n}\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * \\@docs-private\n * @record\n */\nexport function MatOptionParentComponent() { }\nfunction MatOptionParentComponent_tsickle_Closure_declarations() {\n    /** @type {?|undefined} */\n    MatOptionParentComponent.prototype.disableRipple;\n    /** @type {?|undefined} */\n    MatOptionParentComponent.prototype.multiple;\n}\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const /** @type {?} */ MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * Single option inside of a `<mat-select>` element.\n */\nexport class MatOption {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?} _parent\n     * @param {?} group\n     */\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n    }\n    /**\n     * Whether the wrapping component is in multiple selection mode.\n     * @return {?}\n     */\n    get multiple() { return this._parent && this._parent.multiple; }\n    /**\n     * The unique ID of the option.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * Whether or not the option is currently selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Whether ripples for the option are disabled.\n     * @return {?}\n     */\n    get disableRipple() { return this._parent && this._parent.disableRipple; }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     * @return {?}\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /**\n     * Selects the option.\n     * @return {?}\n     */\n    select() {\n        this._selected = true;\n        this._changeDetectorRef.markForCheck();\n        this._emitSelectionChangeEvent();\n    }\n    /**\n     * Deselects the option.\n     * @return {?}\n     */\n    deselect() {\n        this._selected = false;\n        this._changeDetectorRef.markForCheck();\n        this._emitSelectionChangeEvent();\n    }\n    /**\n     * Sets focus onto this option.\n     * @return {?}\n     */\n    focus() {\n        const /** @type {?} */ element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        return this.viewValue;\n    }\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.\n     * @return {?}\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Gets the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * Emits the selection change event.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n    /**\n     * Counts the amount of option group labels that precede the specified option.\n     * @param {?} optionIndex Index of the option at which to start counting.\n     * @param {?} options Flat list of all of the options.\n     * @param {?} optionGroups Flat list of all of the option groups.\n     * @return {?}\n     */\n    static countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n        if (optionGroups.length) {\n            let /** @type {?} */ optionsArray = options.toArray();\n            let /** @type {?} */ groups = optionGroups.toArray();\n            let /** @type {?} */ groupCounter = 0;\n            for (let /** @type {?} */ i = 0; i < optionIndex + 1; i++) {\n                if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                    groupCounter++;\n                }\n            }\n            return groupCounter;\n        }\n        return 0;\n    }\n}\nfunction MatOption_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatOption.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatOption.ctorParameters;\n    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\n    MatOption.propDecorators;\n    /** @type {?} */\n    MatOption.prototype._selected;\n    /** @type {?} */\n    MatOption.prototype._active;\n    /** @type {?} */\n    MatOption.prototype._disabled;\n    /** @type {?} */\n    MatOption.prototype._id;\n    /**\n     * The form value of the option.\n     * @type {?}\n     */\n    MatOption.prototype.value;\n    /**\n     * Event emitted when the option is selected or deselected.\n     * @type {?}\n     */\n    MatOption.prototype.onSelectionChange;\n    /** @type {?} */\n    MatOption.prototype._element;\n    /** @type {?} */\n    MatOption.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatOption.prototype._parent;\n    /** @type {?} */\n    MatOption.prototype.group;\n}\n//# sourceMappingURL=option.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatRippleModule } from \"../ripple/index\";\nimport { MatPseudoCheckboxModule } from \"../selection/index\";\nimport { MatOption } from \"./option\";\nimport { MatOptgroup } from \"./optgroup\";\nexport class MatOptionModule {\n}\nfunction MatOptionModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatOptionModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatOptionModule.ctorParameters;\n}\nexport { MatOptionSelectionChange, MAT_OPTION_PARENT_COMPONENT, MatOption } from \"./option\";\nexport { MatOptgroupBase, _MatOptgroupMixinBase, MatOptgroup } from \"./optgroup\";\n//# sourceMappingURL=index.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken } from \"@angular/core\";\n/**\n * InjectionToken that can be used to specify the global placeholder options.\n */\nexport const /** @type {?} */ MAT_PLACEHOLDER_GLOBAL_OPTIONS = new InjectionToken('mat-placeholder-global-options');\n/**\n * @record\n */\nexport function PlaceholderOptions() { }\nfunction PlaceholderOptions_tsickle_Closure_declarations() {\n    /** @type {?|undefined} */\n    PlaceholderOptions.prototype.float;\n}\n//# sourceMappingURL=placeholder-options.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Applies a CSS transform to an element, including browser-prefixed properties.\n * @param {?} element\n * @param {?} transformValue\n * @return {?}\n */\nexport function applyCssTransform(element, transformValue) {\n    // It's important to trim the result, because the browser will ignore the set operation\n    // if the string contains only whitespace.\n    let /** @type {?} */ value = transformValue.trim();\n    element.style.transform = value;\n    element.style.webkitTransform = value;\n}\n//# sourceMappingURL=apply-transform.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { applyCssTransform } from \"./apply-transform\";\n//# sourceMappingURL=index.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n */\nexport const /** @type {?} */ JAN = 0, /** @type {?} */ FEB = 1, /** @type {?} */ MAR = 2, /** @type {?} */ APR = 3, /** @type {?} */ MAY = 4, /** @type {?} */ JUN = 5, /** @type {?} */ JUL = 6, /** @type {?} */ AUG = 7, /** @type {?} */ SEP = 8, /** @type {?} */\nOCT = 9, /** @type {?} */ NOV = 10, /** @type {?} */ DEC = 11;\n//# sourceMappingURL=month-constants.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { AnimationCurves, AnimationDurations } from \"./animation/animation\";\nexport { MatCommonModule, MATERIAL_SANITY_CHECKS, mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex } from \"./common-behaviors/index\";\nexport { NativeDateModule, MatNativeDateModule, MAT_DATE_LOCALE, MAT_DATE_LOCALE_PROVIDER, DateAdapter, MAT_DATE_FORMATS, NativeDateAdapter, MAT_NATIVE_DATE_FORMATS } from \"./datetime/index\";\nexport { ShowOnDirtyErrorStateMatcher, ErrorStateMatcher } from \"./error/error-options\";\nexport { GestureConfig } from \"./gestures/gesture-config\";\nexport { MatLine, MatLineSetter, MatLineModule } from \"./line/line\";\nexport { MatOptionModule, MatOptionSelectionChange, MAT_OPTION_PARENT_COMPONENT, MatOption, MatOptgroupBase, _MatOptgroupMixinBase, MatOptgroup } from \"./option/index\";\nexport { MAT_PLACEHOLDER_GLOBAL_OPTIONS } from \"./placeholder/placeholder-options\";\nexport { MatRipple, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRef, RippleState, RIPPLE_FADE_IN_DURATION, RIPPLE_FADE_OUT_DURATION, MatRippleModule } from \"./ripple/index\";\nexport { MatPseudoCheckboxModule, MatPseudoCheckbox } from \"./selection/index\";\nexport { applyCssTransform } from \"./style/index\";\nexport { extendObject } from \"./util/object-extend\";\n// TODO: don't have this\nexport { JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC } from \"./testing/month-constants\";\n//# sourceMappingURL=public-api.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { AnimationCurves, AnimationDurations, MatCommonModule, MATERIAL_SANITY_CHECKS, mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, NativeDateModule, MatNativeDateModule, MAT_DATE_LOCALE, MAT_DATE_LOCALE_PROVIDER, DateAdapter, MAT_DATE_FORMATS, NativeDateAdapter, MAT_NATIVE_DATE_FORMATS, ShowOnDirtyErrorStateMatcher, ErrorStateMatcher, GestureConfig, MatLine, MatLineSetter, MatLineModule, MatOptionModule, MatOptionSelectionChange, MAT_OPTION_PARENT_COMPONENT, MatOption, MatOptgroupBase, _MatOptgroupMixinBase, MatOptgroup, MAT_PLACEHOLDER_GLOBAL_OPTIONS, MatRipple, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRef, RippleState, RIPPLE_FADE_IN_DURATION, RIPPLE_FADE_OUT_DURATION, MatRippleModule, MatPseudoCheckboxModule, MatPseudoCheckbox, applyCssTransform, extendObject, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC } from \"./public-api\";\nexport { RippleRenderer as ɵa0 } from \"./ripple/ripple-renderer\";\n//# sourceMappingURL=index.js.map"],"names":["ɵ0"],"mappings":"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"}