{"version":3,"file":"toolbar.js","sources":["../../packages/material/toolbar/toolbar.js","../../packages/material/toolbar/toolbar-module.js","../../packages/material/toolbar/public-api.js","../../packages/material/toolbar/index.js"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, isDevMode, QueryList, Renderer2, ViewEncapsulation } from \"@angular/core\";\nimport { mixinColor } from \"@angular/material/core\";\nimport { Platform } from \"@angular/cdk/platform\";\n/**\n * \\@docs-private\n */\nexport class MatToolbarBase {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n    }\n}\nfunction MatToolbarBase_tsickle_Closure_declarations() {\n    /** @type {?} */\n    MatToolbarBase.prototype._renderer;\n    /** @type {?} */\n    MatToolbarBase.prototype._elementRef;\n}\nexport const /** @type {?} */ _MatToolbarMixinBase = mixinColor(MatToolbarBase);\nexport class MatToolbarRow {\n}\nfunction MatToolbarRow_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatToolbarRow.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatToolbarRow.ctorParameters;\n}\nexport class MatToolbar extends _MatToolbarMixinBase {\n    /**\n     * @param {?} renderer\n     * @param {?} elementRef\n     * @param {?} _platform\n     */\n    constructor(renderer, elementRef, _platform) {\n        super(renderer, elementRef);\n        this._platform = _platform;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!isDevMode() || !this._platform.isBrowser) {\n            return;\n        }\n        this._checkToolbarMixedModes();\n        this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     * @return {?}\n     */\n    _checkToolbarMixedModes() {\n        if (!this._toolbarRows.length) {\n            return;\n        }\n        // Check if there are any other DOM nodes that can display content but aren't inside of\n        // a <mat-toolbar-row> element.\n        const /** @type {?} */ isCombinedUsage = [].slice.call(this._elementRef.nativeElement.childNodes)\n            .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n            .filter(node => node.nodeType !== Node.COMMENT_NODE)\n            .some(node => node.textContent.trim());\n        if (isCombinedUsage) {\n            throwToolbarMixedModesError();\n        }\n    }\n}\nfunction MatToolbar_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatToolbar.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatToolbar.ctorParameters;\n    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\n    MatToolbar.propDecorators;\n    /**\n     * Reference to all toolbar row elements that have been projected.\n     * @type {?}\n     */\n    MatToolbar.prototype._toolbarRows;\n    /** @type {?} */\n    MatToolbar.prototype._platform;\n}\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * \\@docs-private\n * @return {?}\n */\nexport function throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n//# sourceMappingURL=toolbar.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule } from \"@angular/core\";\nimport { MatCommonModule } from \"@angular/material/core\";\nimport { PlatformModule } from \"@angular/cdk/platform\";\nimport { MatToolbar, MatToolbarRow } from \"./toolbar\";\nexport class MatToolbarModule {\n}\nfunction MatToolbarModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    MatToolbarModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    MatToolbarModule.ctorParameters;\n}\n//# sourceMappingURL=toolbar-module.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { MatToolbarModule } from \"./toolbar-module\";\nexport { MatToolbarBase, _MatToolbarMixinBase, MatToolbarRow, MatToolbar, throwToolbarMixedModesError } from \"./toolbar\";\n//# sourceMappingURL=public-api.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { MatToolbarModule, MatToolbarBase, _MatToolbarMixinBase, MatToolbarRow, MatToolbar, throwToolbarMixedModesError } from \"./public-api\";\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;AAWA,AACA,AACA,AACA;;;AAGA,AAAO,MAAM,cAAc,CAAC;;;;;IAKxB,WAAW,CAAC,SAAS,EAAE,WAAW,EAAE;QAChC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAClC;CACJ;AACD,AAMA,AAAO,MAAuB,oBAAoB,GAAG,UAAU,CAAC,cAAc,CAAC,CAAC;AAChF,AAAO,MAAM,aAAa,CAAC;CAC1B;AACD,AASA,AAAO,MAAM,UAAU,SAAS,oBAAoB,CAAC;;;;;;IAMjD,WAAW,CAAC,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE;QACzC,KAAK,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC9B;;;;IAID,eAAe,GAAG;QACd,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;YAC3C,OAAO;SACV;QACD,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,uBAAuB,EAAE,CAAC,CAAC;KAC7E;;;;;IAKD,uBAAuB,GAAG;QACtB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;YAC3B,OAAO;SACV;;;QAGD,uBAAuB,eAAe,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,UAAU,CAAC;aAC5F,MAAM,CAAC,IAAI,IAAI,EAAE,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC;aAC/E,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,CAAC;aACnD,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;QAC3C,IAAI,eAAe,EAAE;YACjB,2BAA2B,EAAE,CAAC;SACjC;KACJ;CACJ;AACD,AAkBA;;;;;AAKA,AAAO,SAAS,2BAA2B,GAAG;IAC1C,MAAM,KAAK,CAAC,6DAA6D;QACrE,wFAAwF;QACxF,+CAA+C,CAAC,CAAC;CACxD,AACD;;AChHA;;;;;AAWA,AACA,AACA,AACA,AACA,AAAO,MAAM,gBAAgB,CAAC;CAC7B,AACD,AAQC,AACD;;AC1BA;;;GAGG,AAQH,AACA,AAAyH,AACzH;;ACbA;;;;;;GAMG,AACH,AAA8I,AAC9I;;"}