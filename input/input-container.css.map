{"version":3,"file":"input-container.css","sources":["input/input-container.scss","core/style/_variables.scss","core/typography/_typography.scss","core/style/_vendor-prefixes.scss","core/style/_form-common.scss"],"sourcesContent":["@import '../core/style/variables';\n@import '../core/style/vendor-prefixes';\n@import '../core/style/form-common';\n\n\n$mat-input-floating-placeholder-scale-factor: 0.75 !default;\n\n// Gradient for showing the dashed line when the input is disabled.\n$mat-input-underline-disabled-background-image:\n    linear-gradient(to right, rgba(0, 0, 0, 0.26) 0%, rgba(0, 0, 0, 0.26) 33%, transparent 0%);\n\n// Applies a floating placeholder above the input itself.\n@mixin mat-input-placeholder-floating {\n  display: block;\n  transform: translateY(-1.35em) scale($mat-input-floating-placeholder-scale-factor);\n  width: 100% / $mat-input-floating-placeholder-scale-factor;\n}\n\n.mat-input-container {\n  display: inline-block;\n  position: relative;\n  font-family: $mat-font-family;\n  line-height: normal;\n\n  // To avoid problems with text-align.\n  text-align: left;\n\n  [dir='rtl'] & {\n    text-align: right;\n  }\n\n  // Allow icons in a prefix/suffix/hint/etc to adapt to the correct size.\n  & .mat-icon {\n    width: auto;\n    height: auto;\n    font-size: 100%;\n    vertical-align: top;\n  }\n}\n\n// Global wrapper. We need to apply margin to the element for spacing, but\n// cannot apply it to the host element directly.\n.mat-input-wrapper {\n  margin: 1em 0;\n  // Account for the underline which has 4px of margin + 2px of border.\n  padding-bottom: 6px;\n}\n\n// We use a table layout to baseline align the prefix and suffix classes.\n// The underline is outside of it so it can cover all of the elements under\n// this table.\n// Flex does not respect the baseline. What we really want is akin to a table\n// as want an inline-block where elements don't wrap.\n.mat-input-table {\n  display: inline-table;\n  flex-flow: column;\n  vertical-align: bottom;\n  width: 100%;\n\n  & > * {\n    display: table-cell;\n  }\n}\n\n.mat-input-infix {\n  position: relative;\n}\n\n// The Input element proper.\n.mat-input-element {\n  // Font needs to be inherited, because by default <input> has a system font.\n  font: inherit;\n\n  // The Material input should match whatever background it is above.\n  background: transparent;\n\n  // If background matches current background then so should the color for proper contrast\n  color: currentColor;\n\n  // By default, <input> has a padding, border, outline and a default width.\n  border: none;\n  outline: none;\n  padding: 0;\n  width: 100%;\n\n  .mat-end & {\n    text-align: right;\n\n    [dir='rtl'] & {\n      text-align: left;\n    }\n  }\n\n  // Undo the red box-shadow glow added by Firefox on invalid inputs.\n  // See https://developer.mozilla.org/en-US/docs/Web/CSS/:-moz-ui-invalid\n  &:-moz-ui-invalid {\n    box-shadow: none;\n  }\n\n  // Pseudo-class for Chrome and Safari auto-fill to move the placeholder to\n  // the floating position. This is necessary because these browsers do not actually\n  // fire any events when a form auto-fill is occurring.\n  // Once the autofill is committed, a change event happen and the regular md-input-container\n  // classes take over to fulfill this behaviour.\n  // Assumes the autofill is non-empty.\n  &:-webkit-autofill + .mat-input-placeholder-wrapper .mat-float {\n    @include mat-input-placeholder-floating;\n  }\n\n  // Note that we can't use something like visibility: hidden or\n  // display: none, because IE ends up preventing the user from\n  // focusing the input altogether.\n  @include input-placeholder {\n    color: transparent;\n  }\n}\n\n// The placeholder label. This is invisible unless it is. The logic to show it is\n// basically `empty || (float && (!empty || focused))`. Float is dependent on the\n// `floatingPlaceholder` input.\n.mat-input-placeholder {\n  // The placeholder is after the <input>, but needs to be aligned top-left of the\n  // infix <div>.\n  position: absolute;\n  left: 0;\n  top: 0;\n\n  font-size: 100%;\n  pointer-events: none;  // We shouldn't catch mouse events (let them through).\n  z-index: 1;\n  padding-top: 1em;\n\n  // Put ellipsis text overflow.\n  width: 100%;\n  display: none;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  transform: translateY(0);\n  transform-origin: bottom left;\n  transition: transform $swift-ease-out-duration $swift-ease-out-timing-function,\n              color $swift-ease-out-duration $swift-ease-out-timing-function,\n              width $swift-ease-out-duration $swift-ease-out-timing-function;\n\n  &.mat-empty {\n    display: block;\n    cursor: text;\n  }\n\n  // Show the placeholder above the input when it's not empty, or focused.\n  &.mat-float:not(.mat-empty), .mat-focused &.mat-float {\n    @include mat-input-placeholder-floating;\n  }\n\n  [dir='rtl'] & {\n    transform-origin: bottom right;\n    left: auto;\n    right: 0;\n  }\n}\n\n// Used to hide the placeholder overflow on IE, since IE doesn't take transform into account when\n// determining overflow.\n.mat-input-placeholder-wrapper {\n  position: absolute;\n  left: 0;\n  top: -1em;\n  width: 100%;\n  padding-top: 1em;\n  overflow: hidden;\n  pointer-events: none;  // We shouldn't catch mouse events (let them through).\n  transform: translate3d(0, 0, 0); // Prevents the label from shifting after the animation is done.\n\n  // Keeps the element height since the placeholder text is `position: absolute`.\n  &::after {\n    content: '';\n    display: inline-table;\n  }\n}\n\n\n// The underline is what's shown under the input, its prefix and its suffix.\n// The ripple is the blue animation coming on top of it.\n.mat-input-underline {\n  position: absolute;\n  height: 1px;\n  width: 100%;\n  margin-top: 4px;\n  border-top-width: 1px;\n  border-top-style: solid;\n\n  &.mat-disabled {\n    @include mat-control-disabled-underline();\n    border-top: 0;\n    background-position: 0;\n  }\n\n  .mat-input-ripple {\n    position: absolute;\n    height: 2px;\n    z-index: 1;\n    top: -1px;\n    width: 100%;\n    transform-origin: top;\n    opacity: 0;\n    transition: opacity $swift-ease-out-duration $swift-ease-out-timing-function;\n\n    .mat-focused & {\n      opacity: 1;\n    }\n  }\n}\n\n// The hint is shown below the underline. There can be more than one; one at the start\n// and one at the end.\n.mat-hint {\n  display: block;\n  position: absolute;\n  font-size: 75%;\n  bottom: 0;\n\n  &.mat-right {\n    right: 0;\n  }\n\n  [dir='rtl'] & {\n    right: 0;\n    left: auto;\n\n    &.mat-right {\n      right: auto;\n      left: 0;\n    }\n  }\n}\n\n.mat-input-prefix, .mat-input-suffix {\n  // Prevents the prefix and suffix from stretching together with the container.\n  width: 0.1px;\n  white-space: nowrap;\n}\n","@import '../typography/typography';\n\n\n// Typography\n$mat-body-font-size-base: rem(1.4) !default;\n$mat-font-family: Roboto, 'Helvetica Neue', sans-serif !default;\n\n// Media queries\n// TODO: Find a way to respect media query ranges.\n// TODO: For example the xs-breakpoint should not interfere with the sm-breakpoint.\n$mat-xsmall: 'max-width: 600px';\n$mat-small: 'max-width: 960px';\n\n// TODO: Revisit all z-indices before beta\n// z-index master list\n\n$z-index-fab: 20 !default;\n$z-index-drawer: 100 !default;\n\n// Overlay z indices.\n\n// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$cdk-z-index-overlay-container: 1000;\n$cdk-z-index-overlay: 1000;\n$cdk-z-index-overlay-backdrop: 1000;\n\n// Background color for all of the backdrops\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.6);\n\n// Global constants\n$pi: 3.14159265;\n\n// Padding between input toggles and their labels\n$mat-toggle-padding: 8px !default;\n// Width and height of input toggles\n$mat-toggle-size: 20px !default;\n\n// Easing Curves\n// TODO(jelbourn): all of these need to be revisited\n\n// The default animation curves used by material design.\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n\n$swift-ease-out-duration: 400ms !default;\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\n\n$swift-ease-in-duration: 300ms !default;\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\n\n$swift-ease-in-out-duration: 500ms !default;\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\n\n$swift-linear-duration: 80ms !default;\n$swift-linear-timing-function: linear !default;\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\n","// Implement the rem unit with SCSS so we don't have to actually set a font-size on\n// the user's body element.\n@function rem($multiplier) {\n  $font-size: 10px;\n  @return $multiplier * $font-size;\n}\n","/* stylelint-disable material/no-prefixes */\n@mixin user-select($value) {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin cursor-grab {\n  cursor: -webkit-grab;\n  cursor: grab;\n}\n/* stylelint-enable */\n","\n// Gradient for showing the dashed line when the input is disabled.\n// Unlike using a border, a gradient allows us to adjust the spacing of the dotted line\n// to match the Material Design spec.\n$mat-underline-disabled-background-image:\n        linear-gradient(to right, rgba(0, 0, 0, 0.26) 0%, rgba(0, 0, 0, 0.26) 33%, transparent 0%);\n\n@mixin mat-control-disabled-underline {\n  background-image: $mat-underline-disabled-background-image;\n  background-size: 4px 1px;\n  background-repeat: repeat-x;\n}"],"names":[],"mappings":"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"}