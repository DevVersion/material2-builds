{"version":3,"file":"material.umd.js","sources":["../../node_modules/tslib/tslib.es6.js","material/core.es5.js","material/form-field.es5.js","material/autocomplete.es5.js","material/button.es5.js","material/button-toggle.es5.js","material/card.es5.js","material/checkbox.es5.js","material/chips.es5.js","material/dialog.es5.js","material/icon.es5.js","material/input.es5.js","material/datepicker.es5.js","material/expansion.es5.js","material/grid-list.es5.js","material/list.es5.js","material/menu.es5.js","material/select.es5.js","material/tooltip.es5.js","material/paginator.es5.js","material/progress-bar.es5.js","material/progress-spinner.es5.js","material/radio.es5.js","material/sidenav.es5.js","material/slide-toggle.es5.js","material/slider.es5.js","material/snack-bar.es5.js","material/sort.es5.js","material/stepper.es5.js","material/table.es5.js","material/tabs.es5.js","material/toolbar.es5.js","material.es5.js"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, LOCALE_ID, isDevMode } from '@angular/core';\nimport '@angular/cdk/bidi';\nimport { __extends } from 'tslib';\nimport * as tslib_1 from 'tslib';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport 'rxjs/Subject';\nimport { HammerGestureConfig } from '@angular/platform-browser';\nimport '@angular/common';\nimport '@angular/cdk/platform';\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n */\nvar AnimationCurves = /** @class */ (function () {\n    function AnimationCurves() {\n    }\n    return AnimationCurves;\n}());\n/**\n * \\@docs-private\n */\nvar AnimationDurations = /** @class */ (function () {\n    function AnimationDurations() {\n    }\n    return AnimationDurations;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n */\nvar MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks');\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nvar MatCommonModule = /** @class */ (function () {\n    function MatCommonModule(_sanityChecksEnabled) {\n        this._sanityChecksEnabled = _sanityChecksEnabled;\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n    /**\n     * Whether any sanity checks are enabled\n     * @return {?}\n     */\n    MatCommonModule.prototype._areChecksEnabled = /**\n     * Whether any sanity checks are enabled\n     * @return {?}\n     */\n    function () {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    };\n    /**\n     * Whether the code is running in tests.\n     * @return {?}\n     */\n    MatCommonModule.prototype._isTestEnv = /**\n     * Whether the code is running in tests.\n     * @return {?}\n     */\n    function () {\n        return window['__karma__'] || window['jasmine'];\n    };\n    /**\n     * @return {?}\n     */\n    MatCommonModule.prototype._checkDoctypeIsDefined = /**\n     * @return {?}\n     */\n    function () {\n        if (this._document && !this._document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatCommonModule.prototype._checkThemeIsPresent = /**\n     * @return {?}\n     */\n    function () {\n        if (this._document && typeof getComputedStyle === 'function') {\n            var /** @type {?} */ testElement = this._document.createElement('div');\n            testElement.classList.add('mat-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n            var /** @type {?} */ computedStyle = getComputedStyle(testElement);\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn('Could not find Angular Material core theme. Most Material ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: https://material.angular.io/guide/theming');\n            }\n            this._document.body.removeChild(testElement);\n        }\n    };\n    /** Checks whether HammerJS is available. */\n    /**\n     * Checks whether HammerJS is available.\n     * @return {?}\n     */\n    MatCommonModule.prototype._checkHammerIsAvailable = /**\n     * Checks whether HammerJS is available.\n     * @return {?}\n     */\n    function () {\n        if (this._areChecksEnabled() && !this._hasCheckedHammer && !window['Hammer']) {\n            console.warn('Could not find HammerJS. Certain Angular Material components may not work correctly.');\n        }\n        this._hasCheckedHammer = true;\n    };\n    return MatCommonModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\n\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisabled(base) {\n    return /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return _super.apply(this, args) || this;\n        }\n        Object.defineProperty(class_1.prototype, \"disabled\", {\n            get: /**\n             * @return {?}\n             */\n            function () { return this._disabled; },\n            set: /**\n             * @param {?} value\n             * @return {?}\n             */\n            function (value) { this._disabled = coerceBooleanProperty(value); },\n            enumerable: true,\n            configurable: true\n        });\n        return class_1;\n    }(base));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\n\n/**\n * \\@docs-private\n * @record\n */\n\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\nfunction mixinColor(base, defaultColor) {\n    return /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _this = _super.apply(this, args) || this;\n            // Set the default color that can be specified from the mixin.\n            // Set the default color that can be specified from the mixin.\n            _this.color = defaultColor;\n            return _this;\n        }\n        Object.defineProperty(class_1.prototype, \"color\", {\n            get: /**\n             * @return {?}\n             */\n            function () { return this._color; },\n            set: /**\n             * @param {?} value\n             * @return {?}\n             */\n            function (value) {\n                var /** @type {?} */ colorPalette = value || defaultColor;\n                if (colorPalette !== this._color) {\n                    if (this._color) {\n                        this._renderer.removeClass(this._elementRef.nativeElement, \"mat-\" + this._color);\n                    }\n                    if (colorPalette) {\n                        this._renderer.addClass(this._elementRef.nativeElement, \"mat-\" + colorPalette);\n                    }\n                    this._color = colorPalette;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return class_1;\n    }(base));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\n\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisableRipple(base) {\n    return /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return _super.apply(this, args) || this;\n        }\n        Object.defineProperty(class_1.prototype, \"disableRipple\", {\n            /** Whether the ripple effect is disabled or not. */\n            get: /**\n             * Whether the ripple effect is disabled or not.\n             * @return {?}\n             */\n            function () { return this._disableRipple; },\n            set: /**\n             * @param {?} value\n             * @return {?}\n             */\n            function (value) { this._disableRipple = coerceBooleanProperty(value); },\n            enumerable: true,\n            configurable: true\n        });\n        return class_1;\n    }(base));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\n\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\nfunction mixinTabIndex(base, defaultTabIndex) {\n    if (defaultTabIndex === void 0) { defaultTabIndex = 0; }\n    return /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return _super.apply(this, args) || this;\n        }\n        Object.defineProperty(class_1.prototype, \"tabIndex\", {\n            get: /**\n             * @return {?}\n             */\n            function () { return this.disabled ? -1 : this._tabIndex; },\n            set: /**\n             * @param {?} value\n             * @return {?}\n             */\n            function (value) {\n                // If the specified tabIndex value is null or undefined, fall back to the default value.\n                this._tabIndex = value != null ? value : defaultTabIndex;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return class_1;\n    }(base));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * InjectionToken for datepicker that can be used to override default locale code.\n */\nvar MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE');\n/**\n * Provider for MAT_DATE_LOCALE injection token.\n */\nvar MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID };\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n */\nvar DateAdapter = /** @class */ (function () {\n    function DateAdapter() {\n    }\n    Object.defineProperty(DateAdapter.prototype, \"localeChanges\", {\n        /** A stream that emits when the locale changes. */\n        get: /**\n         * A stream that emits when the locale changes.\n         * @return {?}\n         */\n        function () { return this._localeChanges; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of it's `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param value The value to be deserialized into a date object.\n     * @returns The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of it's `\\@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param {?} value The value to be deserialized into a date object.\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    DateAdapter.prototype.deserialize = /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of it's `\\@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param {?} value The value to be deserialized into a date object.\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    function (value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    };\n    /**\n     * Sets the locale used for all dates.\n     * @param locale The new locale.\n     */\n    /**\n     * Sets the locale used for all dates.\n     * @param {?} locale The new locale.\n     * @return {?}\n     */\n    DateAdapter.prototype.setLocale = /**\n     * Sets the locale used for all dates.\n     * @param {?} locale The new locale.\n     * @return {?}\n     */\n    function (locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    };\n    /**\n     * Compares two dates.\n     * @param first The first date to compare.\n     * @param second The second date to compare.\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    /**\n     * Compares two dates.\n     * @param {?} first The first date to compare.\n     * @param {?} second The second date to compare.\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    DateAdapter.prototype.compareDate = /**\n     * Compares two dates.\n     * @param {?} first The first date to compare.\n     * @param {?} second The second date to compare.\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    function (first, second) {\n        return this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second);\n    };\n    /**\n     * Checks if two dates are equal.\n     * @param first The first date to check.\n     * @param second The second date to check.\n     * @returns Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    /**\n     * Checks if two dates are equal.\n     * @param {?} first The first date to check.\n     * @param {?} second The second date to check.\n     * @return {?} Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    DateAdapter.prototype.sameDate = /**\n     * Checks if two dates are equal.\n     * @param {?} first The first date to check.\n     * @param {?} second The second date to check.\n     * @return {?} Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    function (first, second) {\n        if (first && second) {\n            var /** @type {?} */ firstValid = this.isValid(first);\n            var /** @type {?} */ secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    };\n    /**\n     * Clamp the given date between min and max dates.\n     * @param date The date to clamp.\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    /**\n     * Clamp the given date between min and max dates.\n     * @param {?} date The date to clamp.\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    DateAdapter.prototype.clampDate = /**\n     * Clamp the given date between min and max dates.\n     * @param {?} date The date to clamp.\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    function (date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    };\n    return DateAdapter;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param {?} dest The object which will have properties copied to it.\n * @param {...?} sources The source objects from which properties will be copied.\n * @return {?}\n */\nfunction extendObject(dest) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    if (dest == null) {\n        throw TypeError('Cannot convert undefined or null to object');\n    }\n    for (var _a = 0, sources_1 = sources; _a < sources_1.length; _a++) {\n        var source = sources_1[_a];\n        if (source != null) {\n            for (var /** @type {?} */ key in source) {\n                if (source.hasOwnProperty(key)) {\n                    dest[key] = source[key];\n                }\n            }\n        }\n    }\n    return dest;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Whether the browser supports the Intl API.\n */\nvar SUPPORTS_INTL_API = typeof Intl != 'undefined';\n/**\n * The default month names to use if Intl API is not available.\n */\nvar DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nvar ɵ0$1 = function (i) { return String(i + 1); };\n/**\n * The default date names to use if Intl API is not available.\n */\nvar DEFAULT_DATE_NAMES = range(31, ɵ0$1);\n/**\n * The default day of the week names to use if Intl API is not available.\n */\nvar DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nvar ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    var /** @type {?} */ valuesArray = Array(length);\n    for (var /** @type {?} */ i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nvar NativeDateAdapter = /** @class */ (function (_super) {\n    __extends(NativeDateAdapter, _super);\n    function NativeDateAdapter(matDateLocale) {\n        var _this = _super.call(this) || this;\n        _super.prototype.setLocale.call(_this, matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        // TODO(mmalerba): replace with !platform.TRIDENT, logic currently duplicated to avoid breaking\n        // change from injecting the Platform.\n        // IE does its own time zone correction, so we disable this on IE.\n        // TODO(mmalerba): replace with !platform.TRIDENT, logic currently duplicated to avoid breaking\n        // change from injecting the Platform.\n        _this.useUtcForDisplay = !(typeof document === 'object' && !!document &&\n            /(msie|trident)/i.test(navigator.userAgent));\n        return _this;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getYear = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return date.getFullYear();\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getMonth = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return date.getMonth();\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getDate = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return date.getDate();\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getDayOfWeek = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return date.getDay();\n    };\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getMonthNames = /**\n     * @param {?} style\n     * @return {?}\n     */\n    function (style) {\n        var _this = this;\n        if (SUPPORTS_INTL_API) {\n            var /** @type {?} */ dtf_1 = new Intl.DateTimeFormat(this.locale, { month: style });\n            return range(12, function (i) { return _this._stripDirectionalityCharacters(dtf_1.format(new Date(2017, i, 1))); });\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    };\n    /**\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getDateNames = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (SUPPORTS_INTL_API) {\n            var /** @type {?} */ dtf_2 = new Intl.DateTimeFormat(this.locale, { day: 'numeric' });\n            return range(31, function (i) {\n                return _this._stripDirectionalityCharacters(dtf_2.format(new Date(2017, 0, i + 1)));\n            });\n        }\n        return DEFAULT_DATE_NAMES;\n    };\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getDayOfWeekNames = /**\n     * @param {?} style\n     * @return {?}\n     */\n    function (style) {\n        var _this = this;\n        if (SUPPORTS_INTL_API) {\n            var /** @type {?} */ dtf_3 = new Intl.DateTimeFormat(this.locale, { weekday: style });\n            return range(7, function (i) {\n                return _this._stripDirectionalityCharacters(dtf_3.format(new Date(2017, 0, i + 1)));\n            });\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getYearName = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        if (SUPPORTS_INTL_API) {\n            var /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric' });\n            return this._stripDirectionalityCharacters(dtf.format(date));\n        }\n        return String(this.getYear(date));\n    };\n    /**\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getFirstDayOfWeek = /**\n     * @return {?}\n     */\n    function () {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.getNumDaysInMonth = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.clone = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\n    };\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.createDate = /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    function (year, month, date) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n            throw Error(\"Invalid month index \\\"\" + month + \"\\\". Month index has to be between 0 and 11.\");\n        }\n        if (date < 1) {\n            throw Error(\"Invalid date \\\"\" + date + \"\\\". Date has to be greater than 0.\");\n        }\n        var /** @type {?} */ result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month) {\n            throw Error(\"Invalid date \\\"\" + date + \"\\\" for month with index \\\"\" + month + \"\\\".\");\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.today = /**\n     * @return {?}\n     */\n    function () {\n        return new Date();\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.parse = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    };\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.format = /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    function (date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            if (this.useUtcForDisplay) {\n                date = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n                displayFormat = extendObject({}, displayFormat, { timeZone: 'utc' });\n            }\n            var /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(dtf.format(date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    };\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.addCalendarYears = /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    function (date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    };\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.addCalendarMonths = /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    function (date, months) {\n        var /** @type {?} */ newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    };\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.addCalendarDays = /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    function (date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.toIso8601 = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate())\n        ].join('-');\n    };\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.deserialize = /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                var /** @type {?} */ date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return _super.prototype.deserialize.call(this, value);\n    };\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.isDateInstance = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        return obj instanceof Date;\n    };\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.isValid = /**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return !isNaN(date.getTime());\n    };\n    /**\n     * @return {?}\n     */\n    NativeDateAdapter.prototype.invalid = /**\n     * @return {?}\n     */\n    function () {\n        return new Date(NaN);\n    };\n    /**\n     * Creates a date but allows the month and date to overflow.\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    NativeDateAdapter.prototype._createDateWithOverflow = /**\n     * Creates a date but allows the month and date to overflow.\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    function (year, month, date) {\n        var /** @type {?} */ result = new Date(year, month, date);\n        // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n        // abbreviations for 19xx.\n        if (year >= 0 && year < 100) {\n            result.setFullYear(this.getYear(result) - 1900);\n        }\n        return result;\n    };\n    /**\n     * Pads a number to make it two digits.\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n    NativeDateAdapter.prototype._2digit = /**\n     * Pads a number to make it two digits.\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n    function (n) {\n        return ('00' + n).slice(-2);\n    };\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n    NativeDateAdapter.prototype._stripDirectionalityCharacters = /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n    function (str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    };\n    return NativeDateAdapter;\n}(DateAdapter));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar NativeDateModule = /** @class */ (function () {\n    function NativeDateModule() {\n    }\n    return NativeDateModule;\n}());\nvar MatNativeDateModule = /** @class */ (function () {\n    function MatNativeDateModule() {\n    }\n    return MatNativeDateModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Error state matcher that matches when a control is invalid and dirty.\n */\nvar ShowOnDirtyErrorStateMatcher = /** @class */ (function () {\n    function ShowOnDirtyErrorStateMatcher() {\n    }\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    ShowOnDirtyErrorStateMatcher.prototype.isErrorState = /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    function (control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    };\n    return ShowOnDirtyErrorStateMatcher;\n}());\n/**\n * Provider that defines how form controls behave with regards to displaying error messages.\n */\nvar ErrorStateMatcher = /** @class */ (function () {\n    function ErrorStateMatcher() {\n    }\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    ErrorStateMatcher.prototype.isErrorState = /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    function (control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    };\n    return ErrorStateMatcher;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar GestureConfig = /** @class */ (function (_super) {\n    __extends(GestureConfig, _super);\n    function GestureConfig(commonModule) {\n        var _this = _super.call(this) || this;\n        if (commonModule) {\n            commonModule._checkHammerIsAvailable();\n        }\n        return _this;\n    }\n    /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param element Element to which to assign the new HammerJS gestures.\n     * @returns Newly-created HammerJS instance.\n     */\n    /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param {?} element Element to which to assign the new HammerJS gestures.\n     * @return {?} Newly-created HammerJS instance.\n     */\n    GestureConfig.prototype.buildHammer = /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param {?} element Element to which to assign the new HammerJS gestures.\n     * @return {?} Newly-created HammerJS instance.\n     */\n    function (element) {\n        var /** @type {?} */ mc = new this._hammer(element);\n        // Default Hammer Recognizers.\n        var /** @type {?} */ pan = new this._hammer.Pan();\n        var /** @type {?} */ swipe = new this._hammer.Swipe();\n        var /** @type {?} */ press = new this._hammer.Press();\n        // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n        // Otherwise the previous `recognizeWith` will be dropped.\n        // TODO: Confirm threshold numbers with Material Design UX Team\n        var /** @type {?} */ slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\n        var /** @type {?} */ longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\n        // Overwrite the default `pan` event to use the swipe event.\n        pan.recognizeWith(swipe);\n        // Add customized gestures to Hammer manager\n        mc.add([swipe, press, pan, slide, longpress]);\n        return /** @type {?} */ (mc);\n    };\n    /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n    GestureConfig.prototype._createRecognizer = /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n    function (base, options) {\n        var inheritances = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            inheritances[_i - 2] = arguments[_i];\n        }\n        var /** @type {?} */ recognizer = new (/** @type {?} */ (base.constructor))(options);\n        inheritances.push(base);\n        inheritances.forEach(function (item) { return recognizer.recognizeWith(item); });\n        return recognizer;\n    };\n    return GestureConfig;\n}(HammerGestureConfig));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nvar MatLine = /** @class */ (function () {\n    function MatLine() {\n    }\n    return MatLine;\n}());\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n */\nvar MatLineSetter = /** @class */ (function () {\n    function MatLineSetter(_lines, _renderer, _element) {\n        var _this = this;\n        this._lines = _lines;\n        this._renderer = _renderer;\n        this._element = _element;\n        this._setLineClass(this._lines.length);\n        this._lines.changes.subscribe(function () {\n            _this._setLineClass(_this._lines.length);\n        });\n    }\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    MatLineSetter.prototype._setLineClass = /**\n     * @param {?} count\n     * @return {?}\n     */\n    function (count) {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(\"mat-\" + count + \"-line\", true);\n        }\n        else if (count > 3) {\n            this._setClass(\"mat-multi-line\", true);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatLineSetter.prototype._resetClasses = /**\n     * @return {?}\n     */\n    function () {\n        this._setClass('mat-2-line', false);\n        this._setClass('mat-3-line', false);\n        this._setClass('mat-multi-line', false);\n    };\n    /**\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    MatLineSetter.prototype._setClass = /**\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    function (className, isAdd) {\n        if (isAdd) {\n            this._renderer.addClass(this._element.nativeElement, className);\n        }\n        else {\n            this._renderer.removeClass(this._element.nativeElement, className);\n        }\n    };\n    return MatLineSetter;\n}());\nvar MatLineModule = /** @class */ (function () {\n    function MatLineModule() {\n    }\n    return MatLineModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar RippleState = {\n    FADING_IN: 0,\n    VISIBLE: 1,\n    FADING_OUT: 2,\n    HIDDEN: 3,\n};\nRippleState[RippleState.FADING_IN] = \"FADING_IN\";\nRippleState[RippleState.VISIBLE] = \"VISIBLE\";\nRippleState[RippleState.FADING_OUT] = \"FADING_OUT\";\nRippleState[RippleState.HIDDEN] = \"HIDDEN\";\n/**\n * Reference to a previously launched ripple element.\n */\nvar RippleRef = /** @class */ (function () {\n    function RippleRef(_renderer, element, config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n    }\n    /** Fades out the ripple element. */\n    /**\n     * Fades out the ripple element.\n     * @return {?}\n     */\n    RippleRef.prototype.fadeOut = /**\n     * Fades out the ripple element.\n     * @return {?}\n     */\n    function () {\n        this._renderer.fadeOutRipple(this);\n    };\n    return RippleRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Fade-in duration for the ripples. Can be modified with the speedFactor option.\n */\nvar RIPPLE_FADE_IN_DURATION = 450;\n/**\n * Fade-out duration for the ripples in milliseconds. This can't be modified by the speedFactor.\n */\nvar RIPPLE_FADE_OUT_DURATION = 400;\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nvar RippleRenderer = /** @class */ (function () {\n    function RippleRenderer(elementRef, _ngZone, platform) {\n        this._ngZone = _ngZone;\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = elementRef.nativeElement;\n            // Specify events which need to be registered on the trigger.\n            this._triggerEvents.set('mousedown', this.onMousedown.bind(this));\n            this._triggerEvents.set('mouseup', this.onMouseup.bind(this));\n            this._triggerEvents.set('mouseleave', this.onMouseup.bind(this));\n            // By default use the host element as trigger element.\n            this.setTriggerElement(this._containerElement);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param config Extra ripple options.\n     */\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param {?=} config Extra ripple options.\n     * @return {?}\n     */\n    RippleRenderer.prototype.fadeInRipple = /**\n     * Fades in a ripple at the given coordinates.\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param {?=} config Extra ripple options.\n     * @return {?}\n     */\n    function (x, y, config) {\n        var _this = this;\n        if (config === void 0) { config = {}; }\n        var /** @type {?} */ containerRect = this._containerElement.getBoundingClientRect();\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        var /** @type {?} */ radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        var /** @type {?} */ duration = RIPPLE_FADE_IN_DURATION * (1 / (config.speedFactor || 1));\n        var /** @type {?} */ offsetX = x - containerRect.left;\n        var /** @type {?} */ offsetY = y - containerRect.top;\n        var /** @type {?} */ ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = offsetX - radius + \"px\";\n        ripple.style.top = offsetY - radius + \"px\";\n        ripple.style.height = radius * 2 + \"px\";\n        ripple.style.width = radius * 2 + \"px\";\n        // If the color is not set, the default CSS color will be used.\n        ripple.style.backgroundColor = config.color || null;\n        ripple.style.transitionDuration = duration + \"ms\";\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        var /** @type {?} */ rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = RippleState.FADING_IN;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this.runTimeoutOutsideZone(function () {\n            rippleRef.state = RippleState.VISIBLE;\n            if (!config.persistent && !_this._isMousedown) {\n                rippleRef.fadeOut();\n            }\n        }, duration);\n        return rippleRef;\n    };\n    /** Fades out a ripple reference. */\n    /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n    RippleRenderer.prototype.fadeOutRipple = /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n    function (rippleRef) {\n        // For ripples that are not active anymore, don't re-un the fade-out animation.\n        if (!this._activeRipples.delete(rippleRef)) {\n            return;\n        }\n        var /** @type {?} */ rippleEl = rippleRef.element;\n        rippleEl.style.transitionDuration = RIPPLE_FADE_OUT_DURATION + \"ms\";\n        rippleEl.style.opacity = '0';\n        rippleRef.state = RippleState.FADING_OUT;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this.runTimeoutOutsideZone(function () {\n            rippleRef.state = RippleState.HIDDEN; /** @type {?} */\n            ((rippleEl.parentNode)).removeChild(rippleEl);\n        }, RIPPLE_FADE_OUT_DURATION);\n    };\n    /** Fades out all currently active ripples. */\n    /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n    RippleRenderer.prototype.fadeOutAll = /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n    function () {\n        this._activeRipples.forEach(function (ripple) { return ripple.fadeOut(); });\n    };\n    /** Sets the trigger element and registers the mouse events. */\n    /**\n     * Sets the trigger element and registers the mouse events.\n     * @param {?} element\n     * @return {?}\n     */\n    RippleRenderer.prototype.setTriggerElement = /**\n     * Sets the trigger element and registers the mouse events.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var _this = this;\n        // Remove all previously register event listeners from the trigger element.\n        if (this._triggerElement) {\n            this._triggerEvents.forEach(function (fn, type) {\n                /** @type {?} */ ((_this._triggerElement)).removeEventListener(type, fn);\n            });\n        }\n        if (element) {\n            // If the element is not null, register all event listeners on the trigger element.\n            this._ngZone.runOutsideAngular(function () {\n                _this._triggerEvents.forEach(function (fn, type) { return element.addEventListener(type, fn); });\n            });\n        }\n        this._triggerElement = element;\n    };\n    /**\n     * Function being called whenever the trigger is being pressed.\n     * @param {?} event\n     * @return {?}\n     */\n    RippleRenderer.prototype.onMousedown = /**\n     * Function being called whenever the trigger is being pressed.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (!this.rippleDisabled) {\n            this._isMousedown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this.rippleConfig);\n        }\n    };\n    /**\n     * Function being called whenever the trigger is being released.\n     * @return {?}\n     */\n    RippleRenderer.prototype.onMouseup = /**\n     * Function being called whenever the trigger is being released.\n     * @return {?}\n     */\n    function () {\n        if (!this._isMousedown) {\n            return;\n        }\n        this._isMousedown = false;\n        // Fade-out all ripples that are completely visible and not persistent.\n        this._activeRipples.forEach(function (ripple) {\n            if (!ripple.config.persistent && ripple.state === RippleState.VISIBLE) {\n                ripple.fadeOut();\n            }\n        });\n    };\n    /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n    RippleRenderer.prototype.runTimeoutOutsideZone = /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n    function (fn, delay) {\n        if (delay === void 0) { delay = 0; }\n        this._ngZone.runOutsideAngular(function () { return setTimeout(fn, delay); });\n    };\n    return RippleRenderer;\n}());\n/**\n * Enforces a style recalculation of a DOM element by computing its styles.\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    var /** @type {?} */ distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    var /** @type {?} */ distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @record\n */\n\n/**\n * Injection token that can be used to specify the global ripple options.\n */\nvar MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nvar MatRipple = /** @class */ (function () {\n    function MatRipple(elementRef, ngZone, platform, globalOptions) {\n        this._rippleRenderer = new RippleRenderer(elementRef, ngZone, platform);\n        this._globalOptions = globalOptions ? globalOptions : {};\n        this._updateRippleRenderer();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MatRipple.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes['trigger'] && this.trigger) {\n            this._rippleRenderer.setTriggerElement(this.trigger);\n        }\n        this._updateRippleRenderer();\n    };\n    /**\n     * @return {?}\n     */\n    MatRipple.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        // Set the trigger element to null to cleanup all listeners.\n        this._rippleRenderer.setTriggerElement(null);\n    };\n    /** Launches a manual ripple at the specified position. */\n    /**\n     * Launches a manual ripple at the specified position.\n     * @param {?} x\n     * @param {?} y\n     * @param {?=} config\n     * @return {?}\n     */\n    MatRipple.prototype.launch = /**\n     * Launches a manual ripple at the specified position.\n     * @param {?} x\n     * @param {?} y\n     * @param {?=} config\n     * @return {?}\n     */\n    function (x, y, config) {\n        if (config === void 0) { config = this.rippleConfig; }\n        return this._rippleRenderer.fadeInRipple(x, y, config);\n    };\n    /** Fades out all currently showing ripple elements. */\n    /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n    MatRipple.prototype.fadeOutAll = /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n    function () {\n        this._rippleRenderer.fadeOutAll();\n    };\n    Object.defineProperty(MatRipple.prototype, \"rippleConfig\", {\n        /** Ripple configuration from the directive's input values. */\n        get: /**\n         * Ripple configuration from the directive's input values.\n         * @return {?}\n         */\n        function () {\n            return {\n                centered: this.centered,\n                speedFactor: this.speedFactor * (this._globalOptions.baseSpeedFactor || 1),\n                radius: this.radius,\n                color: this.color\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Updates the ripple renderer with the latest ripple configuration. */\n    /**\n     * Updates the ripple renderer with the latest ripple configuration.\n     * @return {?}\n     */\n    MatRipple.prototype._updateRippleRenderer = /**\n     * Updates the ripple renderer with the latest ripple configuration.\n     * @return {?}\n     */\n    function () {\n        this._rippleRenderer.rippleDisabled = this._globalOptions.disabled || this.disabled;\n        this._rippleRenderer.rippleConfig = this.rippleConfig;\n    };\n    return MatRipple;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatRippleModule = /** @class */ (function () {\n    function MatRippleModule() {\n    }\n    return MatRippleModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with <mat-checkbox> and should *not* be used if the user would directly interact\n * with the checkbox. The pseudo-checkbox should only be used as an implementation detail of\n * more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nvar MatPseudoCheckbox = /** @class */ (function () {\n    function MatPseudoCheckbox() {\n    }\n    return MatPseudoCheckbox;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatPseudoCheckboxModule = /** @class */ (function () {\n    function MatPseudoCheckboxModule() {\n    }\n    return MatPseudoCheckboxModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n */\nvar MatOptgroupBase = /** @class */ (function () {\n    function MatOptgroupBase() {\n    }\n    return MatOptgroupBase;\n}());\nvar _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n/**\n * Component that is used to group instances of `mat-option`.\n */\nvar MatOptgroup = /** @class */ (function (_super) {\n    __extends(MatOptgroup, _super);\n    function MatOptgroup() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MatOptgroup;\n}(_MatOptgroupMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Event object emitted by MatOption when selected or deselected.\n */\nvar MatOptionSelectionChange = /** @class */ (function () {\n    function MatOptionSelectionChange(source, isUserInput) {\n        if (isUserInput === void 0) { isUserInput = false; }\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n    return MatOptionSelectionChange;\n}());\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * \\@docs-private\n * @record\n */\n\n/**\n * Injection token used to provide the parent component to options.\n */\nvar MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * Single option inside of a `<mat-select>` element.\n */\nvar MatOption = /** @class */ (function () {\n    function MatOption(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n    }\n    Object.defineProperty(MatOption.prototype, \"multiple\", {\n        /** Whether the wrapping component is in multiple selection mode. */\n        get: /**\n         * Whether the wrapping component is in multiple selection mode.\n         * @return {?}\n         */\n        function () { return this._parent && this._parent.multiple; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatOption.prototype, \"id\", {\n        /** The unique ID of the option. */\n        get: /**\n         * The unique ID of the option.\n         * @return {?}\n         */\n        function () { return this._id; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatOption.prototype, \"selected\", {\n        /** Whether or not the option is currently selected. */\n        get: /**\n         * Whether or not the option is currently selected.\n         * @return {?}\n         */\n        function () { return this._selected; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatOption.prototype, \"disabled\", {\n        get: /**\n         * Whether the option is disabled.\n         * @return {?}\n         */\n        function () { return (this.group && this.group.disabled) || this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._disabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatOption.prototype, \"disableRipple\", {\n        /** Whether ripples for the option are disabled. */\n        get: /**\n         * Whether ripples for the option are disabled.\n         * @return {?}\n         */\n        function () { return this._parent && this._parent.disableRipple; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatOption.prototype, \"active\", {\n        /**\n         * Whether or not the option is currently active and ready to be selected.\n         * An active option displays styles as if it is focused, but the\n         * focus is actually retained somewhere else. This comes in handy\n         * for components like autocomplete where focus must remain on the input.\n         */\n        get: /**\n         * Whether or not the option is currently active and ready to be selected.\n         * An active option displays styles as if it is focused, but the\n         * focus is actually retained somewhere else. This comes in handy\n         * for components like autocomplete where focus must remain on the input.\n         * @return {?}\n         */\n        function () {\n            return this._active;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatOption.prototype, \"viewValue\", {\n        /**\n         * The displayed value of the option. It is necessary to show the selected option in the\n         * select's trigger.\n         */\n        get: /**\n         * The displayed value of the option. It is necessary to show the selected option in the\n         * select's trigger.\n         * @return {?}\n         */\n        function () {\n            // TODO(kara): Add input property alternative for node envs.\n            return (this._getHostElement().textContent || '').trim();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Selects the option. */\n    /**\n     * Selects the option.\n     * @return {?}\n     */\n    MatOption.prototype.select = /**\n     * Selects the option.\n     * @return {?}\n     */\n    function () {\n        this._selected = true;\n        this._changeDetectorRef.markForCheck();\n        this._emitSelectionChangeEvent();\n    };\n    /** Deselects the option. */\n    /**\n     * Deselects the option.\n     * @return {?}\n     */\n    MatOption.prototype.deselect = /**\n     * Deselects the option.\n     * @return {?}\n     */\n    function () {\n        this._selected = false;\n        this._changeDetectorRef.markForCheck();\n        this._emitSelectionChangeEvent();\n    };\n    /** Sets focus onto this option. */\n    /**\n     * Sets focus onto this option.\n     * @return {?}\n     */\n    MatOption.prototype.focus = /**\n     * Sets focus onto this option.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    };\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    MatOption.prototype.setActiveStyles = /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    function () {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    MatOption.prototype.setInactiveStyles = /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    function () {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    /** Gets the label to be used when determining whether the option should be focused. */\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    MatOption.prototype.getLabel = /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    function () {\n        return this.viewValue;\n    };\n    /** Ensures the option is selected when activated from the keyboard. */\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    MatOption.prototype._handleKeydown = /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    };\n    /**\n     * Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.\n     */\n    /**\n     * Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.\n     * @return {?}\n     */\n    MatOption.prototype._selectViaInteraction = /**\n     * Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.\n     * @return {?}\n     */\n    function () {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    };\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    MatOption.prototype._getTabIndex = /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    function () {\n        return this.disabled ? '-1' : '0';\n    };\n    /** Gets the host DOM element. */\n    /**\n     * Gets the host DOM element.\n     * @return {?}\n     */\n    MatOption.prototype._getHostElement = /**\n     * Gets the host DOM element.\n     * @return {?}\n     */\n    function () {\n        return this._element.nativeElement;\n    };\n    /**\n     * Emits the selection change event.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    MatOption.prototype._emitSelectionChangeEvent = /**\n     * Emits the selection change event.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    function (isUserInput) {\n        if (isUserInput === void 0) { isUserInput = false; }\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    };\n    /**\n     * Counts the amount of option group labels that precede the specified option.\n     * @param optionIndex Index of the option at which to start counting.\n     * @param options Flat list of all of the options.\n     * @param optionGroups Flat list of all of the option groups.\n     */\n    /**\n     * Counts the amount of option group labels that precede the specified option.\n     * @param {?} optionIndex Index of the option at which to start counting.\n     * @param {?} options Flat list of all of the options.\n     * @param {?} optionGroups Flat list of all of the option groups.\n     * @return {?}\n     */\n    MatOption.countGroupLabelsBeforeOption = /**\n     * Counts the amount of option group labels that precede the specified option.\n     * @param {?} optionIndex Index of the option at which to start counting.\n     * @param {?} options Flat list of all of the options.\n     * @param {?} optionGroups Flat list of all of the option groups.\n     * @return {?}\n     */\n    function (optionIndex, options, optionGroups) {\n        if (optionGroups.length) {\n            var /** @type {?} */ optionsArray = options.toArray();\n            var /** @type {?} */ groups = optionGroups.toArray();\n            var /** @type {?} */ groupCounter = 0;\n            for (var /** @type {?} */ i = 0; i < optionIndex + 1; i++) {\n                if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                    groupCounter++;\n                }\n            }\n            return groupCounter;\n        }\n        return 0;\n    };\n    return MatOption;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatOptionModule = /** @class */ (function () {\n    function MatOptionModule() {\n    }\n    return MatOptionModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * InjectionToken that can be used to specify the global placeholder options.\n */\nvar MAT_PLACEHOLDER_GLOBAL_OPTIONS = new InjectionToken('mat-placeholder-global-options');\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Applies a CSS transform to an element, including browser-prefixed properties.\n * @param {?} element\n * @param {?} transformValue\n * @return {?}\n */\nfunction applyCssTransform(element, transformValue) {\n    // It's important to trim the result, because the browser will ignore the set operation\n    // if the string contains only whitespace.\n    var /** @type {?} */ value = transformValue.trim();\n    element.style.transform = value;\n    element.style.webkitTransform = value;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n */\nvar JAN = 0;\nvar FEB = 1;\nvar MAR = 2;\nvar APR = 3;\nvar MAY = 4;\nvar JUN = 5;\nvar JUL = 6;\nvar AUG = 7;\nvar SEP = 8;\nvar OCT = 9;\nvar NOV = 10;\nvar DEC = 11;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationCurves, AnimationDurations, MatCommonModule, MATERIAL_SANITY_CHECKS, mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, NativeDateModule, MatNativeDateModule, MAT_DATE_LOCALE, MAT_DATE_LOCALE_PROVIDER, DateAdapter, MAT_DATE_FORMATS, NativeDateAdapter, MAT_NATIVE_DATE_FORMATS, ShowOnDirtyErrorStateMatcher, ErrorStateMatcher, GestureConfig, MatLine, MatLineSetter, MatLineModule, MatOptionModule, MatOptionSelectionChange, MAT_OPTION_PARENT_COMPONENT, MatOption, MatOptgroupBase, _MatOptgroupMixinBase, MatOptgroup, MAT_PLACEHOLDER_GLOBAL_OPTIONS, MatRipple, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRef, RippleState, RIPPLE_FADE_IN_DURATION, RIPPLE_FADE_OUT_DURATION, MatRippleModule, MatPseudoCheckboxModule, MatPseudoCheckbox, applyCssTransform, extendObject, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC, RippleRenderer as ɵa0 };\n//# sourceMappingURL=core.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport '@angular/common';\nimport '@angular/core';\nimport '@angular/cdk/platform';\nimport '@angular/animations';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { first } from 'rxjs/operators/first';\nimport { startWith } from 'rxjs/operators/startWith';\nimport '@angular/material/core';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Single error message to be shown underneath the form field.\n */\nvar MatError = /** @class */ (function () {\n    function MatError() {\n    }\n    return MatError;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n */\nvar MatFormFieldControl = /** @class */ (function () {\n    function MatFormFieldControl() {\n    }\n    return MatFormFieldControl;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(\"A hint was already declared for 'align=\\\"\" + align + \"\\\"'.\");\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Hint text to be shown underneath the form field control.\n */\nvar MatHint = /** @class */ (function () {\n    function MatHint() {\n    }\n    return MatHint;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * The floating placeholder for an `MatFormField`.\n */\nvar MatPlaceholder = /** @class */ (function () {\n    function MatPlaceholder() {\n    }\n    return MatPlaceholder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Prefix to be placed the the front of the form field.\n */\nvar MatPrefix = /** @class */ (function () {\n    function MatPrefix() {\n    }\n    return MatPrefix;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Suffix to be placed at the end of the form field.\n */\nvar MatSuffix = /** @class */ (function () {\n    function MatSuffix() {\n    }\n    return MatSuffix;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nvar MatFormField = /** @class */ (function () {\n    function MatFormField(_elementRef, _renderer, _changeDetectorRef, placeholderOptions) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._placeholderOptions = placeholderOptions ? placeholderOptions : {};\n        this.floatPlaceholder = this._placeholderOptions.float || 'auto';\n    }\n    Object.defineProperty(MatFormField.prototype, \"dividerColor\", {\n        get: /**\n         * @deprecated Use `color` instead.\n         * @return {?}\n         */\n        function () { return this.color; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this.color = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatFormField.prototype, \"hideRequiredMarker\", {\n        get: /**\n         * Whether the required marker should be hidden.\n         * @return {?}\n         */\n        function () { return this._hideRequiredMarker; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._hideRequiredMarker = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatFormField.prototype, \"_shouldAlwaysFloat\", {\n        /** Whether the floating label should always float or not. */\n        get: /**\n         * Whether the floating label should always float or not.\n         * @return {?}\n         */\n        function () {\n            return this._floatPlaceholder === 'always' && !this._showAlwaysAnimate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatFormField.prototype, \"_canPlaceholderFloat\", {\n        /** Whether the placeholder can float or not. */\n        get: /**\n         * Whether the placeholder can float or not.\n         * @return {?}\n         */\n        function () { return this._floatPlaceholder !== 'never'; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatFormField.prototype, \"hintLabel\", {\n        get: /**\n         * Text for the form field hint.\n         * @return {?}\n         */\n        function () { return this._hintLabel; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._hintLabel = value;\n            this._processHints();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatFormField.prototype, \"floatPlaceholder\", {\n        get: /**\n         * Whether the placeholder should always float, never float or float as the user types.\n         * @return {?}\n         */\n        function () { return this._floatPlaceholder; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value !== this._floatPlaceholder) {\n                this._floatPlaceholder = value || this._placeholderOptions.float || 'auto';\n                this._changeDetectorRef.markForCheck();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatFormField.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._validateControlChild();\n        if (this._control.controlType) {\n            this._renderer.addClass(this._elementRef.nativeElement, \"mat-form-field-type-\" + this._control.controlType);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith(/** @type {?} */ ((null)))).subscribe(function () {\n            _this._validatePlaceholders();\n            _this._syncDescribedByIds();\n            _this._changeDetectorRef.markForCheck();\n        });\n        var /** @type {?} */ ngControl = this._control.ngControl;\n        if (ngControl && ngControl.valueChanges) {\n            ngControl.valueChanges.subscribe(function () {\n                _this._changeDetectorRef.markForCheck();\n            });\n        }\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(function () {\n            _this._processHints();\n            _this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(function () {\n            _this._syncDescribedByIds();\n            _this._changeDetectorRef.markForCheck();\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MatFormField.prototype.ngAfterContentChecked = /**\n     * @return {?}\n     */\n    function () {\n        this._validateControlChild();\n    };\n    /**\n     * @return {?}\n     */\n    MatFormField.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    };\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    MatFormField.prototype._shouldForward = /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    function (prop) {\n        var /** @type {?} */ ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && (/** @type {?} */ (ngControl))[prop];\n    };\n    /** Whether the form field has a placeholder. */\n    /**\n     * Whether the form field has a placeholder.\n     * @return {?}\n     */\n    MatFormField.prototype._hasPlaceholder = /**\n     * Whether the form field has a placeholder.\n     * @return {?}\n     */\n    function () {\n        return !!(this._control.placeholder || this._placeholderChild);\n    };\n    /** Determines whether to display hints or errors. */\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    MatFormField.prototype._getDisplayedMessages = /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    function () {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    };\n    /** Animates the placeholder up and locks it in position. */\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    MatFormField.prototype._animateAndLockPlaceholder = /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._placeholder && this._canPlaceholderFloat) {\n            this._showAlwaysAnimate = true;\n            this._floatPlaceholder = 'always';\n            fromEvent(this._placeholder.nativeElement, 'transitionend').pipe(first()).subscribe(function () {\n                _this._showAlwaysAnimate = false;\n            });\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @return {?}\n     */\n    MatFormField.prototype._validatePlaceholders = /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @return {?}\n     */\n    function () {\n        if (this._control.placeholder && this._placeholderChild) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    };\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @return {?}\n     */\n    MatFormField.prototype._processHints = /**\n     * Does any extra processing that is required when handling the hints.\n     * @return {?}\n     */\n    function () {\n        this._validateHints();\n        this._syncDescribedByIds();\n    };\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @return {?}\n     */\n    MatFormField.prototype._validateHints = /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._hintChildren) {\n            var /** @type {?} */ startHint_1;\n            var /** @type {?} */ endHint_1;\n            this._hintChildren.forEach(function (hint) {\n                if (hint.align == 'start') {\n                    if (startHint_1 || _this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint_1 = hint;\n                }\n                else if (hint.align == 'end') {\n                    if (endHint_1) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint_1 = hint;\n                }\n            });\n        }\n    };\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @return {?}\n     */\n    MatFormField.prototype._syncDescribedByIds = /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @return {?}\n     */\n    function () {\n        if (this._control) {\n            var /** @type {?} */ ids = [];\n            if (this._getDisplayedMessages() === 'hint') {\n                var /** @type {?} */ startHint = this._hintChildren ?\n                    this._hintChildren.find(function (hint) { return hint.align === 'start'; }) : null;\n                var /** @type {?} */ endHint = this._hintChildren ?\n                    this._hintChildren.find(function (hint) { return hint.align === 'end'; }) : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids = this._errorChildren.map(function (error) { return error.id; });\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    };\n    /** Throws an error if the form field's control is missing. */\n    /**\n     * Throws an error if the form field's control is missing.\n     * @return {?}\n     */\n    MatFormField.prototype._validateControlChild = /**\n     * Throws an error if the form field's control is missing.\n     * @return {?}\n     */\n    function () {\n        if (!this._control) {\n            throw getMatFormFieldMissingControlError();\n        }\n    };\n    return MatFormField;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatFormFieldModule = /** @class */ (function () {\n    function MatFormFieldModule() {\n    }\n    return MatFormFieldModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatFormFieldModule, MatError, MatFormField, MatFormFieldControl, getMatFormFieldPlaceholderConflictError, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, MatHint, MatPlaceholder, MatPrefix, MatSuffix };\n//# sourceMappingURL=form-field.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, forwardRef } from '@angular/core';\nimport { MatOption } from '@angular/material/core';\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport '@angular/common';\nimport { Overlay, OverlayConfig } from '@angular/cdk/overlay';\nimport '@angular/cdk/bidi';\nimport { DOWN_ARROW, ENTER, ESCAPE, TAB, UP_ARROW } from '@angular/cdk/keycodes';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { filter } from 'rxjs/operators/filter';\nimport { first } from 'rxjs/operators/first';\nimport { switchMap } from 'rxjs/operators/switchMap';\nimport { tap } from 'rxjs/operators/tap';\nimport { delay } from 'rxjs/operators/delay';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport '@angular/material/form-field';\nimport '@angular/platform-browser';\nimport 'rxjs/Subject';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { merge } from 'rxjs/observable/merge';\nimport { of } from 'rxjs/observable/of';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Event object that is emitted when an autocomplete option is selected\n */\nvar MatAutocompleteSelectedEvent = /** @class */ (function () {\n    function MatAutocompleteSelectedEvent(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n    return MatAutocompleteSelectedEvent;\n}());\nvar MatAutocomplete = /** @class */ (function () {\n    function MatAutocomplete(_changeDetectorRef, _elementRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n    }\n    Object.defineProperty(MatAutocomplete.prototype, \"isOpen\", {\n        /** Whether the autocomplete panel is open. */\n        get: /**\n         * Whether the autocomplete panel is open.\n         * @return {?}\n         */\n        function () {\n            return this._isOpen && this.showPanel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatAutocomplete.prototype, \"classList\", {\n        set: /**\n         * Takes classes set on the host mat-autocomplete element and applies them to the panel\n         * inside the overlay container to allow for easy styling.\n         * @param {?} classList\n         * @return {?}\n         */\n        function (classList) {\n            var _this = this;\n            if (classList && classList.length) {\n                classList.split(' ').forEach(function (className) { return _this._classList[className.trim()] = true; });\n                this._elementRef.nativeElement.className = '';\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatAutocomplete.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        // Set the initial visibiity state.\n        this._setVisibility();\n    };\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     */\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     * @param {?} scrollTop\n     * @return {?}\n     */\n    MatAutocomplete.prototype._setScrollTop = /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     * @param {?} scrollTop\n     * @return {?}\n     */\n    function (scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    };\n    /** Returns the panel's scrollTop. */\n    /**\n     * Returns the panel's scrollTop.\n     * @return {?}\n     */\n    MatAutocomplete.prototype._getScrollTop = /**\n     * Returns the panel's scrollTop.\n     * @return {?}\n     */\n    function () {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    };\n    /** Panel should hide itself when the option list is empty. */\n    /**\n     * Panel should hide itself when the option list is empty.\n     * @return {?}\n     */\n    MatAutocomplete.prototype._setVisibility = /**\n     * Panel should hide itself when the option list is empty.\n     * @return {?}\n     */\n    function () {\n        this.showPanel = !!this.options.length;\n        this._classList['mat-autocomplete-visible'] = this.showPanel;\n        this._classList['mat-autocomplete-hidden'] = !this.showPanel;\n        this._changeDetectorRef.markForCheck();\n    };\n    /** Emits the `select` event. */\n    /**\n     * Emits the `select` event.\n     * @param {?} option\n     * @return {?}\n     */\n    MatAutocomplete.prototype._emitSelectEvent = /**\n     * Emits the `select` event.\n     * @param {?} option\n     * @return {?}\n     */\n    function (option) {\n        var /** @type {?} */ event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    };\n    return MatAutocomplete;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * The height of each autocomplete option.\n */\nvar AUTOCOMPLETE_OPTION_HEIGHT = 48;\n/**\n * The total height of the autocomplete panel.\n */\nvar AUTOCOMPLETE_PANEL_HEIGHT = 256;\n/**\n * Injection token that determines the scroll handling while the autocomplete panel is open.\n */\nvar MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return function () { return overlay.scrollStrategies.reposition(); };\n}\n/**\n * \\@docs-private\n */\nvar MAT_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * \\@docs-private\n */\nvar MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return MatAutocompleteTrigger; }),\n    multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @return {?}\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\nvar MatAutocompleteTrigger = /** @class */ (function () {\n    function MatAutocompleteTrigger(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, _scrollStrategy, _dir, _formField, _document) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n    }\n    /**\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._destroyPanel();\n        this._escapeEventStream.complete();\n    };\n    Object.defineProperty(MatAutocompleteTrigger.prototype, \"panelOpen\", {\n        /* Whether or not the autocomplete panel is open. */\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._panelOpen && this.autocomplete.showPanel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Opens the autocomplete suggestion panel. */\n    /**\n     * Opens the autocomplete suggestion panel.\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype.openPanel = /**\n     * Opens the autocomplete suggestion panel.\n     * @return {?}\n     */\n    function () {\n        this._attachOverlay();\n        this._floatPlaceholder();\n    };\n    /** Closes the autocomplete suggestion panel. */\n    /**\n     * Closes the autocomplete suggestion panel.\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype.closePanel = /**\n     * Closes the autocomplete suggestion panel.\n     * @return {?}\n     */\n    function () {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        this._resetPlaceholder();\n        if (this._panelOpen) {\n            this.autocomplete._isOpen = this._panelOpen = false;\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the placeholder is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    };\n    Object.defineProperty(MatAutocompleteTrigger.prototype, \"panelClosingActions\", {\n        /**\n         * A stream of actions that should close the autocomplete panel, including\n         * when an option is selected, on blur, and when TAB is pressed.\n         */\n        get: /**\n         * A stream of actions that should close the autocomplete panel, including\n         * when an option is selected, on blur, and when TAB is pressed.\n         * @return {?}\n         */\n        function () {\n            return merge(this.optionSelections, this.autocomplete._keyManager.tabOut, this._escapeEventStream, this._outsideClickStream);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatAutocompleteTrigger.prototype, \"optionSelections\", {\n        /** Stream of autocomplete option selections. */\n        get: /**\n         * Stream of autocomplete option selections.\n         * @return {?}\n         */\n        function () {\n            return merge.apply(void 0, this.autocomplete.options.map(function (option) { return option.onSelectionChange; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatAutocompleteTrigger.prototype, \"activeOption\", {\n        /** The currently active option, coerced to MatOption type. */\n        get: /**\n         * The currently active option, coerced to MatOption type.\n         * @return {?}\n         */\n        function () {\n            if (this.autocomplete && this.autocomplete._keyManager) {\n                return this.autocomplete._keyManager.activeItem;\n            }\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatAutocompleteTrigger.prototype, \"_outsideClickStream\", {\n        get: /**\n         * Stream of clicks outside of the autocomplete panel.\n         * @return {?}\n         */\n        function () {\n            var _this = this;\n            if (!this._document) {\n                return of(null);\n            }\n            return merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'touchend'))\n                .pipe(filter(function (event) {\n                var /** @type {?} */ clickTarget = /** @type {?} */ (event.target);\n                var /** @type {?} */ formField = _this._formField ?\n                    _this._formField._elementRef.nativeElement : null;\n                return _this._panelOpen &&\n                    clickTarget !== _this._element.nativeElement &&\n                    (!formField || !formField.contains(clickTarget)) &&\n                    (!!_this._overlayRef && !_this._overlayRef.overlayElement.contains(clickTarget));\n            }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the autocomplete's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    /**\n     * Sets the autocomplete's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype.writeValue = /**\n     * Sets the autocomplete's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    function (value) {\n        var _this = this;\n        Promise.resolve(null).then(function () { return _this._setTriggerValue(value); });\n    };\n    /**\n     * Saves a callback function to be invoked when the autocomplete's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    /**\n     * Saves a callback function to be invoked when the autocomplete's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype.registerOnChange = /**\n     * Saves a callback function to be invoked when the autocomplete's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    function (fn) {\n        this._onChange = fn;\n    };\n    /**\n     * Saves a callback function to be invoked when the autocomplete is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    /**\n     * Saves a callback function to be invoked when the autocomplete is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype.registerOnTouched = /**\n     * Saves a callback function to be invoked when the autocomplete is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    function (fn) {\n        this._onTouched = fn;\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._handleKeydown = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var /** @type {?} */ keyCode = event.keyCode;\n        if (keyCode === ESCAPE && this.panelOpen) {\n            this._resetActiveItem();\n            this._escapeEventStream.next();\n            event.stopPropagation();\n        }\n        else if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else {\n            var /** @type {?} */ prevActiveItem = this.autocomplete._keyManager.activeItem;\n            var /** @type {?} */ isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption();\n            }\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._handleInput = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // We need to ensure that the input is focused, because IE will fire the `input`\n        // event on focus/blur/load if the input has a placeholder. See:\n        // https://connect.microsoft.com/IE/feedback/details/885747/\n        if (document.activeElement === event.target) {\n            this._onChange((/** @type {?} */ (event.target)).value);\n            this.openPanel();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._handleFocus = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._element.nativeElement.readOnly) {\n            this._attachOverlay();\n            this._floatPlaceholder(true);\n        }\n    };\n    /**\n     * In \"auto\" mode, the placeholder will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the placeholder until the panel can be closed.\n     * @param {?=} shouldAnimate Whether the placeholder should be animated when it is floated.\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._floatPlaceholder = /**\n     * In \"auto\" mode, the placeholder will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the placeholder until the panel can be closed.\n     * @param {?=} shouldAnimate Whether the placeholder should be animated when it is floated.\n     * @return {?}\n     */\n    function (shouldAnimate) {\n        if (shouldAnimate === void 0) { shouldAnimate = false; }\n        if (this._formField && this._formField.floatPlaceholder === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockPlaceholder();\n            }\n            else {\n                this._formField.floatPlaceholder = 'always';\n            }\n            this._manuallyFloatingPlaceholder = true;\n        }\n    };\n    /**\n     * If the placeholder has been manually elevated, return it to its normal state.\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._resetPlaceholder = /**\n     * If the placeholder has been manually elevated, return it to its normal state.\n     * @return {?}\n     */\n    function () {\n        if (this._manuallyFloatingPlaceholder) {\n            this._formField.floatPlaceholder = 'auto';\n            this._manuallyFloatingPlaceholder = false;\n        }\n    };\n    /**\n     * Given that we are not actually focusing active options, we must manually adjust scroll\n     * to reveal options below the fold. First, we find the offset of the option from the top\n     * of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n     * the panel height + the option height, so the active option will be just visible at the\n     * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n     * will become the offset. If that offset is visible within the panel already, the scrollTop is\n     * not adjusted.\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._scrollToOption = /**\n     * Given that we are not actually focusing active options, we must manually adjust scroll\n     * to reveal options below the fold. First, we find the offset of the option from the top\n     * of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n     * the panel height + the option height, so the active option will be just visible at the\n     * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n     * will become the offset. If that offset is visible within the panel already, the scrollTop is\n     * not adjusted.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ activeOptionIndex = this.autocomplete._keyManager.activeItemIndex || 0;\n        var /** @type {?} */ labelCount = MatOption.countGroupLabelsBeforeOption(activeOptionIndex, this.autocomplete.options, this.autocomplete.optionGroups);\n        var /** @type {?} */ optionOffset = (activeOptionIndex + labelCount) * AUTOCOMPLETE_OPTION_HEIGHT;\n        var /** @type {?} */ panelTop = this.autocomplete._getScrollTop();\n        if (optionOffset < panelTop) {\n            // Scroll up to reveal selected option scrolled above the panel top\n            this.autocomplete._setScrollTop(optionOffset);\n        }\n        else if (optionOffset + AUTOCOMPLETE_OPTION_HEIGHT > panelTop + AUTOCOMPLETE_PANEL_HEIGHT) {\n            // Scroll down to reveal selected option scrolled below the panel bottom\n            var /** @type {?} */ newScrollTop = optionOffset - AUTOCOMPLETE_PANEL_HEIGHT + AUTOCOMPLETE_OPTION_HEIGHT;\n            this.autocomplete._setScrollTop(Math.max(0, newScrollTop));\n        }\n    };\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._subscribeToClosingActions = /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ firstStable = this._zone.onStable.asObservable().pipe(first());\n        var /** @type {?} */ optionChanges = this.autocomplete.options.changes.pipe(tap(function () { return _this._positionStrategy.recalculateLastPosition(); }), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap(function () {\n            _this._resetActiveItem();\n            _this.autocomplete._setVisibility();\n            return _this.panelClosingActions;\n        }), \n        // when the first closing event occurs...\n        first())\n            .subscribe(function (event) { return _this._setValueAndClose(event); });\n    };\n    /**\n     * Destroys the autocomplete suggestion panel.\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._destroyPanel = /**\n     * Destroys the autocomplete suggestion panel.\n     * @return {?}\n     */\n    function () {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._setTriggerValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ toDisplay = this.autocomplete && this.autocomplete.displayWith ?\n            this.autocomplete.displayWith(value) :\n            value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        var /** @type {?} */ inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n    };\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     * @param {?} event\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._setValueAndClose = /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (event && event.source) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n            this._element.nativeElement.focus();\n            this.autocomplete._emitSelectEvent(event.source);\n        }\n        this.closePanel();\n    };\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     * @param {?} skip\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._clearPreviousSelectedOption = /**\n     * Clear any previous selected option and emit a selection change event for this option\n     * @param {?} skip\n     * @return {?}\n     */\n    function (skip) {\n        this.autocomplete.options.forEach(function (option) {\n            if (option != skip && option.selected) {\n                option.deselect();\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._attachOverlay = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.autocomplete) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n            this._overlayRef = this._overlay.create(this._getOverlayConfig());\n        }\n        else {\n            /** Update the panel width, in case the host width has changed */\n            this._overlayRef.getConfig().width = this._getHostWidth();\n            this._overlayRef.updateSize();\n        }\n        if (this._overlayRef && !this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._panelOpen = true;\n    };\n    /**\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._getOverlayConfig = /**\n     * @return {?}\n     */\n    function () {\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getHostWidth(),\n            direction: this._dir ? this._dir.value : 'ltr'\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._getOverlayPosition = /**\n     * @return {?}\n     */\n    function () {\n        this._positionStrategy = this._overlay.position().connectedTo(this._getConnectedElement(), { originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' })\n            .withFallbackPosition({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' });\n        return this._positionStrategy;\n    };\n    /**\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._getConnectedElement = /**\n     * @return {?}\n     */\n    function () {\n        return this._formField ? this._formField._connectionContainerRef : this._element;\n    };\n    /**\n     * Returns the width of the input element, so the panel width can match it.\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._getHostWidth = /**\n     * Returns the width of the input element, so the panel width can match it.\n     * @return {?}\n     */\n    function () {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    };\n    /**\n     * Reset active item to -1 so arrow events will activate the correct options.\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._resetActiveItem = /**\n     * Reset active item to -1 so arrow events will activate the correct options.\n     * @return {?}\n     */\n    function () {\n        this.autocomplete._keyManager.setActiveItem(-1);\n    };\n    return MatAutocompleteTrigger;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatAutocompleteModule = /** @class */ (function () {\n    function MatAutocompleteModule() {\n    }\n    return MatAutocompleteModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatAutocompleteSelectedEvent, MatAutocomplete, MatAutocompleteModule, AUTOCOMPLETE_OPTION_HEIGHT, AUTOCOMPLETE_PANEL_HEIGHT, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, getMatAutocompleteMissingPanelError, MatAutocompleteTrigger };\n//# sourceMappingURL=autocomplete.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport '@angular/core';\nimport '@angular/common';\nimport { mixinColor, mixinDisableRipple, mixinDisabled } from '@angular/material/core';\nimport '@angular/cdk/a11y';\nimport { __extends } from 'tslib';\nimport * as tslib_1 from 'tslib';\nimport '@angular/cdk/platform';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Default color palette for round buttons (mat-fab and mat-mini-fab)\n */\nvar DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MatButtonCssMatStyler = /** @class */ (function () {\n    function MatButtonCssMatStyler() {\n    }\n    return MatButtonCssMatStyler;\n}());\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MatRaisedButtonCssMatStyler = /** @class */ (function () {\n    function MatRaisedButtonCssMatStyler() {\n    }\n    return MatRaisedButtonCssMatStyler;\n}());\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MatIconButtonCssMatStyler = /** @class */ (function () {\n    function MatIconButtonCssMatStyler() {\n    }\n    return MatIconButtonCssMatStyler;\n}());\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MatFab = /** @class */ (function () {\n    function MatFab(button, anchor) {\n        // Set the default color palette for the mat-fab components.\n        (button || anchor).color = DEFAULT_ROUND_BUTTON_COLOR;\n    }\n    return MatFab;\n}());\n/**\n * Directive that targets mini-fab buttons and anchors. It's used to apply the `mat-` class\n * to all mini-fab buttons and also is responsible for setting the default color palette.\n * \\@docs-private\n */\nvar MatMiniFab = /** @class */ (function () {\n    function MatMiniFab(button, anchor) {\n        // Set the default color palette for the mat-mini-fab components.\n        (button || anchor).color = DEFAULT_ROUND_BUTTON_COLOR;\n    }\n    return MatMiniFab;\n}());\n/**\n * \\@docs-private\n */\nvar MatButtonBase = /** @class */ (function () {\n    function MatButtonBase(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n    }\n    return MatButtonBase;\n}());\nvar _MatButtonMixinBase = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));\n/**\n * Material design button.\n */\nvar MatButton = /** @class */ (function (_super) {\n    __extends(MatButton, _super);\n    function MatButton(renderer, elementRef, _platform, _focusMonitor) {\n        var _this = _super.call(this, renderer, elementRef) || this;\n        _this._platform = _platform;\n        _this._focusMonitor = _focusMonitor;\n        _this._focusMonitor.monitor(_this._elementRef.nativeElement, true);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    MatButton.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    };\n    /** Focuses the button. */\n    /**\n     * Focuses the button.\n     * @return {?}\n     */\n    MatButton.prototype.focus = /**\n     * Focuses the button.\n     * @return {?}\n     */\n    function () {\n        this._getHostElement().focus();\n    };\n    /**\n     * @return {?}\n     */\n    MatButton.prototype._getHostElement = /**\n     * @return {?}\n     */\n    function () {\n        return this._elementRef.nativeElement;\n    };\n    /**\n     * @return {?}\n     */\n    MatButton.prototype._isRippleDisabled = /**\n     * @return {?}\n     */\n    function () {\n        return this.disableRipple || this.disabled;\n    };\n    /** Gets whether the button has one of the given attributes. */\n    /**\n     * Gets whether the button has one of the given attributes.\n     * @param {...?} attributes\n     * @return {?}\n     */\n    MatButton.prototype._hasHostAttributes = /**\n     * Gets whether the button has one of the given attributes.\n     * @param {...?} attributes\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var attributes = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            attributes[_i] = arguments[_i];\n        }\n        // If not on the browser, say that there are none of the attributes present.\n        // Since these only affect how the ripple displays (and ripples only happen on the client),\n        // detecting these attributes isn't necessary when not on the browser.\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        return attributes.some(function (attribute) { return _this._getHostElement().hasAttribute(attribute); });\n    };\n    return MatButton;\n}(_MatButtonMixinBase));\n/**\n * Raised Material design button.\n */\nvar MatAnchor = /** @class */ (function (_super) {\n    __extends(MatAnchor, _super);\n    function MatAnchor(platform, focusMonitor, elementRef, renderer) {\n        return _super.call(this, renderer, elementRef, platform, focusMonitor) || this;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatAnchor.prototype._haltDisabledEvents = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    };\n    return MatAnchor;\n}(MatButton));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatButtonModule = /** @class */ (function () {\n    function MatButtonModule() {\n    }\n    return MatButtonModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatButtonModule, MatButtonCssMatStyler, MatRaisedButtonCssMatStyler, MatIconButtonCssMatStyler, MatFab, MatMiniFab, MatButtonBase, _MatButtonMixinBase, MatButton, MatAnchor };\n//# sourceMappingURL=button.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { __extends } from 'tslib';\nimport * as tslib_1 from 'tslib';\nimport '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport '@angular/cdk/collections';\nimport { forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { mixinDisabled } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n */\nvar MatButtonToggleGroupBase = /** @class */ (function () {\n    function MatButtonToggleGroupBase() {\n    }\n    return MatButtonToggleGroupBase;\n}());\nvar _MatButtonToggleGroupMixinBase = mixinDisabled(MatButtonToggleGroupBase);\n/**\n * Provider Expression that allows mat-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * \\@docs-private\n */\nvar MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return MatButtonToggleGroup; }),\n    multi: true\n};\nvar _uniqueIdCounter = 0;\n/**\n * Change event object emitted by MatButtonToggle.\n */\nvar MatButtonToggleChange = /** @class */ (function () {\n    function MatButtonToggleChange() {\n    }\n    return MatButtonToggleChange;\n}());\n/**\n * Exclusive selection button toggle group that behaves like a radio-button group.\n */\nvar MatButtonToggleGroup = /** @class */ (function (_super) {\n    __extends(MatButtonToggleGroup, _super);\n    function MatButtonToggleGroup(_changeDetector) {\n        var _this = _super.call(this) || this;\n        _this._changeDetector = _changeDetector;\n        return _this;\n    }\n    Object.defineProperty(MatButtonToggleGroup.prototype, \"name\", {\n        get: /**\n         * `name` attribute for the underlying `input` element.\n         * @return {?}\n         */\n        function () {\n            return this._name;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._name = value;\n            this._updateButtonToggleNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatButtonToggleGroup.prototype, \"vertical\", {\n        get: /**\n         * Whether the toggle group is vertical.\n         * @return {?}\n         */\n        function () {\n            return this._vertical;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._vertical = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatButtonToggleGroup.prototype, \"value\", {\n        get: /**\n         * Value of the toggle group.\n         * @return {?}\n         */\n        function () {\n            return this._value;\n        },\n        set: /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        function (newValue) {\n            if (this._value != newValue) {\n                this._value = newValue;\n                this.valueChange.emit(newValue);\n                this._updateSelectedButtonToggleFromValue();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatButtonToggleGroup.prototype, \"selected\", {\n        get: /**\n         * Whether the toggle group is selected.\n         * @return {?}\n         */\n        function () {\n            return this._selected;\n        },\n        set: /**\n         * @param {?} selected\n         * @return {?}\n         */\n        function (selected) {\n            this._selected = selected;\n            this.value = selected ? selected.value : null;\n            if (selected && !selected.checked) {\n                selected.checked = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatButtonToggleGroup.prototype._updateButtonToggleNames = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._buttonToggles) {\n            this._buttonToggles.forEach(function (toggle) {\n                toggle.name = _this._name;\n            });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatButtonToggleGroup.prototype._updateSelectedButtonToggleFromValue = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ isAlreadySelected = this._selected != null && this._selected.value == this._value;\n        if (this._buttonToggles != null && !isAlreadySelected) {\n            var /** @type {?} */ matchingButtonToggle = this._buttonToggles.filter(function (buttonToggle) { return buttonToggle.value == _this._value; })[0];\n            if (matchingButtonToggle) {\n                this.selected = matchingButtonToggle;\n            }\n            else if (this.value == null) {\n                this.selected = null;\n                this._buttonToggles.forEach(function (buttonToggle) {\n                    buttonToggle.checked = false;\n                });\n            }\n        }\n    };\n    /** Dispatch change event with current selection and group value. */\n    /**\n     * Dispatch change event with current selection and group value.\n     * @return {?}\n     */\n    MatButtonToggleGroup.prototype._emitChangeEvent = /**\n     * Dispatch change event with current selection and group value.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ event = new MatButtonToggleChange();\n        event.source = this._selected;\n        event.value = this._value;\n        this._controlValueAccessorChangeFn(event.value);\n        this.change.emit(event);\n    };\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value Value to be set to the model.\n     */\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value Value to be set to the model.\n     * @return {?}\n     */\n    MatButtonToggleGroup.prototype.writeValue = /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value Value to be set to the model.\n     * @return {?}\n     */\n    function (value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    };\n    /**\n     * Registers a callback that will be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn On change callback function.\n     */\n    /**\n     * Registers a callback that will be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn On change callback function.\n     * @return {?}\n     */\n    MatButtonToggleGroup.prototype.registerOnChange = /**\n     * Registers a callback that will be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn On change callback function.\n     * @return {?}\n     */\n    function (fn) {\n        this._controlValueAccessorChangeFn = fn;\n    };\n    /**\n     * Registers a callback that will be triggered when the control has been touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn On touch callback function.\n     */\n    /**\n     * Registers a callback that will be triggered when the control has been touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn On touch callback function.\n     * @return {?}\n     */\n    MatButtonToggleGroup.prototype.registerOnTouched = /**\n     * Registers a callback that will be triggered when the control has been touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn On touch callback function.\n     * @return {?}\n     */\n    function (fn) {\n        this._onTouched = fn;\n    };\n    /**\n     * Toggles the disabled state of the component. Implemented as part of ControlValueAccessor.\n     * @param isDisabled Whether the component should be disabled.\n     */\n    /**\n     * Toggles the disabled state of the component. Implemented as part of ControlValueAccessor.\n     * @param {?} isDisabled Whether the component should be disabled.\n     * @return {?}\n     */\n    MatButtonToggleGroup.prototype.setDisabledState = /**\n     * Toggles the disabled state of the component. Implemented as part of ControlValueAccessor.\n     * @param {?} isDisabled Whether the component should be disabled.\n     * @return {?}\n     */\n    function (isDisabled) {\n        this.disabled = isDisabled;\n        this._markButtonTogglesForCheck();\n    };\n    /**\n     * @return {?}\n     */\n    MatButtonToggleGroup.prototype._markButtonTogglesForCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (this._buttonToggles) {\n            this._buttonToggles.forEach(function (toggle) { return toggle._markForCheck(); });\n        }\n    };\n    return MatButtonToggleGroup;\n}(_MatButtonToggleGroupMixinBase));\n/**\n * Multiple selection button-toggle group. `ngModel` is not supported in this mode.\n */\nvar MatButtonToggleGroupMultiple = /** @class */ (function (_super) {\n    __extends(MatButtonToggleGroupMultiple, _super);\n    function MatButtonToggleGroupMultiple() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MatButtonToggleGroupMultiple.prototype, \"vertical\", {\n        get: /**\n         * Whether the toggle group is vertical.\n         * @return {?}\n         */\n        function () {\n            return this._vertical;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._vertical = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return MatButtonToggleGroupMultiple;\n}(_MatButtonToggleGroupMixinBase));\n/**\n * Single button inside of a toggle group.\n */\nvar MatButtonToggle = /** @class */ (function () {\n    function MatButtonToggle(toggleGroup, toggleGroupMultiple, _changeDetectorRef, _buttonToggleDispatcher, _elementRef, _focusMonitor) {\n        var _this = this;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._buttonToggleDispatcher = _buttonToggleDispatcher;\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this.buttonToggleGroup = toggleGroup;\n        this.buttonToggleGroupMultiple = toggleGroupMultiple;\n        if (this.buttonToggleGroup) {\n            this._removeUniqueSelectionListener =\n                _buttonToggleDispatcher.listen(function (id, name) {\n                    if (id != _this.id && name == _this.name) {\n                        _this.checked = false;\n                        _this._changeDetectorRef.markForCheck();\n                    }\n                });\n            this._type = 'radio';\n            this.name = this.buttonToggleGroup.name;\n            this._isSingleSelector = true;\n        }\n        else {\n            // Even if there is no group at all, treat the button toggle as a checkbox so it can be\n            // toggled on or off.\n            this._type = 'checkbox';\n            this._isSingleSelector = false;\n        }\n    }\n    Object.defineProperty(MatButtonToggle.prototype, \"inputId\", {\n        /** Unique ID for the underlying `input` element. */\n        get: /**\n         * Unique ID for the underlying `input` element.\n         * @return {?}\n         */\n        function () {\n            return this.id + \"-input\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatButtonToggle.prototype, \"checked\", {\n        get: /**\n         * Whether the button is checked.\n         * @return {?}\n         */\n        function () { return this._checked; },\n        set: /**\n         * @param {?} newCheckedState\n         * @return {?}\n         */\n        function (newCheckedState) {\n            if (this._isSingleSelector && newCheckedState) {\n                // Notify all button toggles with the same name (in the same group) to un-check.\n                this._buttonToggleDispatcher.notify(this.id, this.name);\n                this._changeDetectorRef.markForCheck();\n            }\n            this._checked = newCheckedState;\n            if (newCheckedState && this._isSingleSelector && this.buttonToggleGroup.value != this.value) {\n                this.buttonToggleGroup.selected = this;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatButtonToggle.prototype, \"value\", {\n        get: /**\n         * MatButtonToggleGroup reads this to assign its own value.\n         * @return {?}\n         */\n        function () {\n            return this._value;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (this._value != value) {\n                if (this.buttonToggleGroup != null && this.checked) {\n                    this.buttonToggleGroup.value = value;\n                }\n                this._value = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatButtonToggle.prototype, \"disabled\", {\n        get: /**\n         * Whether the button is disabled.\n         * @return {?}\n         */\n        function () {\n            return this._disabled || (this.buttonToggleGroup != null && this.buttonToggleGroup.disabled) ||\n                (this.buttonToggleGroupMultiple != null && this.buttonToggleGroupMultiple.disabled);\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatButtonToggle.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        if (this.id == null) {\n            this.id = \"mat-button-toggle-\" + _uniqueIdCounter++;\n        }\n        if (this.buttonToggleGroup && this._value == this.buttonToggleGroup.value) {\n            this._checked = true;\n        }\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    };\n    /** Focuses the button. */\n    /**\n     * Focuses the button.\n     * @return {?}\n     */\n    MatButtonToggle.prototype.focus = /**\n     * Focuses the button.\n     * @return {?}\n     */\n    function () {\n        this._inputElement.nativeElement.focus();\n    };\n    /**\n     * Toggle the state of the current button toggle.\n     * @return {?}\n     */\n    MatButtonToggle.prototype._toggle = /**\n     * Toggle the state of the current button toggle.\n     * @return {?}\n     */\n    function () {\n        this.checked = !this.checked;\n    };\n    /** Checks the button toggle due to an interaction with the underlying native input. */\n    /**\n     * Checks the button toggle due to an interaction with the underlying native input.\n     * @param {?} event\n     * @return {?}\n     */\n    MatButtonToggle.prototype._onInputChange = /**\n     * Checks the button toggle due to an interaction with the underlying native input.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        event.stopPropagation();\n        if (this._isSingleSelector) {\n            // Propagate the change one-way via the group, which will in turn mark this\n            // button toggle as checked.\n            var /** @type {?} */ groupValueChanged = this.buttonToggleGroup.selected != this;\n            this.checked = true;\n            this.buttonToggleGroup.selected = this;\n            this.buttonToggleGroup._onTouched();\n            if (groupValueChanged) {\n                this.buttonToggleGroup._emitChangeEvent();\n            }\n        }\n        else {\n            this._toggle();\n        }\n        // Emit a change event when the native input does.\n        this._emitChangeEvent();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatButtonToggle.prototype._onInputClick = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    };\n    /**\n     * Dispatch change event with current value.\n     * @return {?}\n     */\n    MatButtonToggle.prototype._emitChangeEvent = /**\n     * Dispatch change event with current value.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ event = new MatButtonToggleChange();\n        event.source = this;\n        event.value = this._value;\n        this.change.emit(event);\n    };\n    // Unregister buttonToggleDispatcherListener on destroy\n    /**\n     * @return {?}\n     */\n    MatButtonToggle.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._removeUniqueSelectionListener();\n    };\n    /**\n     * Marks the button toggle as needing checking for change detection.\n     * This method is exposed because the parent button toggle group will directly\n     * update bound properties of the radio button.\n     */\n    /**\n     * Marks the button toggle as needing checking for change detection.\n     * This method is exposed because the parent button toggle group will directly\n     * update bound properties of the radio button.\n     * @return {?}\n     */\n    MatButtonToggle.prototype._markForCheck = /**\n     * Marks the button toggle as needing checking for change detection.\n     * This method is exposed because the parent button toggle group will directly\n     * update bound properties of the radio button.\n     * @return {?}\n     */\n    function () {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update button toggle's status\n        this._changeDetectorRef.markForCheck();\n    };\n    return MatButtonToggle;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatButtonToggleModule = /** @class */ (function () {\n    function MatButtonToggleModule() {\n    }\n    return MatButtonToggleModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatButtonToggleGroupBase, _MatButtonToggleGroupMixinBase, MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, MatButtonToggleChange, MatButtonToggleGroup, MatButtonToggleGroupMultiple, MatButtonToggle, MatButtonToggleModule };\n//# sourceMappingURL=button-toggle.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport '@angular/core';\nimport '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MatCardContent = /** @class */ (function () {\n    function MatCardContent() {\n    }\n    return MatCardContent;\n}());\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MatCardTitle = /** @class */ (function () {\n    function MatCardTitle() {\n    }\n    return MatCardTitle;\n}());\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MatCardSubtitle = /** @class */ (function () {\n    function MatCardSubtitle() {\n    }\n    return MatCardSubtitle;\n}());\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MatCardActions = /** @class */ (function () {\n    function MatCardActions() {\n    }\n    return MatCardActions;\n}());\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nvar MatCardFooter = /** @class */ (function () {\n    function MatCardFooter() {\n    }\n    return MatCardFooter;\n}());\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MatCardImage = /** @class */ (function () {\n    function MatCardImage() {\n    }\n    return MatCardImage;\n}());\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MatCardSmImage = /** @class */ (function () {\n    function MatCardSmImage() {\n    }\n    return MatCardSmImage;\n}());\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MatCardMdImage = /** @class */ (function () {\n    function MatCardMdImage() {\n    }\n    return MatCardMdImage;\n}());\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MatCardLgImage = /** @class */ (function () {\n    function MatCardLgImage() {\n    }\n    return MatCardLgImage;\n}());\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MatCardXlImage = /** @class */ (function () {\n    function MatCardXlImage() {\n    }\n    return MatCardXlImage;\n}());\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nvar MatCardAvatar = /** @class */ (function () {\n    function MatCardAvatar() {\n    }\n    return MatCardAvatar;\n}());\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nvar MatCard = /** @class */ (function () {\n    function MatCard() {\n    }\n    return MatCard;\n}());\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * \\@docs-private\n */\nvar MatCardHeader = /** @class */ (function () {\n    function MatCardHeader() {\n    }\n    return MatCardHeader;\n}());\n/**\n * Component intended to be used within the <mat-card> component. It adds styles for a preset\n * layout that groups an image with a title section.\n * \\@docs-private\n */\nvar MatCardTitleGroup = /** @class */ (function () {\n    function MatCardTitleGroup() {\n    }\n    return MatCardTitleGroup;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatCardModule = /** @class */ (function () {\n    function MatCardModule() {\n    }\n    return MatCardModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardImage, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardXlImage, MatCardAvatar, MatCard, MatCardHeader, MatCardTitleGroup, MatCardModule };\n//# sourceMappingURL=card.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { __extends } from 'tslib';\nimport * as tslib_1 from 'tslib';\nimport '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { forwardRef } from '@angular/core';\nimport { CheckboxRequiredValidator, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { mixinColor, mixinDisableRipple, mixinDisabled, mixinTabIndex } from '@angular/material/core';\nimport '@angular/common';\nimport '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * \\@docs-private\n */\nvar MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return MatCheckbox; }),\n    multi: true\n};\n/** @enum {number} */\nvar TransitionCheckState = {\n    /** The initial state of the component before any user interaction. */\n    Init: 0,\n    /** The state representing the component when it's becoming checked. */\n    Checked: 1,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked: 2,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate: 3,\n};\nTransitionCheckState[TransitionCheckState.Init] = \"Init\";\nTransitionCheckState[TransitionCheckState.Checked] = \"Checked\";\nTransitionCheckState[TransitionCheckState.Unchecked] = \"Unchecked\";\nTransitionCheckState[TransitionCheckState.Indeterminate] = \"Indeterminate\";\n/**\n * Change event object emitted by MatCheckbox.\n */\nvar MatCheckboxChange = /** @class */ (function () {\n    function MatCheckboxChange() {\n    }\n    return MatCheckboxChange;\n}());\n/**\n * \\@docs-private\n */\nvar MatCheckboxBase = /** @class */ (function () {\n    function MatCheckboxBase(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n    }\n    return MatCheckboxBase;\n}());\nvar _MatCheckboxMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatCheckboxBase)), 'accent'));\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://www.google.com/design/spec/components/selection-controls.html\n */\nvar MatCheckbox = /** @class */ (function (_super) {\n    __extends(MatCheckbox, _super);\n    function MatCheckbox(renderer, elementRef, _changeDetectorRef, _focusMonitor, tabIndex) {\n        var _this = _super.call(this, renderer, elementRef) || this;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._focusMonitor = _focusMonitor;\n        _this.tabIndex = parseInt(tabIndex) || 0;\n        return _this;\n    }\n    Object.defineProperty(MatCheckbox.prototype, \"inputId\", {\n        /** Returns the unique id for the visual hidden input. */\n        get: /**\n         * Returns the unique id for the visual hidden input.\n         * @return {?}\n         */\n        function () { return (this.id || this._uniqueId) + \"-input\"; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatCheckbox.prototype, \"required\", {\n        get: /**\n         * Whether the checkbox is required.\n         * @return {?}\n         */\n        function () { return this._required; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._required = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatCheckbox.prototype, \"align\", {\n        get: /**\n         * Whether or not the checkbox should appear before or after the label.\n         * @deprecated\n         * @return {?}\n         */\n        function () {\n            // align refers to the checkbox relative to the label, while labelPosition refers to the\n            // label relative to the checkbox. As such, they are inverted.\n            return this.labelPosition == 'after' ? 'start' : 'end';\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this.labelPosition = (v == 'start') ? 'after' : 'before';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatCheckbox.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement, false)\n            .subscribe(function (focusOrigin) { return _this._onInputFocusChange(focusOrigin); });\n    };\n    /**\n     * @return {?}\n     */\n    MatCheckbox.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    };\n    Object.defineProperty(MatCheckbox.prototype, \"checked\", {\n        get: /**\n         * Whether the checkbox is checked.\n         * @return {?}\n         */\n        function () {\n            return this._checked;\n        },\n        set: /**\n         * @param {?} checked\n         * @return {?}\n         */\n        function (checked) {\n            if (checked != this.checked) {\n                this._checked = checked;\n                this._changeDetectorRef.markForCheck();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatCheckbox.prototype, \"indeterminate\", {\n        get: /**\n         * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n         * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n         * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n         * set to false.\n         * @return {?}\n         */\n        function () {\n            return this._indeterminate;\n        },\n        set: /**\n         * @param {?} indeterminate\n         * @return {?}\n         */\n        function (indeterminate) {\n            var /** @type {?} */ changed = indeterminate != this._indeterminate;\n            this._indeterminate = indeterminate;\n            if (changed) {\n                if (this._indeterminate) {\n                    this._transitionCheckState(TransitionCheckState.Indeterminate);\n                }\n                else {\n                    this._transitionCheckState(this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n                }\n                this.indeterminateChange.emit(this._indeterminate);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatCheckbox.prototype._isRippleDisabled = /**\n     * @return {?}\n     */\n    function () {\n        return this.disableRipple || this.disabled;\n    };\n    /** Method being called whenever the label text changes. */\n    /**\n     * Method being called whenever the label text changes.\n     * @return {?}\n     */\n    MatCheckbox.prototype._onLabelTextChange = /**\n     * Method being called whenever the label text changes.\n     * @return {?}\n     */\n    function () {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value Value to be set to the model.\n     */\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value Value to be set to the model.\n     * @return {?}\n     */\n    MatCheckbox.prototype.writeValue = /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value Value to be set to the model.\n     * @return {?}\n     */\n    function (value) {\n        this.checked = !!value;\n    };\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Function to be called on change.\n     */\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Function to be called on change.\n     * @return {?}\n     */\n    MatCheckbox.prototype.registerOnChange = /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Function to be called on change.\n     * @return {?}\n     */\n    function (fn) {\n        this._controlValueAccessorChangeFn = fn;\n    };\n    /**\n     * Registers a callback to be triggered when the control has been touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be triggered when the checkbox is touched.\n     */\n    /**\n     * Registers a callback to be triggered when the control has been touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be triggered when the checkbox is touched.\n     * @return {?}\n     */\n    MatCheckbox.prototype.registerOnTouched = /**\n     * Registers a callback to be triggered when the control has been touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be triggered when the checkbox is touched.\n     * @return {?}\n     */\n    function (fn) {\n        this.onTouched = fn;\n    };\n    /**\n     * Sets the checkbox's disabled state. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the checkbox should be disabled.\n     */\n    /**\n     * Sets the checkbox's disabled state. Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled Whether the checkbox should be disabled.\n     * @return {?}\n     */\n    MatCheckbox.prototype.setDisabledState = /**\n     * Sets the checkbox's disabled state. Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled Whether the checkbox should be disabled.\n     * @return {?}\n     */\n    function (isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * @param {?} newState\n     * @return {?}\n     */\n    MatCheckbox.prototype._transitionCheckState = /**\n     * @param {?} newState\n     * @return {?}\n     */\n    function (newState) {\n        var /** @type {?} */ oldState = this._currentCheckState;\n        var /** @type {?} */ renderer = this._renderer;\n        var /** @type {?} */ elementRef = this._elementRef;\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            renderer.removeClass(elementRef.nativeElement, this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            renderer.addClass(elementRef.nativeElement, this._currentAnimationClass);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatCheckbox.prototype._emitChangeEvent = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    };\n    /**\n     * Function is called whenever the focus changes for the input element.\n     * @param {?} focusOrigin\n     * @return {?}\n     */\n    MatCheckbox.prototype._onInputFocusChange = /**\n     * Function is called whenever the focus changes for the input element.\n     * @param {?} focusOrigin\n     * @return {?}\n     */\n    function (focusOrigin) {\n        if (!this._focusRipple && focusOrigin === 'keyboard') {\n            this._focusRipple = this._ripple.launch(0, 0, { persistent: true, centered: true });\n        }\n        else if (!focusOrigin) {\n            this._removeFocusRipple();\n            this.onTouched();\n        }\n    };\n    /** Toggles the `checked` state of the checkbox. */\n    /**\n     * Toggles the `checked` state of the checkbox.\n     * @return {?}\n     */\n    MatCheckbox.prototype.toggle = /**\n     * Toggles the `checked` state of the checkbox.\n     * @return {?}\n     */\n    function () {\n        this.checked = !this.checked;\n    };\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param {?} event\n     * @return {?}\n     */\n    MatCheckbox.prototype._onInputClick = /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var _this = this;\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        this._removeFocusRipple();\n        if (!this.disabled) {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this._indeterminate) {\n                Promise.resolve().then(function () {\n                    _this._indeterminate = false;\n                    _this.indeterminateChange.emit(_this._indeterminate);\n                });\n            }\n            this.toggle();\n            this._transitionCheckState(this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n    };\n    /** Focuses the checkbox. */\n    /**\n     * Focuses the checkbox.\n     * @return {?}\n     */\n    MatCheckbox.prototype.focus = /**\n     * Focuses the checkbox.\n     * @return {?}\n     */\n    function () {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatCheckbox.prototype._onInteractionEvent = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    };\n    /**\n     * @param {?} oldState\n     * @param {?} newState\n     * @return {?}\n     */\n    MatCheckbox.prototype._getAnimationClassForCheckStateTransition = /**\n     * @param {?} oldState\n     * @param {?} newState\n     * @return {?}\n     */\n    function (oldState, newState) {\n        var /** @type {?} */ animSuffix = '';\n        switch (oldState) {\n            case TransitionCheckState.Init:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === TransitionCheckState.Checked) {\n                    animSuffix = 'unchecked-checked';\n                }\n                else if (newState == TransitionCheckState.Indeterminate) {\n                    animSuffix = 'unchecked-indeterminate';\n                }\n                else {\n                    return '';\n                }\n                break;\n            case TransitionCheckState.Unchecked:\n                animSuffix = newState === TransitionCheckState.Checked ?\n                    'unchecked-checked' : 'unchecked-indeterminate';\n                break;\n            case TransitionCheckState.Checked:\n                animSuffix = newState === TransitionCheckState.Unchecked ?\n                    'checked-unchecked' : 'checked-indeterminate';\n                break;\n            case TransitionCheckState.Indeterminate:\n                animSuffix = newState === TransitionCheckState.Checked ?\n                    'indeterminate-checked' : 'indeterminate-unchecked';\n                break;\n        }\n        return \"mat-checkbox-anim-\" + animSuffix;\n    };\n    /**\n     * Fades out the focus state ripple.\n     * @return {?}\n     */\n    MatCheckbox.prototype._removeFocusRipple = /**\n     * Fades out the focus state ripple.\n     * @return {?}\n     */\n    function () {\n        if (this._focusRipple) {\n            this._focusRipple.fadeOut();\n            this._focusRipple = null;\n        }\n    };\n    return MatCheckbox;\n}(_MatCheckboxMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar _MatCheckboxRequiredValidator = CheckboxRequiredValidator;\nvar MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return MatCheckboxRequiredValidator; }),\n    multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nvar MatCheckboxRequiredValidator = /** @class */ (function (_super) {\n    __extends(MatCheckboxRequiredValidator, _super);\n    function MatCheckboxRequiredValidator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MatCheckboxRequiredValidator;\n}(_MatCheckboxRequiredValidator));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatCheckboxModule = /** @class */ (function () {\n    function MatCheckboxModule() {\n    }\n    return MatCheckboxModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, TransitionCheckState, MatCheckboxChange, MatCheckboxBase, _MatCheckboxMixinBase, MatCheckbox, MatCheckboxModule, _MatCheckboxRequiredValidator, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckboxRequiredValidator };\n//# sourceMappingURL=checkbox.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport '@angular/core';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { BACKSPACE, DELETE, LEFT_ARROW, RIGHT_ARROW, SPACE } from '@angular/cdk/keycodes';\nimport { startWith } from 'rxjs/operators/startWith';\nimport '@angular/forms';\nimport '@angular/material/form-field';\nimport { merge } from 'rxjs/observable/merge';\nimport 'rxjs/Subject';\nimport 'rxjs/Subscription';\nimport { __extends } from 'tslib';\nimport * as tslib_1 from 'tslib';\nimport { mixinColor, mixinDisabled } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * Event object emitted by MatChip when selected or deselected.\n */\nvar MatChipSelectionChange = /** @class */ (function () {\n    function MatChipSelectionChange(source, selected, isUserInput) {\n        if (isUserInput === void 0) { isUserInput = false; }\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n    return MatChipSelectionChange;\n}());\n/**\n * \\@docs-private\n */\nvar MatChipBase = /** @class */ (function () {\n    function MatChipBase(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n    }\n    return MatChipBase;\n}());\nvar _MatChipMixinBase = mixinColor(mixinDisabled(MatChipBase), 'primary');\n/**\n * Dummy directive to add CSS class to basic chips.\n * \\@docs-private\n */\nvar MatBasicChip = /** @class */ (function () {\n    function MatBasicChip() {\n    }\n    return MatBasicChip;\n}());\n/**\n * Material design styled Chip component. Used inside the MatChipList component.\n */\nvar MatChip = /** @class */ (function (_super) {\n    __extends(MatChip, _super);\n    function MatChip(renderer, _elementRef) {\n        var _this = _super.call(this, renderer, _elementRef) || this;\n        _this._elementRef = _elementRef;\n        return _this;\n    }\n    Object.defineProperty(MatChip.prototype, \"selected\", {\n        get: /**\n         * Whether the chip is selected.\n         * @return {?}\n         */\n        function () {\n            return this._selected;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._selected = coerceBooleanProperty(value);\n            this.selectionChange.emit({\n                source: this,\n                isUserInput: false,\n                selected: value\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatChip.prototype, \"value\", {\n        get: /**\n         * The value of the chip. Defaults to the content inside <mat-chip> tags.\n         * @return {?}\n         */\n        function () {\n            return this._value != undefined\n                ? this._value\n                : this._elementRef.nativeElement.textContent;\n        },\n        set: /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        function (newValue) {\n            this._value = newValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatChip.prototype, \"selectable\", {\n        get: /**\n         * Whether or not the chips are selectable. When a chip is not selectable,\n         * changes to it's selected state are always ignored.\n         * @return {?}\n         */\n        function () {\n            return this._selectable;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._selectable = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatChip.prototype, \"removable\", {\n        get: /**\n         * Determines whether or not the chip displays the remove styling and emits (remove) events.\n         * @return {?}\n         */\n        function () {\n            return this._removable;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._removable = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatChip.prototype, \"ariaSelected\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.selectable ? this.selected.toString() : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatChip.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.destroyed.emit({ chip: this });\n    };\n    /** Selects the chip. */\n    /**\n     * Selects the chip.\n     * @return {?}\n     */\n    MatChip.prototype.select = /**\n     * Selects the chip.\n     * @return {?}\n     */\n    function () {\n        this._selected = true;\n        this.selectionChange.emit({\n            source: this,\n            isUserInput: false,\n            selected: true\n        });\n    };\n    /** Deselects the chip. */\n    /**\n     * Deselects the chip.\n     * @return {?}\n     */\n    MatChip.prototype.deselect = /**\n     * Deselects the chip.\n     * @return {?}\n     */\n    function () {\n        this._selected = false;\n        this.selectionChange.emit({\n            source: this,\n            isUserInput: false,\n            selected: false\n        });\n    };\n    /** Select this chip and emit selected event */\n    /**\n     * Select this chip and emit selected event\n     * @return {?}\n     */\n    MatChip.prototype.selectViaInteraction = /**\n     * Select this chip and emit selected event\n     * @return {?}\n     */\n    function () {\n        this._selected = true;\n        // Emit select event when selected changes.\n        this.selectionChange.emit({\n            source: this,\n            isUserInput: true,\n            selected: true\n        });\n    };\n    /** Toggles the current selected state of this chip. */\n    /**\n     * Toggles the current selected state of this chip.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    MatChip.prototype.toggleSelected = /**\n     * Toggles the current selected state of this chip.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    function (isUserInput) {\n        if (isUserInput === void 0) { isUserInput = false; }\n        this._selected = !this.selected;\n        this.selectionChange.emit({\n            source: this,\n            isUserInput: isUserInput,\n            selected: this._selected\n        });\n        return this.selected;\n    };\n    /** Allows for programmatic focusing of the chip. */\n    /**\n     * Allows for programmatic focusing of the chip.\n     * @return {?}\n     */\n    MatChip.prototype.focus = /**\n     * Allows for programmatic focusing of the chip.\n     * @return {?}\n     */\n    function () {\n        this._elementRef.nativeElement.focus();\n        this._onFocus.next({ chip: this });\n    };\n    /**\n     * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n     * BACKSPACE keys are pressed.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     */\n    /**\n     * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n     * BACKSPACE keys are pressed.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     * @return {?}\n     */\n    MatChip.prototype.remove = /**\n     * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n     * BACKSPACE keys are pressed.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     * @return {?}\n     */\n    function () {\n        if (this.removable) {\n            this.removed.emit({ chip: this });\n        }\n    };\n    /** Ensures events fire properly upon click. */\n    /**\n     * Ensures events fire properly upon click.\n     * @param {?} event\n     * @return {?}\n     */\n    MatChip.prototype._handleClick = /**\n     * Ensures events fire properly upon click.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // Check disabled\n        if (this.disabled) {\n            return;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n        this.focus();\n    };\n    /** Handle custom key presses. */\n    /**\n     * Handle custom key presses.\n     * @param {?} event\n     * @return {?}\n     */\n    MatChip.prototype._handleKeydown = /**\n     * Handle custom key presses.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (this.disabled) {\n            return;\n        }\n        switch (event.keyCode) {\n            case DELETE:\n            case BACKSPACE:\n                // If we are removable, remove the focused chip\n                this.remove();\n                // Always prevent so page navigation does not occur\n                event.preventDefault();\n                break;\n            case SPACE:\n                // If we are selectable, toggle the focused chip\n                if (this.selectable) {\n                    this.toggleSelected(true);\n                }\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatChip.prototype._blur = /**\n     * @return {?}\n     */\n    function () {\n        this._hasFocus = false;\n        this._onBlur.next({ chip: this });\n    };\n    return MatChip;\n}(_MatChipMixinBase));\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     <mat-chip>\n *       <mat-icon matChipRemove>cancel</mat-icon>\n *     </mat-chip>\n *\n * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning\n * styles to properly center the icon within the chip.\n */\nvar MatChipRemove = /** @class */ (function () {\n    function MatChipRemove(_parentChip) {\n        this._parentChip = _parentChip;\n    }\n    /** Calls the parent chip's public `remove()` method if applicable. */\n    /**\n     * Calls the parent chip's public `remove()` method if applicable.\n     * @return {?}\n     */\n    MatChipRemove.prototype._handleClick = /**\n     * Calls the parent chip's public `remove()` method if applicable.\n     * @return {?}\n     */\n    function () {\n        if (this._parentChip.removable) {\n            this._parentChip.remove();\n        }\n    };\n    return MatChipRemove;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Change event object that is emitted when the chip list value has changed.\n */\nvar MatChipListChange = /** @class */ (function () {\n    function MatChipListChange(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n    return MatChipListChange;\n}());\n/**\n * A material design chips component (named ChipList for it's similarity to the List component).\n */\nvar MatChipList = /** @class */ (function () {\n    function MatChipList(_renderer, _elementRef, _changeDetectorRef, _dir, _parentForm, _parentFormGroup, ngControl) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n    Object.defineProperty(MatChipList.prototype, \"selected\", {\n        /** The array of selected chips inside chip list. */\n        get: /**\n         * The array of selected chips inside chip list.\n         * @return {?}\n         */\n        function () {\n            return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatChipList.prototype, \"role\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.empty ? null : 'listbox';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatChipList.prototype, \"multiple\", {\n        get: /**\n         * Whether the user should be allowed to select multiple chips.\n         * @return {?}\n         */\n        function () { return this._multiple; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._multiple = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatChipList.prototype, \"compareWith\", {\n        get: /**\n         * A function to compare the option values with the selected values. The first argument\n         * is a value from an option. The second is a value from the selection. A boolean\n         * should be returned.\n         * @return {?}\n         */\n        function () { return this._compareWith; },\n        set: /**\n         * @param {?} fn\n         * @return {?}\n         */\n        function (fn) {\n            this._compareWith = fn;\n            if (this._selectionModel) {\n                // A different comparator means the selection could change.\n                this._initializeSelection();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatChipList.prototype, \"value\", {\n        get: /**\n         * Required for FormFieldControl\n         * @return {?}\n         */\n        function () { return this._value; },\n        set: /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        function (newValue) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatChipList.prototype, \"id\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._id || this._uid; },\n        set: /**\n         * Required for FormFieldControl. The ID of the chip list\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._id = value;\n            this.stateChanges.next();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatChipList.prototype, \"required\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._required;\n        },\n        set: /**\n         * Required for FormFieldControl. Whether the chip list is required.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._required = coerceBooleanProperty(value);\n            this.stateChanges.next();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatChipList.prototype, \"placeholder\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n        },\n        set: /**\n         * For FormFieldControl. Use chip input's placholder if there's a chip input\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._placeholder = value;\n            this.stateChanges.next();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatChipList.prototype, \"focused\", {\n        /** Whether any chips or the matChipInput inside of this chip-list has focus. */\n        get: /**\n         * Whether any chips or the matChipInput inside of this chip-list has focus.\n         * @return {?}\n         */\n        function () {\n            return this.chips.some(function (chip) { return chip._hasFocus; }) ||\n                (this._chipInput && this._chipInput.focused);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatChipList.prototype, \"empty\", {\n        /** Whether this chip-list contains no chips and no matChipInput. */\n        get: /**\n         * Whether this chip-list contains no chips and no matChipInput.\n         * @return {?}\n         */\n        function () {\n            return (!this._chipInput || this._chipInput.empty) && this.chips.length === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatChipList.prototype, \"shouldPlaceholderFloat\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return !this.empty || this.focused;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatChipList.prototype, \"disabled\", {\n        get: /**\n         * Whether this chip-list is disabled.\n         * @return {?}\n         */\n        function () { return this.ngControl ? this.ngControl.disabled : this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._disabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatChipList.prototype, \"errorState\", {\n        /** Whether the chip list is in an error state. */\n        get: /**\n         * Whether the chip list is in an error state.\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ isInvalid = this.ngControl && this.ngControl.invalid;\n            var /** @type {?} */ isTouched = this.ngControl && this.ngControl.touched;\n            var /** @type {?} */ isSubmitted = (this._parentFormGroup && this._parentFormGroup.submitted) ||\n                (this._parentForm && this._parentForm.submitted);\n            return !!(isInvalid && (isTouched || isSubmitted));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatChipList.prototype, \"selectable\", {\n        get: /**\n         * Whether or not this chip is selectable. When a chip is not selectable,\n         * its selected state is always ignored.\n         * @return {?}\n         */\n        function () { return this._selectable; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._selectable = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatChipList.prototype, \"tabIndex\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._userTabIndex = value;\n            this._tabIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatChipList.prototype, \"chipSelectionChanges\", {\n        /** Combined stream of all of the child chips' selection change events. */\n        get: /**\n         * Combined stream of all of the child chips' selection change events.\n         * @return {?}\n         */\n        function () {\n            return merge.apply(void 0, this.chips.map(function (chip) { return chip.selectionChange; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatChipList.prototype, \"chipFocusChanges\", {\n        /** Combined stream of all of the child chips' focus change events. */\n        get: /**\n         * Combined stream of all of the child chips' focus change events.\n         * @return {?}\n         */\n        function () {\n            return merge.apply(void 0, this.chips.map(function (chip) { return chip._onFocus; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatChipList.prototype, \"chipBlurChanges\", {\n        /** Combined stream of all of the child chips' blur change events. */\n        get: /**\n         * Combined stream of all of the child chips' blur change events.\n         * @return {?}\n         */\n        function () {\n            return merge.apply(void 0, this.chips.map(function (chip) { return chip._onBlur; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatChipList.prototype, \"chipRemoveChanges\", {\n        /** Combined stream of all of the child chips' remove change events. */\n        get: /**\n         * Combined stream of all of the child chips' remove change events.\n         * @return {?}\n         */\n        function () {\n            return merge.apply(void 0, this.chips.map(function (chip) { return chip.destroy; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatChipList.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._keyManager = new FocusKeyManager(this.chips).withWrap();\n        // Prevents the chip list from capturing focus and redirecting\n        // it back to the first chip when the user tabs out.\n        this._tabOutSubscription = this._keyManager.tabOut.subscribe(function () {\n            _this._tabIndex = -1;\n            setTimeout(function () { return _this._tabIndex = _this._userTabIndex || 0; });\n        });\n        // When the list changes, re-subscribe\n        this._changeSubscription = this.chips.changes.pipe(startWith(null)).subscribe(function () {\n            _this._resetChips();\n            // Reset chips selected/deselected status\n            // Reset chips selected/deselected status\n            _this._initializeSelection();\n            // Check to see if we need to update our tab index\n            // Check to see if we need to update our tab index\n            _this._updateTabIndex();\n            // Check to see if we have a destroyed chip and need to refocus\n            // Check to see if we have a destroyed chip and need to refocus\n            _this._updateFocusForDestroyedChips();\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MatChipList.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n        this.stateChanges.next();\n    };\n    /**\n     * @return {?}\n     */\n    MatChipList.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._tabOutSubscription.unsubscribe();\n        if (this._changeSubscription) {\n            this._changeSubscription.unsubscribe();\n        }\n        this._dropSubscriptions();\n    };\n    /** Associates an HTML input element with this chip list. */\n    /**\n     * Associates an HTML input element with this chip list.\n     * @param {?} inputElement\n     * @return {?}\n     */\n    MatChipList.prototype.registerInput = /**\n     * Associates an HTML input element with this chip list.\n     * @param {?} inputElement\n     * @return {?}\n     */\n    function (inputElement) {\n        this._chipInput = inputElement;\n    };\n    // Implemented as part of MatFormFieldControl.\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    MatChipList.prototype.setDescribedByIds = /**\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) { this._ariaDescribedby = ids.join(' '); };\n    // Implemented as part of ControlValueAccessor\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    MatChipList.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (this.chips) {\n            this._setSelectionByValue(value, false);\n        }\n    };\n    // Implemented as part of ControlValueAccessor\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MatChipList.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this._onChange = fn;\n    };\n    // Implemented as part of ControlValueAccessor\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MatChipList.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this._onTouched = fn;\n    };\n    // Implemented as part of ControlValueAccessor\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    MatChipList.prototype.setDisabledState = /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    function (disabled) {\n        this.disabled = disabled;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', disabled);\n        this.stateChanges.next();\n    };\n    /**\n     * @return {?}\n     */\n    MatChipList.prototype.onContainerClick = /**\n     * @return {?}\n     */\n    function () {\n        this.focus();\n    };\n    /**\n     * Focuses the the first non-disabled chip in this chip list, or the associated input when there\n     * are no eligible chips.\n     */\n    /**\n     * Focuses the the first non-disabled chip in this chip list, or the associated input when there\n     * are no eligible chips.\n     * @return {?}\n     */\n    MatChipList.prototype.focus = /**\n     * Focuses the the first non-disabled chip in this chip list, or the associated input when there\n     * are no eligible chips.\n     * @return {?}\n     */\n    function () {\n        // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n        // Focus on first element if there's no chipInput inside chip-list\n        if (this._chipInput && this._chipInput.focused) {\n            // do nothing\n        }\n        else if (this.chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n            this.stateChanges.next();\n        }\n        else {\n            this._focusInput();\n            this.stateChanges.next();\n        }\n    };\n    /** Attempt to focus an input if we have one. */\n    /**\n     * Attempt to focus an input if we have one.\n     * @return {?}\n     */\n    MatChipList.prototype._focusInput = /**\n     * Attempt to focus an input if we have one.\n     * @return {?}\n     */\n    function () {\n        if (this._chipInput) {\n            this._chipInput.focus();\n        }\n    };\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     */\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     * @param {?} event\n     * @return {?}\n     */\n    MatChipList.prototype._keydown = /**\n     * Pass events to the keyboard manager. Available here for tests.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var /** @type {?} */ code = event.keyCode;\n        var /** @type {?} */ target = /** @type {?} */ (event.target);\n        var /** @type {?} */ isInputEmpty = this._isInputEmpty(target);\n        var /** @type {?} */ isRtl = this._dir && this._dir.value == 'rtl';\n        var /** @type {?} */ isPrevKey = (code === (isRtl ? RIGHT_ARROW : LEFT_ARROW));\n        var /** @type {?} */ isNextKey = (code === (isRtl ? LEFT_ARROW : RIGHT_ARROW));\n        var /** @type {?} */ isBackKey = code === BACKSPACE;\n        // If they are on an empty input and hit backspace, focus the last chip\n        if (isInputEmpty && isBackKey) {\n            this._keyManager.setLastItemActive();\n            event.preventDefault();\n            return;\n        }\n        // If they are on a chip, check for space/left/right, otherwise pass to our key manager (like\n        // up/down keys)\n        if (target && target.classList.contains('mat-chip')) {\n            if (isPrevKey) {\n                this._keyManager.setPreviousItemActive();\n                event.preventDefault();\n            }\n            else if (isNextKey) {\n                this._keyManager.setNextItemActive();\n                event.preventDefault();\n            }\n            else {\n                this._keyManager.onKeydown(event);\n            }\n        }\n        this.stateChanges.next();\n    };\n    /**\n     * Check the tab index as you should not be allowed to focus an empty list.\n     */\n    /**\n     * Check the tab index as you should not be allowed to focus an empty list.\n     * @return {?}\n     */\n    MatChipList.prototype._updateTabIndex = /**\n     * Check the tab index as you should not be allowed to focus an empty list.\n     * @return {?}\n     */\n    function () {\n        // If we have 0 chips, we should not allow keyboard focus\n        this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n    };\n    /**\n     * Update key manager's active item when chip is deleted.\n     * If the deleted chip is the last chip in chip list, focus the new last chip.\n     * Otherwise focus the next chip in the list.\n     * Save `_lastDestroyedIndex` so we can set the correct focus.\n     */\n    /**\n     * Update key manager's active item when chip is deleted.\n     * If the deleted chip is the last chip in chip list, focus the new last chip.\n     * Otherwise focus the next chip in the list.\n     * Save `_lastDestroyedIndex` so we can set the correct focus.\n     * @param {?} chip\n     * @return {?}\n     */\n    MatChipList.prototype._updateKeyManager = /**\n     * Update key manager's active item when chip is deleted.\n     * If the deleted chip is the last chip in chip list, focus the new last chip.\n     * Otherwise focus the next chip in the list.\n     * Save `_lastDestroyedIndex` so we can set the correct focus.\n     * @param {?} chip\n     * @return {?}\n     */\n    function (chip) {\n        var /** @type {?} */ chipIndex = this.chips.toArray().indexOf(chip);\n        if (this._isValidIndex(chipIndex)) {\n            if (chip._hasFocus) {\n                // Check whether the chip is not the last item\n                if (chipIndex < this.chips.length - 1) {\n                    this._keyManager.setActiveItem(chipIndex);\n                }\n                else if (chipIndex - 1 >= 0) {\n                    this._keyManager.setActiveItem(chipIndex - 1);\n                }\n            }\n            if (this._keyManager.activeItemIndex === chipIndex) {\n                this._lastDestroyedIndex = chipIndex;\n            }\n        }\n    };\n    /**\n     * Checks to see if a focus chip was recently destroyed so that we can refocus the next closest\n     * one.\n     */\n    /**\n     * Checks to see if a focus chip was recently destroyed so that we can refocus the next closest\n     * one.\n     * @return {?}\n     */\n    MatChipList.prototype._updateFocusForDestroyedChips = /**\n     * Checks to see if a focus chip was recently destroyed so that we can refocus the next closest\n     * one.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ chipsArray = this.chips;\n        if (this._lastDestroyedIndex != null && chipsArray.length > 0) {\n            // Check whether the destroyed chip was the last item\n            var /** @type {?} */ newFocusIndex = Math.min(this._lastDestroyedIndex, chipsArray.length - 1);\n            this._keyManager.setActiveItem(newFocusIndex);\n            var /** @type {?} */ focusChip = this._keyManager.activeItem;\n            // Focus the chip\n            if (focusChip) {\n                focusChip.focus();\n            }\n        }\n        // Reset our destroyed index\n        this._lastDestroyedIndex = null;\n    };\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of chips.\n     */\n    MatChipList.prototype._isValidIndex = /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of chips.\n     */\n    function (index) {\n        return index >= 0 && index < this.chips.length;\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    MatChipList.prototype._isInputEmpty = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        if (element && element.nodeName.toLowerCase() === 'input') {\n            var /** @type {?} */ input = /** @type {?} */ (element);\n            return !input.value;\n        }\n        return false;\n    };\n    /**\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    MatChipList.prototype._setSelectionByValue = /**\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    function (value, isUserInput) {\n        var _this = this;\n        if (isUserInput === void 0) { isUserInput = true; }\n        this._clearSelection();\n        this.chips.forEach(function (chip) { return chip.deselect(); });\n        if (Array.isArray(value)) {\n            value.forEach(function (currentValue) { return _this._selectValue(currentValue, isUserInput); });\n            this._sortValues();\n        }\n        else {\n            var /** @type {?} */ correspondingChip = this._selectValue(value, isUserInput);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what chip the user interacted with last.\n            if (correspondingChip) {\n                var /** @type {?} */ correspondingChipIndex = this.chips.toArray().indexOf(correspondingChip);\n                if (isUserInput) {\n                    this._keyManager.setActiveItem(correspondingChipIndex);\n                }\n                else {\n                    this._keyManager.updateActiveItemIndex(correspondingChipIndex);\n                }\n            }\n        }\n    };\n    /**\n     * Finds and selects the chip based on its value.\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?} Chip that has the corresponding value.\n     */\n    MatChipList.prototype._selectValue = /**\n     * Finds and selects the chip based on its value.\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?} Chip that has the corresponding value.\n     */\n    function (value, isUserInput) {\n        var _this = this;\n        if (isUserInput === void 0) { isUserInput = true; }\n        var /** @type {?} */ correspondingChip = this.chips.find(function (chip) {\n            return chip.value != null && _this._compareWith(chip.value, value);\n        });\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n            this._selectionModel.select(correspondingChip);\n        }\n        return correspondingChip;\n    };\n    /**\n     * @return {?}\n     */\n    MatChipList.prototype._initializeSelection = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(function () {\n            if (_this.ngControl || _this._value) {\n                _this._setSelectionByValue(_this.ngControl ? _this.ngControl.value : _this._value, false);\n                _this.stateChanges.next();\n            }\n        });\n    };\n    /**\n     * Deselects every chip in the list.\n     * @param {?=} skip Chip that should not be deselected.\n     * @return {?}\n     */\n    MatChipList.prototype._clearSelection = /**\n     * Deselects every chip in the list.\n     * @param {?=} skip Chip that should not be deselected.\n     * @return {?}\n     */\n    function (skip) {\n        this._selectionModel.clear();\n        this.chips.forEach(function (chip) {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        });\n        this.stateChanges.next();\n    };\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     * @return {?}\n     */\n    MatChipList.prototype._sortValues = /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._multiple) {\n            this._selectionModel.clear();\n            this.chips.forEach(function (chip) {\n                if (chip.selected) {\n                    _this._selectionModel.select(chip);\n                }\n            });\n            this.stateChanges.next();\n        }\n    };\n    /**\n     * Emits change event to set the model value.\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    MatChipList.prototype._propagateChanges = /**\n     * Emits change event to set the model value.\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    function (fallbackValue) {\n        var /** @type {?} */ valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map(function (chip) { return chip.value; });\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    };\n    /** When blurred, mark the field as touched when focus moved outside the chip list. */\n    /**\n     * When blurred, mark the field as touched when focus moved outside the chip list.\n     * @return {?}\n     */\n    MatChipList.prototype._blur = /**\n     * When blurred, mark the field as touched when focus moved outside the chip list.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.disabled) {\n            if (this._chipInput) {\n                // If there's a chip input, we should check whether the focus moved to chip input.\n                // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n                // to chip input, do nothing.\n                // Timeout is needed to wait for the focus() event trigger on chip input.\n                setTimeout(function () {\n                    if (!_this.focused) {\n                        _this._markAsTouched();\n                    }\n                });\n            }\n            else {\n                // If there's no chip input, then mark the field as touched.\n                this._markAsTouched();\n            }\n        }\n    };\n    /** Mark the field as touched */\n    /**\n     * Mark the field as touched\n     * @return {?}\n     */\n    MatChipList.prototype._markAsTouched = /**\n     * Mark the field as touched\n     * @return {?}\n     */\n    function () {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    };\n    /**\n     * @return {?}\n     */\n    MatChipList.prototype._resetChips = /**\n     * @return {?}\n     */\n    function () {\n        this._dropSubscriptions();\n        this._listenToChipsFocus();\n        this._listenToChipsSelection();\n        this._listenToChipsRemoved();\n    };\n    /**\n     * @return {?}\n     */\n    MatChipList.prototype._dropSubscriptions = /**\n     * @return {?}\n     */\n    function () {\n        if (this._chipFocusSubscription) {\n            this._chipFocusSubscription.unsubscribe();\n            this._chipFocusSubscription = null;\n        }\n        if (this._chipBlurSubscription) {\n            this._chipBlurSubscription.unsubscribe();\n            this._chipBlurSubscription = null;\n        }\n        if (this._chipSelectionSubscription) {\n            this._chipSelectionSubscription.unsubscribe();\n            this._chipSelectionSubscription = null;\n        }\n    };\n    /**\n     * Listens to user-generated selection events on each chip.\n     * @return {?}\n     */\n    MatChipList.prototype._listenToChipsSelection = /**\n     * Listens to user-generated selection events on each chip.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._chipSelectionSubscription = this.chipSelectionChanges.subscribe(function (event) {\n            event.source.selected\n                ? _this._selectionModel.select(event.source)\n                : _this._selectionModel.deselect(event.source);\n            // For single selection chip list, make sure the deselected value is unselected.\n            if (!_this.multiple) {\n                _this.chips.forEach(function (chip) {\n                    if (!_this._selectionModel.isSelected(chip) && chip.selected) {\n                        chip.deselect();\n                    }\n                });\n            }\n            if (event.isUserInput) {\n                _this._propagateChanges();\n            }\n        });\n    };\n    /**\n     * Listens to user-generated selection events on each chip.\n     * @return {?}\n     */\n    MatChipList.prototype._listenToChipsFocus = /**\n     * Listens to user-generated selection events on each chip.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._chipFocusSubscription = this.chipFocusChanges.subscribe(function (event) {\n            var /** @type {?} */ chipIndex = _this.chips.toArray().indexOf(event.chip);\n            if (_this._isValidIndex(chipIndex)) {\n                _this._keyManager.updateActiveItemIndex(chipIndex);\n            }\n            _this.stateChanges.next();\n        });\n        this._chipBlurSubscription = this.chipBlurChanges.subscribe(function (_) {\n            _this._blur();\n            _this.stateChanges.next();\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MatChipList.prototype._listenToChipsRemoved = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._chipRemoveSubscription = this.chipRemoveChanges.subscribe(function (event) {\n            _this._updateKeyManager(event.chip);\n        });\n    };\n    return MatChipList;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @record\n */\n\n/**\n * Directive that adds chip-specific behaviors to an input element inside <mat-form-field>.\n * May be placed inside or outside of an <mat-chip-list>.\n */\nvar MatChipInput = /** @class */ (function () {\n    function MatChipInput(_elementRef) {\n        this._elementRef = _elementRef;\n        this._inputElement = /** @type {?} */ (this._elementRef.nativeElement);\n    }\n    Object.defineProperty(MatChipInput.prototype, \"chipList\", {\n        set: /**\n         * Register input for chip list\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value) {\n                this._chipList = value;\n                this._chipList.registerInput(this);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatChipInput.prototype, \"addOnBlur\", {\n        get: /**\n         * Whether or not the chipEnd event will be emitted when the input is blurred.\n         * @return {?}\n         */\n        function () { return this._addOnBlur; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._addOnBlur = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatChipInput.prototype, \"empty\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ value = this._inputElement.value;\n            return value == null || value === '';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Utility method to make host definition/tests more clear. */\n    /**\n     * Utility method to make host definition/tests more clear.\n     * @param {?=} event\n     * @return {?}\n     */\n    MatChipInput.prototype._keydown = /**\n     * Utility method to make host definition/tests more clear.\n     * @param {?=} event\n     * @return {?}\n     */\n    function (event) {\n        this._emitChipEnd(event);\n    };\n    /** Checks to see if the blur should emit the (chipEnd) event. */\n    /**\n     * Checks to see if the blur should emit the (chipEnd) event.\n     * @return {?}\n     */\n    MatChipInput.prototype._blur = /**\n     * Checks to see if the blur should emit the (chipEnd) event.\n     * @return {?}\n     */\n    function () {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipList.focused) {\n            this._chipList._blur();\n        }\n        this._chipList.stateChanges.next();\n    };\n    /**\n     * @return {?}\n     */\n    MatChipInput.prototype._focus = /**\n     * @return {?}\n     */\n    function () {\n        this.focused = true;\n        this._chipList.stateChanges.next();\n    };\n    /** Checks to see if the (chipEnd) event needs to be emitted. */\n    /**\n     * Checks to see if the (chipEnd) event needs to be emitted.\n     * @param {?=} event\n     * @return {?}\n     */\n    MatChipInput.prototype._emitChipEnd = /**\n     * Checks to see if the (chipEnd) event needs to be emitted.\n     * @param {?=} event\n     * @return {?}\n     */\n    function (event) {\n        if (!this._inputElement.value && !!event) {\n            this._chipList._keydown(event);\n        }\n        if (!event || this.separatorKeyCodes.indexOf(event.keyCode) > -1) {\n            this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\n            if (event) {\n                event.preventDefault();\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatChipInput.prototype.focus = /**\n     * @return {?}\n     */\n    function () { this._inputElement.focus(); };\n    return MatChipInput;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatChipsModule = /** @class */ (function () {\n    function MatChipsModule() {\n    }\n    return MatChipsModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatChipsModule, MatChipListChange, MatChipList, MatChipSelectionChange, MatChipBase, _MatChipMixinBase, MatBasicChip, MatChip, MatChipRemove, MatChipInput };\n//# sourceMappingURL=chips.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, TemplateRef } from '@angular/core';\nimport '@angular/common';\nimport { Overlay, OverlayConfig } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, ComponentPortal, PortalInjector, TemplatePortal } from '@angular/cdk/portal';\nimport '@angular/cdk/a11y';\nimport { extendObject } from '@angular/material/core';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { filter } from 'rxjs/operators/filter';\nimport 'rxjs/operators/startWith';\nimport { Directionality } from '@angular/cdk/bidi';\nimport 'rxjs/observable/defer';\nimport 'rxjs/Subject';\nimport { __extends } from 'tslib';\nimport * as tslib_1 from 'tslib';\nimport '@angular/animations';\nimport '@angular/platform-browser';\nimport { first } from 'rxjs/operators/first';\nimport { of } from 'rxjs/observable/of';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Possible overrides for a dialog's position.\n * @record\n */\n\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nvar MatDialogConfig = /** @class */ (function () {\n    function MatDialogConfig() {\n    }\n    return MatDialogConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * \\@docs-private\n */\nvar MatDialogContainer = /** @class */ (function (_super) {\n    __extends(MatDialogContainer, _super);\n    function MatDialogContainer(_elementRef, _focusTrapFactory, _changeDetectorRef, _document) {\n        var _this = _super.call(this) || this;\n        _this._elementRef = _elementRef;\n        _this._focusTrapFactory = _focusTrapFactory;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._document = _document;\n        return _this;\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @template T\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    MatDialogContainer.prototype.attachComponentPortal = /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @template T\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    function (portal) {\n        if (this._portalOutlet.hasAttached()) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachComponentPortal(portal);\n    };\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @template C\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    MatDialogContainer.prototype.attachTemplatePortal = /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @template C\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    function (portal) {\n        if (this._portalOutlet.hasAttached()) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    };\n    /**\n     * Moves the focus inside the focus trap.\n     * @return {?}\n     */\n    MatDialogContainer.prototype._trapFocus = /**\n     * Moves the focus inside the focus trap.\n     * @return {?}\n     */\n    function () {\n        if (!this._focusTrap) {\n            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        }\n        // If were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty.\n        this._focusTrap.focusInitialElementWhenReady();\n    };\n    /**\n     * Restores focus to the element that was focused before the dialog opened.\n     * @return {?}\n     */\n    MatDialogContainer.prototype._restoreFocus = /**\n     * Restores focus to the element that was focused before the dialog opened.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ toFocus = this._elementFocusedBeforeDialogWasOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (toFocus && typeof toFocus.focus === 'function') {\n            toFocus.focus();\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    };\n    /**\n     * Saves a reference to the element that was focused before the dialog was opened.\n     * @return {?}\n     */\n    MatDialogContainer.prototype._savePreviouslyFocusedElement = /**\n     * Saves a reference to the element that was focused before the dialog was opened.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._document) {\n            this._elementFocusedBeforeDialogWasOpened = /** @type {?} */ (this._document.activeElement);\n            // Move focus onto the dialog immediately in order to prevent the user from accidentally\n            // opening multiple dialogs at the same time. Needs to be async, because the element\n            // may not be focusable immediately.\n            Promise.resolve().then(function () { return _this._elementRef.nativeElement.focus(); });\n        }\n    };\n    /** Callback, invoked whenever an animation on the host completes. */\n    /**\n     * Callback, invoked whenever an animation on the host completes.\n     * @param {?} event\n     * @return {?}\n     */\n    MatDialogContainer.prototype._onAnimationDone = /**\n     * Callback, invoked whenever an animation on the host completes.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (event.toState === 'enter') {\n            this._trapFocus();\n        }\n        else if (event.toState === 'exit') {\n            this._restoreFocus();\n        }\n        this._animationStateChanged.emit(event);\n    };\n    /** Callback, invoked when an animation on the host starts. */\n    /**\n     * Callback, invoked when an animation on the host starts.\n     * @param {?} event\n     * @return {?}\n     */\n    MatDialogContainer.prototype._onAnimationStart = /**\n     * Callback, invoked when an animation on the host starts.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        this._animationStateChanged.emit(event);\n    };\n    /** Starts the dialog exit animation. */\n    /**\n     * Starts the dialog exit animation.\n     * @return {?}\n     */\n    MatDialogContainer.prototype._startExitAnimation = /**\n     * Starts the dialog exit animation.\n     * @return {?}\n     */\n    function () {\n        this._state = 'exit';\n        // Mark the container for check so it can react if the\n        // view container is using OnPush change detection.\n        this._changeDetectorRef.markForCheck();\n    };\n    return MatDialogContainer;\n}(BasePortalOutlet));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n// TODO(jelbourn): resizing\n// Counter for unique dialog ids.\nvar uniqueId = 0;\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nvar MatDialogRef = /** @class */ (function () {\n    function MatDialogRef(_overlayRef, _containerInstance, id) {\n        if (id === void 0) { id = \"mat-dialog-\" + uniqueId++; }\n        var _this = this;\n        this._overlayRef = _overlayRef;\n        this._containerInstance = _containerInstance;\n        this.id = id;\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged.pipe(filter(function (event) { return event.phaseName === 'done' && event.toState === 'enter'; }), first())\n            .subscribe(function () {\n            _this._afterOpen.next();\n            _this._afterOpen.complete();\n        });\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged.pipe(filter(function (event) { return event.phaseName === 'done' && event.toState === 'exit'; }), first())\n            .subscribe(function () {\n            _this._overlayRef.dispose();\n            _this._afterClosed.next(_this._result);\n            _this._afterClosed.complete();\n            _this.componentInstance = /** @type {?} */ ((null));\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param dialogResult Optional result to return to the dialog opener.\n     */\n    /**\n     * Close the dialog.\n     * @param {?=} dialogResult Optional result to return to the dialog opener.\n     * @return {?}\n     */\n    MatDialogRef.prototype.close = /**\n     * Close the dialog.\n     * @param {?=} dialogResult Optional result to return to the dialog opener.\n     * @return {?}\n     */\n    function (dialogResult) {\n        var _this = this;\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged.pipe(filter(function (event) { return event.phaseName === 'start'; }), first())\n            .subscribe(function () {\n            _this._beforeClose.next(dialogResult);\n            _this._beforeClose.complete();\n            _this._overlayRef.detachBackdrop();\n        });\n        this._containerInstance._startExitAnimation();\n    };\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     */\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     * @return {?}\n     */\n    MatDialogRef.prototype.afterOpen = /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     * @return {?}\n     */\n    function () {\n        return this._afterOpen.asObservable();\n    };\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     */\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     * @return {?}\n     */\n    MatDialogRef.prototype.afterClosed = /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     * @return {?}\n     */\n    function () {\n        return this._afterClosed.asObservable();\n    };\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     */\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     * @return {?}\n     */\n    MatDialogRef.prototype.beforeClose = /**\n     * Gets an observable that is notified when the dialog has started closing.\n     * @return {?}\n     */\n    function () {\n        return this._beforeClose.asObservable();\n    };\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     * @return {?}\n     */\n    MatDialogRef.prototype.backdropClick = /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     * @return {?}\n     */\n    function () {\n        return this._overlayRef.backdropClick();\n    };\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     * @return {?}\n     */\n    MatDialogRef.prototype.keydownEvents = /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     * @return {?}\n     */\n    function () {\n        return this._overlayRef.keydownEvents();\n    };\n    /**\n     * Updates the dialog's position.\n     * @param position New dialog position.\n     */\n    /**\n     * Updates the dialog's position.\n     * @param {?=} position New dialog position.\n     * @return {?}\n     */\n    MatDialogRef.prototype.updatePosition = /**\n     * Updates the dialog's position.\n     * @param {?=} position New dialog position.\n     * @return {?}\n     */\n    function (position) {\n        var /** @type {?} */ strategy = this._getPositionStrategy();\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        this._overlayRef.updatePosition();\n        return this;\n    };\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    /**\n     * Updates the dialog's width and height.\n     * @param {?=} width New width of the dialog.\n     * @param {?=} height New height of the dialog.\n     * @return {?}\n     */\n    MatDialogRef.prototype.updateSize = /**\n     * Updates the dialog's width and height.\n     * @param {?=} width New width of the dialog.\n     * @param {?=} height New height of the dialog.\n     * @return {?}\n     */\n    function (width, height) {\n        if (width === void 0) { width = 'auto'; }\n        if (height === void 0) { height = 'auto'; }\n        this._getPositionStrategy().width(width).height(height);\n        this._overlayRef.updatePosition();\n        return this;\n    };\n    /**\n     * Fetches the position strategy object from the overlay ref.\n     * @return {?}\n     */\n    MatDialogRef.prototype._getPositionStrategy = /**\n     * Fetches the position strategy object from the overlay ref.\n     * @return {?}\n     */\n    function () {\n        return /** @type {?} */ (this._overlayRef.getConfig().positionStrategy);\n    };\n    return MatDialogRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MAT_DIALOG_DATA = new InjectionToken('MatDialogData');\n/**\n * Injection token that determines the scroll handling while the dialog is open.\n */\nvar MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-dialog-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return function () { return overlay.scrollStrategies.block(); };\n}\n/**\n * \\@docs-private\n */\nvar MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Service to open Material Design modal dialogs.\n */\nvar MatDialog = /** @class */ (function () {\n    function MatDialog(_overlay, _injector, location, _scrollStrategy, _parentDialog) {\n        var _this = this;\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._scrollStrategy = _scrollStrategy;\n        this._parentDialog = _parentDialog;\n        // Close all of the dialogs when the user goes forwards/backwards in history or when the\n        // location hash changes. Note that this usually doesn't include clicking on links (unless\n        // the user is using the `HashLocationStrategy`).\n        if (!_parentDialog && location) {\n            location.subscribe(function () { return _this.closeAll(); });\n        }\n    }\n    Object.defineProperty(MatDialog.prototype, \"openDialogs\", {\n        /** Keeps track of the currently-open dialogs. */\n        get: /**\n         * Keeps track of the currently-open dialogs.\n         * @return {?}\n         */\n        function () {\n            return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDialog.prototype, \"afterOpen\", {\n        /** Stream that emits when a dialog has been opened. */\n        get: /**\n         * Stream that emits when a dialog has been opened.\n         * @return {?}\n         */\n        function () {\n            return this._parentDialog ? this._parentDialog.afterOpen : this._afterOpenAtThisLevel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDialog.prototype, \"_afterAllClosed\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ parent = this._parentDialog;\n            return parent ? parent._afterAllClosed : this._afterAllClosedAtThisLevel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Opens a modal dialog containing the given component.\n     * @param componentOrTemplateRef Type of the component to load into the dialog,\n     *     or a TemplateRef to instantiate as the dialog content.\n     * @param config Extra configuration options.\n     * @returns Reference to the newly-opened dialog.\n     */\n    /**\n     * Opens a modal dialog containing the given component.\n     * @template T, D\n     * @param {?} componentOrTemplateRef Type of the component to load into the dialog,\n     *     or a TemplateRef to instantiate as the dialog content.\n     * @param {?=} config Extra configuration options.\n     * @return {?} Reference to the newly-opened dialog.\n     */\n    MatDialog.prototype.open = /**\n     * Opens a modal dialog containing the given component.\n     * @template T, D\n     * @param {?} componentOrTemplateRef Type of the component to load into the dialog,\n     *     or a TemplateRef to instantiate as the dialog content.\n     * @param {?=} config Extra configuration options.\n     * @return {?} Reference to the newly-opened dialog.\n     */\n    function (componentOrTemplateRef, config) {\n        var _this = this;\n        config = _applyConfigDefaults(config);\n        if (config.id && this.getDialogById(config.id)) {\n            throw Error(\"Dialog with id \\\"\" + config.id + \"\\\" exists already. The dialog id must be unique.\");\n        }\n        var /** @type {?} */ overlayRef = this._createOverlay(config);\n        var /** @type {?} */ dialogContainer = this._attachDialogContainer(overlayRef, config);\n        var /** @type {?} */ dialogRef = this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n        this.openDialogs.push(dialogRef);\n        dialogRef.afterClosed().subscribe(function () { return _this._removeOpenDialog(dialogRef); });\n        this.afterOpen.next(dialogRef);\n        return dialogRef;\n    };\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    /**\n     * Closes all of the currently-open dialogs.\n     * @return {?}\n     */\n    MatDialog.prototype.closeAll = /**\n     * Closes all of the currently-open dialogs.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ i = this.openDialogs.length;\n        while (i--) {\n            // The `_openDialogs` property isn't updated after close until the rxjs subscription\n            // runs on the next microtask, in addition to modifying the array as we're going\n            // through it. We loop through all of them and call close without assuming that\n            // they'll be removed from the list instantaneously.\n            this.openDialogs[i].close();\n        }\n    };\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    /**\n     * Finds an open dialog by its id.\n     * @param {?} id ID to use when looking up the dialog.\n     * @return {?}\n     */\n    MatDialog.prototype.getDialogById = /**\n     * Finds an open dialog by its id.\n     * @param {?} id ID to use when looking up the dialog.\n     * @return {?}\n     */\n    function (id) {\n        return this.openDialogs.find(function (dialog) { return dialog.id === id; });\n    };\n    /**\n     * Creates the overlay into which the dialog will be loaded.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the OverlayRef for the created overlay.\n     */\n    MatDialog.prototype._createOverlay = /**\n     * Creates the overlay into which the dialog will be loaded.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the OverlayRef for the created overlay.\n     */\n    function (config) {\n        var /** @type {?} */ overlayConfig = this._getOverlayConfig(config);\n        return this._overlay.create(overlayConfig);\n    };\n    /**\n     * Creates an overlay config from a dialog config.\n     * @param {?} dialogConfig The dialog configuration.\n     * @return {?} The overlay configuration.\n     */\n    MatDialog.prototype._getOverlayConfig = /**\n     * Creates an overlay config from a dialog config.\n     * @param {?} dialogConfig The dialog configuration.\n     * @return {?} The overlay configuration.\n     */\n    function (dialogConfig) {\n        var /** @type {?} */ state$$1 = new OverlayConfig({\n            positionStrategy: this._overlay.position().global(),\n            scrollStrategy: this._scrollStrategy(),\n            panelClass: dialogConfig.panelClass,\n            hasBackdrop: dialogConfig.hasBackdrop,\n            direction: dialogConfig.direction,\n            minWidth: dialogConfig.minWidth,\n            minHeight: dialogConfig.minHeight,\n            maxWidth: dialogConfig.maxWidth,\n            maxHeight: dialogConfig.maxHeight\n        });\n        if (dialogConfig.backdropClass) {\n            state$$1.backdropClass = dialogConfig.backdropClass;\n        }\n        return state$$1;\n    };\n    /**\n     * Attaches an MatDialogContainer to a dialog's already-created overlay.\n     * @param {?} overlay Reference to the dialog's underlying overlay.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to a ComponentRef for the attached container.\n     */\n    MatDialog.prototype._attachDialogContainer = /**\n     * Attaches an MatDialogContainer to a dialog's already-created overlay.\n     * @param {?} overlay Reference to the dialog's underlying overlay.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to a ComponentRef for the attached container.\n     */\n    function (overlay, config) {\n        var /** @type {?} */ containerPortal = new ComponentPortal(MatDialogContainer, config.viewContainerRef);\n        var /** @type {?} */ containerRef = overlay.attach(containerPortal);\n        containerRef.instance._config = config;\n        return containerRef.instance;\n    };\n    /**\n     * Attaches the user-provided component to the already-created MatDialogContainer.\n     * @template T\n     * @param {?} componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param {?} dialogContainer Reference to the wrapping MatDialogContainer.\n     * @param {?} overlayRef Reference to the overlay in which the dialog resides.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the MatDialogRef that should be returned to the user.\n     */\n    MatDialog.prototype._attachDialogContent = /**\n     * Attaches the user-provided component to the already-created MatDialogContainer.\n     * @template T\n     * @param {?} componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param {?} dialogContainer Reference to the wrapping MatDialogContainer.\n     * @param {?} overlayRef Reference to the overlay in which the dialog resides.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the MatDialogRef that should be returned to the user.\n     */\n    function (componentOrTemplateRef, dialogContainer, overlayRef, config) {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        var /** @type {?} */ dialogRef = new MatDialogRef(overlayRef, dialogContainer, config.id);\n        // When the dialog backdrop is clicked, we want to close it.\n        if (config.hasBackdrop) {\n            overlayRef.backdropClick().subscribe(function () {\n                if (!dialogRef.disableClose) {\n                    dialogRef.close();\n                }\n            });\n        }\n        // Close when escape keydown event occurs\n        overlayRef.keydownEvents().pipe(filter(function (event) { return event.keyCode === ESCAPE && !dialogRef.disableClose; })).subscribe(function () { return dialogRef.close(); });\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, /** @type {?} */ ((null)), /** @type {?} */ ({ $implicit: config.data, dialogRef: dialogRef })));\n        }\n        else {\n            var /** @type {?} */ injector = this._createInjector(config, dialogRef, dialogContainer);\n            var /** @type {?} */ contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, undefined, injector));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n        dialogRef\n            .updateSize(config.width, config.height)\n            .updatePosition(config.position);\n        return dialogRef;\n    };\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @template T\n     * @param {?} config Config object that is used to construct the dialog.\n     * @param {?} dialogRef Reference to the dialog.\n     * @param {?} dialogContainer\n     * @return {?} The custom injector that can be used inside the dialog.\n     */\n    MatDialog.prototype._createInjector = /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @template T\n     * @param {?} config Config object that is used to construct the dialog.\n     * @param {?} dialogRef Reference to the dialog.\n     * @param {?} dialogContainer\n     * @return {?} The custom injector that can be used inside the dialog.\n     */\n    function (config, dialogRef, dialogContainer) {\n        var /** @type {?} */ userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        var /** @type {?} */ injectionTokens = new WeakMap();\n        injectionTokens.set(MatDialogRef, dialogRef);\n        // The MatDialogContainer is injected in the portal as the MatDialogContainer and the dialog's\n        // content are created out of the same ViewContainerRef and as such, are siblings for injector\n        // purposes.  To allow the hierarchy that is expected, the MatDialogContainer is explicitly\n        // added to the injection tokens.\n        injectionTokens.set(MatDialogContainer, dialogContainer);\n        injectionTokens.set(MAT_DIALOG_DATA, config.data);\n        injectionTokens.set(Directionality, {\n            value: config.direction,\n            change: of()\n        });\n        return new PortalInjector(userInjector || this._injector, injectionTokens);\n    };\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @param {?} dialogRef Dialog to be removed.\n     * @return {?}\n     */\n    MatDialog.prototype._removeOpenDialog = /**\n     * Removes a dialog from the array of open dialogs.\n     * @param {?} dialogRef Dialog to be removed.\n     * @return {?}\n     */\n    function (dialogRef) {\n        var /** @type {?} */ index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // no open dialogs are left, call next on afterAllClosed Subject\n            if (!this.openDialogs.length) {\n                this._afterAllClosed.next();\n            }\n        }\n    };\n    return MatDialog;\n}());\n/**\n * Applies default options to the dialog config.\n * @param {?=} config Config to be modified.\n * @return {?} The new configuration object.\n */\nfunction _applyConfigDefaults(config) {\n    return extendObject(new MatDialogConfig(), config);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Button that will close the current dialog.\n */\nvar MatDialogClose = /** @class */ (function () {\n    function MatDialogClose(dialogRef) {\n        this.dialogRef = dialogRef;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MatDialogClose.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        var /** @type {?} */ proxiedChange = changes[\"_matDialogClose\"] || changes[\"_matDialogCloseResult\"];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    };\n    return MatDialogClose;\n}());\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nvar MatDialogTitle = /** @class */ (function () {\n    function MatDialogTitle(_container) {\n        this._container = _container;\n    }\n    /**\n     * @return {?}\n     */\n    MatDialogTitle.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._container && !this._container._ariaLabelledBy) {\n            Promise.resolve().then(function () { return _this._container._ariaLabelledBy = _this.id; });\n        }\n    };\n    return MatDialogTitle;\n}());\n/**\n * Scrollable content container of a dialog.\n */\nvar MatDialogContent = /** @class */ (function () {\n    function MatDialogContent() {\n    }\n    return MatDialogContent;\n}());\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nvar MatDialogActions = /** @class */ (function () {\n    function MatDialogActions() {\n    }\n    return MatDialogActions;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatDialogModule = /** @class */ (function () {\n    function MatDialogModule() {\n    }\n    return MatDialogModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDialogModule, MAT_DIALOG_DATA, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MatDialog, throwMatDialogContentAlreadyAttachedError, MatDialogContainer, MatDialogClose, MatDialogTitle, MatDialogContent, MatDialogActions, MatDialogConfig, MatDialogRef };\n//# sourceMappingURL=dialog.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Optional, SecurityContext, SkipSelf } from '@angular/core';\nimport { mixinColor } from '@angular/material/core';\nimport { __extends } from 'tslib';\nimport * as tslib_1 from 'tslib';\nimport { first } from 'rxjs/operators/first';\nimport { catchError } from 'rxjs/operators/catchError';\nimport { tap } from 'rxjs/operators/tap';\nimport { finalize } from 'rxjs/operators/finalize';\nimport { map } from 'rxjs/operators/map';\nimport { share } from 'rxjs/operators/share';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { forkJoin } from 'rxjs/observable/forkJoin';\nimport { of } from 'rxjs/observable/of';\nimport { _throw } from 'rxjs/observable/throw';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * \\@docs-private\n * @param {?} iconName\n * @return {?}\n */\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(\"Unable to find icon with the name \\\"\" + iconName + \"\\\"\");\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including \\@angular/http.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * \\@docs-private\n * @param {?} url URL that was attempted to be sanitized.\n * @return {?}\n */\nfunction getMatIconFailedToSanitizeError(url) {\n    return Error(\"The URL provided to MatIconRegistry was not trusted as a resource URL \" +\n        (\"via Angular's DomSanitizer. Attempted URL was \\\"\" + url + \"\\\".\"));\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * \\@docs-private\n */\nvar SvgIconConfig = /** @class */ (function () {\n    function SvgIconConfig(url) {\n        this.url = url;\n    }\n    return SvgIconConfig;\n}());\n/**\n * Service to register and display icons used by the <mat-icon> component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nvar MatIconRegistry = /** @class */ (function () {\n    function MatIconRegistry(_httpClient, _sanitizer) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @return {?}\n     */\n    MatIconRegistry.prototype.addSvgIcon = /**\n     * Registers an icon by URL in the default namespace.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @return {?}\n     */\n    function (iconName, url) {\n        return this.addSvgIconInNamespace('', iconName, url);\n    };\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @return {?}\n     */\n    MatIconRegistry.prototype.addSvgIconInNamespace = /**\n     * Registers an icon by URL in the specified namespace.\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @return {?}\n     */\n    function (namespace, iconName, url) {\n        var /** @type {?} */ key = iconKey(namespace, iconName);\n        this._svgIconConfigs.set(key, new SvgIconConfig(url));\n        return this;\n    };\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param url\n     */\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param {?} url\n     * @return {?}\n     */\n    MatIconRegistry.prototype.addSvgIconSet = /**\n     * Registers an icon set by URL in the default namespace.\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        return this.addSvgIconSetInNamespace('', url);\n    };\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param url\n     */\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} url\n     * @return {?}\n     */\n    MatIconRegistry.prototype.addSvgIconSetInNamespace = /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} url\n     * @return {?}\n     */\n    function (namespace, url) {\n        var /** @type {?} */ config = new SvgIconConfig(url);\n        var /** @type {?} */ configNamespace = this._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            this._iconSetConfigs.set(namespace, [config]);\n        }\n        return this;\n    };\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the <mat-icon> element.\n     *\n     * @param alias Alias for the font.\n     * @param className Class name override to be used instead of the alias.\n     */\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the <mat-icon> element.\n     *\n     * @param {?} alias Alias for the font.\n     * @param {?=} className Class name override to be used instead of the alias.\n     * @return {?}\n     */\n    MatIconRegistry.prototype.registerFontClassAlias = /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the <mat-icon> element.\n     *\n     * @param {?} alias Alias for the font.\n     * @param {?=} className Class name override to be used instead of the alias.\n     * @return {?}\n     */\n    function (alias, className) {\n        if (className === void 0) { className = alias; }\n        this._fontCssClassesByAlias.set(alias, className);\n        return this;\n    };\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     */\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     * @param {?} alias\n     * @return {?}\n     */\n    MatIconRegistry.prototype.classNameForFontAlias = /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     * @param {?} alias\n     * @return {?}\n     */\n    function (alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    };\n    /**\n     * Sets the CSS class name to be used for icon fonts when an <mat-icon> component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @param className\n     */\n    /**\n     * Sets the CSS class name to be used for icon fonts when an <mat-icon> component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @param {?} className\n     * @return {?}\n     */\n    MatIconRegistry.prototype.setDefaultFontSetClass = /**\n     * Sets the CSS class name to be used for icon fonts when an <mat-icon> component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @param {?} className\n     * @return {?}\n     */\n    function (className) {\n        this._defaultFontSetClass = className;\n        return this;\n    };\n    /**\n     * Returns the CSS class name to be used for icon fonts when an <mat-icon> component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    /**\n     * Returns the CSS class name to be used for icon fonts when an <mat-icon> component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     * @return {?}\n     */\n    MatIconRegistry.prototype.getDefaultFontSetClass = /**\n     * Returns the CSS class name to be used for icon fonts when an <mat-icon> component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     * @return {?}\n     */\n    function () {\n        return this._defaultFontSetClass;\n    };\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param safeUrl URL from which to fetch the SVG icon.\n     */\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param {?} safeUrl URL from which to fetch the SVG icon.\n     * @return {?}\n     */\n    MatIconRegistry.prototype.getSvgIconFromUrl = /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param {?} safeUrl URL from which to fetch the SVG icon.\n     * @return {?}\n     */\n    function (safeUrl) {\n        var _this = this;\n        var /** @type {?} */ url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeError(safeUrl);\n        }\n        var /** @type {?} */ cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl)).pipe(tap(function (svg) { return _this._cachedIconsByUrl.set(/** @type {?} */ ((url)), svg); }), map(function (svg) { return cloneSvg(svg); }));\n    };\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param name Name of the icon to be retrieved.\n     * @param namespace Namespace in which to look for the icon.\n     */\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param {?} name Name of the icon to be retrieved.\n     * @param {?=} namespace Namespace in which to look for the icon.\n     * @return {?}\n     */\n    MatIconRegistry.prototype.getNamedSvgIcon = /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param {?} name Name of the icon to be retrieved.\n     * @param {?=} namespace Namespace in which to look for the icon.\n     * @return {?}\n     */\n    function (name, namespace) {\n        if (namespace === void 0) { namespace = ''; }\n        // Return (copy of) cached icon if possible.\n        var /** @type {?} */ key = iconKey(namespace, name);\n        var /** @type {?} */ config = this._svgIconConfigs.get(key);\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        var /** @type {?} */ iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return _throw(getMatIconNameNotFoundError(key));\n    };\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     * @param {?} config\n     * @return {?}\n     */\n    MatIconRegistry.prototype._getSvgFromConfig = /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     * @param {?} config\n     * @return {?}\n     */\n    function (config) {\n        if (config.svgElement) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(config.svgElement));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(tap(function (svg) { return config.svgElement = svg; }), map(function (svg) { return cloneSvg(svg); }));\n        }\n    };\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new <svg> element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     * @param {?} name\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    MatIconRegistry.prototype._getSvgFromIconSetConfigs = /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new <svg> element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     * @param {?} name\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    function (name, iconSetConfigs) {\n        var _this = this;\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        var /** @type {?} */ namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        var /** @type {?} */ iconSetFetchRequests = iconSetConfigs\n            .filter(function (iconSetConfig) { return !iconSetConfig.svgElement; })\n            .map(function (iconSetConfig) {\n            return _this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError(function (err) {\n                var /** @type {?} */ url = _this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the combined Observable won't\n                // necessarily fail.\n                console.log(\"Loading icon set URL: \" + url + \" failed: \" + err);\n                return of(null);\n            }), tap(function (svg) {\n                // Cache the SVG element.\n                if (svg) {\n                    iconSetConfig.svgElement = svg;\n                }\n            }));\n        });\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map(function () {\n            var /** @type {?} */ foundIcon = _this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        }));\n    };\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @param {?} iconName\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    MatIconRegistry.prototype._extractIconWithNameFromAnySet = /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @param {?} iconName\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    function (iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (var /** @type {?} */ i = iconSetConfigs.length - 1; i >= 0; i--) {\n            var /** @type {?} */ config = iconSetConfigs[i];\n            if (config.svgElement) {\n                var /** @type {?} */ foundIcon = this._extractSvgIconFromSet(config.svgElement, iconName);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    };\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @param {?} config\n     * @return {?}\n     */\n    MatIconRegistry.prototype._loadSvgIconFromConfig = /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @param {?} config\n     * @return {?}\n     */\n    function (config) {\n        var _this = this;\n        return this._fetchUrl(config.url)\n            .pipe(map(function (svgText) { return _this._createSvgElementForSingleIcon(svgText); }));\n    };\n    /**\n     * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @param {?} config\n     * @return {?}\n     */\n    MatIconRegistry.prototype._loadSvgIconSetFromConfig = /**\n     * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @param {?} config\n     * @return {?}\n     */\n    function (config) {\n        var _this = this;\n        // TODO: Document that icons should only be loaded from trusted sources.\n        return this._fetchUrl(config.url).pipe(map(function (svgText) { return _this._svgElementFromString(svgText); }));\n    };\n    /**\n     * Creates a DOM element from the given SVG string, and adds default attributes.\n     * @param {?} responseText\n     * @return {?}\n     */\n    MatIconRegistry.prototype._createSvgElementForSingleIcon = /**\n     * Creates a DOM element from the given SVG string, and adds default attributes.\n     * @param {?} responseText\n     * @return {?}\n     */\n    function (responseText) {\n        var /** @type {?} */ svg = this._svgElementFromString(responseText);\n        this._setSvgAttributes(svg);\n        return svg;\n    };\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @param {?} iconSet\n     * @param {?} iconName\n     * @return {?}\n     */\n    MatIconRegistry.prototype._extractSvgIconFromSet = /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @param {?} iconSet\n     * @param {?} iconName\n     * @return {?}\n     */\n    function (iconSet, iconName) {\n        var /** @type {?} */ iconSource = iconSet.querySelector('#' + iconName);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        var /** @type {?} */ iconElement = /** @type {?} */ (iconSource.cloneNode(true));\n        iconElement.id = '';\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes(/** @type {?} */ (iconElement));\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement));\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        var /** @type {?} */ svg = this._svgElementFromString('<svg></svg>');\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg);\n    };\n    /**\n     * Creates a DOM element from the given SVG string.\n     * @param {?} str\n     * @return {?}\n     */\n    MatIconRegistry.prototype._svgElementFromString = /**\n     * Creates a DOM element from the given SVG string.\n     * @param {?} str\n     * @return {?}\n     */\n    function (str) {\n        var /** @type {?} */ div = document.createElement('DIV');\n        div.innerHTML = str;\n        var /** @type {?} */ svg = /** @type {?} */ (div.querySelector('svg'));\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    };\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     * @param {?} element\n     * @return {?}\n     */\n    MatIconRegistry.prototype._toSvgElement = /**\n     * Converts an element into an SVG node by cloning all of its children.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var /** @type {?} */ svg = this._svgElementFromString('<svg></svg>');\n        for (var /** @type {?} */ i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === Node.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    };\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     * @param {?} svg\n     * @return {?}\n     */\n    MatIconRegistry.prototype._setSvgAttributes = /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     * @param {?} svg\n     * @return {?}\n     */\n    function (svg) {\n        if (!svg.getAttribute('xmlns')) {\n            svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n        }\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        return svg;\n    };\n    /**\n     * Returns an Observable which produces the string contents of the given URL. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     * @param {?} safeUrl\n     * @return {?}\n     */\n    MatIconRegistry.prototype._fetchUrl = /**\n     * Returns an Observable which produces the string contents of the given URL. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     * @param {?} safeUrl\n     * @return {?}\n     */\n    function (safeUrl) {\n        var _this = this;\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        var /** @type {?} */ url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        var /** @type {?} */ inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        // TODO(jelbourn): for some reason, the `finally` operator \"loses\" the generic type on the\n        // Observable. Figure out why and fix it.\n        var /** @type {?} */ req = this._httpClient.get(url, { responseType: 'text' }).pipe(finalize(function () { return _this._inProgressUrlFetches.delete(url); }), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    };\n    return MatIconRegistry;\n}());\n/**\n * \\@docs-private\n * @param {?} parentRegistry\n * @param {?} httpClient\n * @param {?} sanitizer\n * @return {?}\n */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer);\n}\n/**\n * \\@docs-private\n */\nvar ICON_REGISTRY_PROVIDER = {\n    // If there is already an MdIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY\n};\n/**\n * Clones an SVGElement while preserving type information.\n * @param {?} svg\n * @return {?}\n */\nfunction cloneSvg(svg) {\n    return /** @type {?} */ (svg.cloneNode(true));\n}\n/**\n * Returns the cache key to use for an icon namespace and name.\n * @param {?} namespace\n * @param {?} name\n * @return {?}\n */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n */\nvar MatIconBase = /** @class */ (function () {\n    function MatIconBase(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n    }\n    return MatIconBase;\n}());\nvar _MatIconMixinBase = mixinColor(MatIconBase);\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     <mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the <mat-icon>\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     <mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     <mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>\n */\nvar MatIcon = /** @class */ (function (_super) {\n    __extends(MatIcon, _super);\n    function MatIcon(renderer, elementRef, _iconRegistry, ariaHidden) {\n        var _this = _super.call(this, renderer, elementRef) || this;\n        _this._iconRegistry = _iconRegistry;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            renderer.setAttribute(elementRef.nativeElement, 'aria-hidden', 'true');\n        }\n        return _this;\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)\n     * @param {?} iconName\n     * @return {?}\n     */\n    MatIcon.prototype._splitIconName = /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)\n     * @param {?} iconName\n     * @return {?}\n     */\n    function (iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        var /** @type {?} */ parts = iconName.split(':');\n        switch (parts.length) {\n            case 1: return ['', parts[0]]; // Use default namespace.\n            case 2: return /** @type {?} */ (parts);\n            default: throw Error(\"Invalid icon name: \\\"\" + iconName + \"\\\"\");\n        }\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MatIcon.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        var _this = this;\n        // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.\n        if (changes[\"svgIcon\"]) {\n            if (this.svgIcon) {\n                var _a = this._splitIconName(this.svgIcon), namespace = _a[0], iconName = _a[1];\n                this._iconRegistry.getNamedSvgIcon(iconName, namespace).pipe(first()).subscribe(function (svg) { return _this._setSvgElement(svg); }, function (err) { return console.log(\"Error retrieving icon: \" + err.message); });\n            }\n            else {\n                this._clearSvgElement();\n            }\n        }\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatIcon.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatIcon.prototype._usingFontIcon = /**\n     * @return {?}\n     */\n    function () {\n        return !this.svgIcon;\n    };\n    /**\n     * @param {?} svg\n     * @return {?}\n     */\n    MatIcon.prototype._setSvgElement = /**\n     * @param {?} svg\n     * @return {?}\n     */\n    function (svg) {\n        this._clearSvgElement();\n        this._renderer.appendChild(this._elementRef.nativeElement, svg);\n    };\n    /**\n     * @return {?}\n     */\n    MatIcon.prototype._clearSvgElement = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ layoutElement = this._elementRef.nativeElement;\n        var /** @type {?} */ childCount = layoutElement.childNodes.length;\n        // Remove existing child nodes and add the new SVG element. Note that we can't\n        // use innerHTML, because IE will throw if the element has a data binding.\n        for (var /** @type {?} */ i = 0; i < childCount; i++) {\n            this._renderer.removeChild(layoutElement, layoutElement.childNodes[i]);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatIcon.prototype._updateFontIconClasses = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        var /** @type {?} */ elem = this._elementRef.nativeElement;\n        var /** @type {?} */ fontSetClass = this.fontSet ?\n            this._iconRegistry.classNameForFontAlias(this.fontSet) :\n            this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                this._renderer.removeClass(elem, this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                this._renderer.addClass(elem, fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                this._renderer.removeClass(elem, this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                this._renderer.addClass(elem, this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    };\n    return MatIcon;\n}(_MatIconMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatIconModule = /** @class */ (function () {\n    function MatIconModule() {\n    }\n    return MatIconModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatIconModule, MatIconBase, _MatIconMixinBase, MatIcon, getMatIconNameNotFoundError, getMatIconNoHttpProviderError, getMatIconFailedToSanitizeError, MatIconRegistry, ICON_REGISTRY_PROVIDER_FACTORY, ICON_REGISTRY_PROVIDER };\n//# sourceMappingURL=icon.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { getSupportedInputTypes } from '@angular/cdk/platform';\nimport '@angular/common';\nimport { InjectionToken } from '@angular/core';\nimport '@angular/material/form-field';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport '@angular/forms';\nimport '@angular/material/core';\nimport 'rxjs/Subject';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Directive to automatically resize a textarea to fit its content.\n */\nvar MatTextareaAutosize = /** @class */ (function () {\n    function MatTextareaAutosize(_elementRef, _platform) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n    }\n    Object.defineProperty(MatTextareaAutosize.prototype, \"minRows\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._minRows; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._minRows = value;\n            this._setMinHeight();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTextareaAutosize.prototype, \"maxRows\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._maxRows; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._maxRows = value;\n            this._setMaxHeight();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    /**\n     * Sets the minimum height of the textarea as determined by minRows.\n     * @return {?}\n     */\n    MatTextareaAutosize.prototype._setMinHeight = /**\n     * Sets the minimum height of the textarea as determined by minRows.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ minHeight = this.minRows && this._cachedLineHeight ?\n            this.minRows * this._cachedLineHeight + \"px\" : null;\n        if (minHeight) {\n            this._setTextareaStyle('minHeight', minHeight);\n        }\n    };\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    /**\n     * Sets the maximum height of the textarea as determined by maxRows.\n     * @return {?}\n     */\n    MatTextareaAutosize.prototype._setMaxHeight = /**\n     * Sets the maximum height of the textarea as determined by maxRows.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ maxHeight = this.maxRows && this._cachedLineHeight ?\n            this.maxRows * this._cachedLineHeight + \"px\" : null;\n        if (maxHeight) {\n            this._setTextareaStyle('maxHeight', maxHeight);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatTextareaAutosize.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    };\n    /**\n     * Sets a style property on the textarea element.\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    MatTextareaAutosize.prototype._setTextareaStyle = /**\n     * Sets a style property on the textarea element.\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    function (property, value) {\n        var /** @type {?} */ textarea = /** @type {?} */ (this._elementRef.nativeElement);\n        textarea.style[property] = value;\n    };\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     * @return {?}\n     */\n    MatTextareaAutosize.prototype._cacheTextareaLineHeight = /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     * @return {?}\n     */\n    function () {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        var /** @type {?} */ textarea = /** @type {?} */ (this._elementRef.nativeElement);\n        // Use a clone element because we have to override some styles.\n        var /** @type {?} */ textareaClone = /** @type {?} */ (textarea.cloneNode(false));\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden'; /** @type {?} */\n        ((textarea.parentNode)).appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight; /** @type {?} */\n        ((textarea.parentNode)).removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    };\n    /**\n     * @return {?}\n     */\n    MatTextareaAutosize.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    };\n    /** Resize the textarea to fit its content. */\n    /**\n     * Resize the textarea to fit its content.\n     * @return {?}\n     */\n    MatTextareaAutosize.prototype.resizeToFitContent = /**\n     * Resize the textarea to fit its content.\n     * @return {?}\n     */\n    function () {\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        var /** @type {?} */ textarea = /** @type {?} */ (this._elementRef.nativeElement);\n        var /** @type {?} */ value = textarea.value;\n        // Only resize of the value changed since these calculations can be expensive.\n        if (value === this._previousValue) {\n            return;\n        }\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        textarea.style.height = 'auto';\n        textarea.style.overflow = 'hidden';\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = textarea.scrollHeight + \"px\";\n        textarea.style.overflow = '';\n        this._previousValue = value;\n    };\n    return MatTextareaAutosize;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n * @param {?} type\n * @return {?}\n */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(\"Input type \\\"\" + type + \"\\\" isn't supported by matInput.\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nvar MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nvar MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'color',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n/**\n * Directive that allows a native input to work inside a `MatFormField`.\n */\nvar MatInput = /** @class */ (function () {\n    function MatInput(_elementRef, _renderer, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._platform = _platform;\n        this.ngControl = ngControl;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            _renderer.listen(_elementRef.nativeElement, 'keyup', function (event) {\n                var /** @type {?} */ el = /** @type {?} */ (event.target);\n                if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                    // Note: Just setting `0, 0` doesn't fix the issue. Setting `1, 1` fixes it for the first\n                    // time that you type text and then hold delete. Toggling to `1, 1` and then back to\n                    // `0, 0` seems to completely fix it.\n                    el.setSelectionRange(1, 1);\n                    el.setSelectionRange(0, 0);\n                }\n            });\n        }\n    }\n    Object.defineProperty(MatInput.prototype, \"disabled\", {\n        get: /**\n         * Whether the element is disabled.\n         * @return {?}\n         */\n        function () { return this.ngControl ? this.ngControl.disabled : this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._disabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatInput.prototype, \"id\", {\n        get: /**\n         * Unique id of the element.\n         * @return {?}\n         */\n        function () { return this._id; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._id = value || this._uid; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatInput.prototype, \"required\", {\n        get: /**\n         * Whether the element is required.\n         * @return {?}\n         */\n        function () { return this._required; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._required = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatInput.prototype, \"type\", {\n        get: /**\n         * Input type of the element.\n         * @return {?}\n         */\n        function () { return this._type; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._type = value || 'text';\n            this._validateType();\n            // When using Angular inputs, developers are no longer able to set the properties on the native\n            // input element. To ensure that bindings for `type` work, we need to sync the setter\n            // with the native property. Textarea elements don't support the type property or attribute.\n            if (!this._isTextarea() && getSupportedInputTypes().has(this._type)) {\n                this._renderer.setProperty(this._elementRef.nativeElement, 'type', this._type);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatInput.prototype, \"value\", {\n        get: /**\n         * The input element's value.\n         * @return {?}\n         */\n        function () { return this._inputValueAccessor.value; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value !== this.value) {\n                this._inputValueAccessor.value = value;\n                this.stateChanges.next();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatInput.prototype, \"readonly\", {\n        get: /**\n         * Whether the element is readonly.\n         * @return {?}\n         */\n        function () { return this._readonly; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._readonly = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatInput.prototype.ngOnChanges = /**\n     * @return {?}\n     */\n    function () {\n        this.stateChanges.next();\n    };\n    /**\n     * @return {?}\n     */\n    MatInput.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.stateChanges.complete();\n    };\n    /**\n     * @return {?}\n     */\n    MatInput.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this._updateErrorState();\n        }\n        else {\n            // When the input isn't used together with `@angular/forms`, we need to check manually for\n            // changes to the native `value` property in order to update the floating label.\n            this._dirtyCheckNativeValue();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatInput.prototype.focus = /**\n     * @return {?}\n     */\n    function () { this._elementRef.nativeElement.focus(); };\n    /** Callback for the cases where the focused state of the input changes. */\n    /**\n     * Callback for the cases where the focused state of the input changes.\n     * @param {?} isFocused\n     * @return {?}\n     */\n    MatInput.prototype._focusChanged = /**\n     * Callback for the cases where the focused state of the input changes.\n     * @param {?} isFocused\n     * @return {?}\n     */\n    function (isFocused) {\n        if (isFocused !== this.focused && !this.readonly) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatInput.prototype._onInput = /**\n     * @return {?}\n     */\n    function () {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    };\n    /** Re-evaluates the error state. This is only relevant with @angular/forms. */\n    /**\n     * Re-evaluates the error state. This is only relevant with \\@angular/forms.\n     * @return {?}\n     */\n    MatInput.prototype._updateErrorState = /**\n     * Re-evaluates the error state. This is only relevant with \\@angular/forms.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ oldState = this.errorState;\n        var /** @type {?} */ parent = this._parentFormGroup || this._parentForm;\n        var /** @type {?} */ matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n        var /** @type {?} */ control = this.ngControl ? /** @type {?} */ (this.ngControl.control) : null;\n        var /** @type {?} */ newState = matcher.isErrorState(control, parent);\n        if (newState !== oldState) {\n            this.errorState = newState;\n            this.stateChanges.next();\n        }\n    };\n    /** Does some manual dirty checking on the native input `value` property. */\n    /**\n     * Does some manual dirty checking on the native input `value` property.\n     * @return {?}\n     */\n    MatInput.prototype._dirtyCheckNativeValue = /**\n     * Does some manual dirty checking on the native input `value` property.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ newValue = this.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    };\n    /** Make sure the input is a supported type. */\n    /**\n     * Make sure the input is a supported type.\n     * @return {?}\n     */\n    MatInput.prototype._validateType = /**\n     * Make sure the input is a supported type.\n     * @return {?}\n     */\n    function () {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    };\n    /** Checks whether the input type is one of the types that are never empty. */\n    /**\n     * Checks whether the input type is one of the types that are never empty.\n     * @return {?}\n     */\n    MatInput.prototype._isNeverEmpty = /**\n     * Checks whether the input type is one of the types that are never empty.\n     * @return {?}\n     */\n    function () {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    };\n    /** Checks whether the input is invalid based on the native validation. */\n    /**\n     * Checks whether the input is invalid based on the native validation.\n     * @return {?}\n     */\n    MatInput.prototype._isBadInput = /**\n     * Checks whether the input is invalid based on the native validation.\n     * @return {?}\n     */\n    function () {\n        // The `validity` property won't be present on platform-server.\n        var /** @type {?} */ validity = (/** @type {?} */ (this._elementRef.nativeElement)).validity;\n        return validity && validity.badInput;\n    };\n    /** Determines if the component host is a textarea. If not recognizable it returns false. */\n    /**\n     * Determines if the component host is a textarea. If not recognizable it returns false.\n     * @return {?}\n     */\n    MatInput.prototype._isTextarea = /**\n     * Determines if the component host is a textarea. If not recognizable it returns false.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ nativeElement = this._elementRef.nativeElement;\n        // In Universal, we don't have access to `nodeName`, but the same can be achieved with `name`.\n        // Note that this shouldn't be necessary once Angular switches to an API that resembles the\n        // DOM closer.\n        var /** @type {?} */ nodeName = this._platform.isBrowser ? nativeElement.nodeName : nativeElement.name;\n        return nodeName ? nodeName.toLowerCase() === 'textarea' : false;\n    };\n    Object.defineProperty(MatInput.prototype, \"empty\", {\n        // Implemented as part of MatFormFieldControl.\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return !this._isNeverEmpty() &&\n                (this.value == null || this.value === '') &&\n                // Check if the input contains bad input. If so, we know that it only appears empty because\n                // the value failed to parse. From the user's perspective it is not empty.\n                // TODO(mmalerba): Add e2e test for bad input case.\n                !this._isBadInput();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatInput.prototype, \"shouldPlaceholderFloat\", {\n        // Implemented as part of MatFormFieldControl.\n        get: /**\n         * @return {?}\n         */\n        function () { return this.focused || !this.empty; },\n        enumerable: true,\n        configurable: true\n    });\n    // Implemented as part of MatFormFieldControl.\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    MatInput.prototype.setDescribedByIds = /**\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) { this._ariaDescribedby = ids.join(' '); };\n    // Implemented as part of MatFormFieldControl.\n    /**\n     * @return {?}\n     */\n    MatInput.prototype.onContainerClick = /**\n     * @return {?}\n     */\n    function () { this.focus(); };\n    return MatInput;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatInputModule = /** @class */ (function () {\n    function MatInputModule() {\n    }\n    return MatInputModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatInputModule, MatTextareaAutosize, MatInput, getMatInputUnsupportedTypeError, MAT_INPUT_VALUE_ACCESSOR };\n//# sourceMappingURL=input.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport '@angular/cdk/a11y';\nimport { Overlay, OverlayConfig } from '@angular/cdk/overlay';\nimport '@angular/common';\nimport { InjectionToken, forwardRef } from '@angular/core';\nimport '@angular/material/button';\nimport '@angular/material/dialog';\nimport '@angular/material/icon';\nimport { DOWN_ARROW, END, ENTER, ESCAPE, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport '@angular/material/core';\nimport { first } from 'rxjs/operators/first';\nimport 'rxjs/Subject';\nimport '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport '@angular/platform-browser';\nimport 'rxjs/Subscription';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport '@angular/material/form-field';\nimport '@angular/material/input';\nimport { merge } from 'rxjs/observable/merge';\nimport { of } from 'rxjs/observable/of';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n * @param {?} provider\n * @return {?}\n */\nfunction createMissingDateImplError(provider) {\n    return Error(\"MatDatepicker: No provider found for \" + provider + \". You must import one of the following \" +\n        \"modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a \" +\n        \"custom implementation.\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Datepicker data that requires internationalization.\n */\nvar MatDatepickerIntl = /** @class */ (function () {\n    function MatDatepickerIntl() {\n    }\n    return MatDatepickerIntl;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * \\@docs-private\n */\nvar MatCalendarCell = /** @class */ (function () {\n    function MatCalendarCell(value, displayValue, ariaLabel, enabled) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n    }\n    return MatCalendarCell;\n}());\n/**\n * An internal component used to display calendar data in a table.\n * \\@docs-private\n */\nvar MatCalendarBody = /** @class */ (function () {\n    function MatCalendarBody() {\n    }\n    /**\n     * @param {?} cell\n     * @return {?}\n     */\n    MatCalendarBody.prototype._cellClicked = /**\n     * @param {?} cell\n     * @return {?}\n     */\n    function (cell) {\n        if (!this.allowDisabledSelection && !cell.enabled) {\n            return;\n        }\n        this.selectedValueChange.emit(cell.value);\n    };\n    Object.defineProperty(MatCalendarBody.prototype, \"_firstRowOffset\", {\n        /** The number of blank cells to put at the beginning for the first row. */\n        get: /**\n         * The number of blank cells to put at the beginning for the first row.\n         * @return {?}\n         */\n        function () {\n            return this.rows && this.rows.length && this.rows[0].length ?\n                this.numCols - this.rows[0].length : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} rowIndex\n     * @param {?} colIndex\n     * @return {?}\n     */\n    MatCalendarBody.prototype._isActiveCell = /**\n     * @param {?} rowIndex\n     * @param {?} colIndex\n     * @return {?}\n     */\n    function (rowIndex, colIndex) {\n        var /** @type {?} */ cellNumber = rowIndex * this.numCols + colIndex;\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n        return cellNumber == this.activeCell;\n    };\n    return MatCalendarBody;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * \\@docs-private\n */\nvar MatMonthView = /** @class */ (function () {\n    function MatMonthView(_dateAdapter, _dateFormats, _changeDetectorRef) {\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._changeDetectorRef = _changeDetectorRef;\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        var /** @type {?} */ firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        var /** @type {?} */ narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n        var /** @type {?} */ longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        var /** @type {?} */ weekdays = longWeekdays.map(function (long, i) {\n            return { long: long, narrow: narrowWeekdays[i] };\n        });\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n        this._activeDate = this._dateAdapter.today();\n    }\n    Object.defineProperty(MatMonthView.prototype, \"activeDate\", {\n        get: /**\n         * The date to display in this month view (everything other than the month and year is ignored).\n         * @return {?}\n         */\n        function () { return this._activeDate; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            var /** @type {?} */ oldActiveDate = this._activeDate;\n            this._activeDate =\n                this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n            if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n                this._init();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatMonthView.prototype, \"selected\", {\n        get: /**\n         * The currently selected date.\n         * @return {?}\n         */\n        function () { return this._selected; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n            this._selectedDate = this._getDateInCurrentMonth(this._selected);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatMonthView.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        this._init();\n    };\n    /** Handles when a new date is selected. */\n    /**\n     * Handles when a new date is selected.\n     * @param {?} date\n     * @return {?}\n     */\n    MatMonthView.prototype._dateSelected = /**\n     * Handles when a new date is selected.\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        if (this._selectedDate != date) {\n            var /** @type {?} */ selectedYear = this._dateAdapter.getYear(this.activeDate);\n            var /** @type {?} */ selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n            var /** @type {?} */ selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n            this.selectedChange.emit(selectedDate);\n        }\n        this._userSelection.emit();\n    };\n    /** Initializes this month view. */\n    /**\n     * Initializes this month view.\n     * @return {?}\n     */\n    MatMonthView.prototype._init = /**\n     * Initializes this month view.\n     * @return {?}\n     */\n    function () {\n        this._selectedDate = this._getDateInCurrentMonth(this.selected);\n        this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n        this._monthLabel =\n            this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n                .toLocaleUpperCase();\n        var /** @type {?} */ firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * Creates MatCalendarCells for the dates in this month.\n     * @return {?}\n     */\n    MatMonthView.prototype._createWeekCells = /**\n     * Creates MatCalendarCells for the dates in this month.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        var /** @type {?} */ dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (var /** @type {?} */ i = 0, /** @type {?} */ cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell == DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            var /** @type {?} */ date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n            var /** @type {?} */ enabled = !this.dateFilter ||\n                this.dateFilter(date);\n            var /** @type {?} */ ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            this._weeks[this._weeks.length - 1]\n                .push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled));\n        }\n    };\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     * @param {?} date\n     * @return {?}\n     */\n    MatMonthView.prototype._getDateInCurrentMonth = /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n            this._dateAdapter.getDate(date) : null;\n    };\n    /**\n     * Checks whether the 2 dates are non-null and fall within the same month of the same year.\n     * @param {?} d1\n     * @param {?} d2\n     * @return {?}\n     */\n    MatMonthView.prototype._hasSameMonthAndYear = /**\n     * Checks whether the 2 dates are non-null and fall within the same month of the same year.\n     * @param {?} d1\n     * @param {?} d2\n     * @return {?}\n     */\n    function (d1, d2) {\n        return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    };\n    /**\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    MatMonthView.prototype._getValidDateOrNull = /**\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    function (obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    };\n    return MatMonthView;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * An internal component used to display a single year in the datepicker.\n * \\@docs-private\n */\nvar MatYearView = /** @class */ (function () {\n    function MatYearView(_dateAdapter, _dateFormats, _changeDetectorRef) {\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._changeDetectorRef = _changeDetectorRef;\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    Object.defineProperty(MatYearView.prototype, \"activeDate\", {\n        get: /**\n         * The date to display in this year view (everything other than the year is ignored).\n         * @return {?}\n         */\n        function () { return this._activeDate; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            var /** @type {?} */ oldActiveDate = this._activeDate;\n            this._activeDate =\n                this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\n            if (this._dateAdapter.getYear(oldActiveDate) != this._dateAdapter.getYear(this._activeDate)) {\n                this._init();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatYearView.prototype, \"selected\", {\n        get: /**\n         * The currently selected date.\n         * @return {?}\n         */\n        function () { return this._selected; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n            this._selectedMonth = this._getMonthInCurrentYear(this._selected);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatYearView.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        this._init();\n    };\n    /** Handles when a new month is selected. */\n    /**\n     * Handles when a new month is selected.\n     * @param {?} month\n     * @return {?}\n     */\n    MatYearView.prototype._monthSelected = /**\n     * Handles when a new month is selected.\n     * @param {?} month\n     * @return {?}\n     */\n    function (month) {\n        var /** @type {?} */ daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1));\n        this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    };\n    /** Initializes this month view. */\n    /**\n     * Initializes this month view.\n     * @return {?}\n     */\n    MatYearView.prototype._init = /**\n     * Initializes this month view.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n        var /** @type {?} */ monthNames = this._dateAdapter.getMonthNames('short');\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(function (row) {\n            return row.map(function (month) { return _this._createCellForMonth(month, monthNames[month]); });\n        });\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     * @param {?} date\n     * @return {?}\n     */\n    MatYearView.prototype._getMonthInCurrentYear = /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n            this._dateAdapter.getMonth(date) : null;\n    };\n    /**\n     * Creates an MatCalendarCell for the given month.\n     * @param {?} month\n     * @param {?} monthName\n     * @return {?}\n     */\n    MatYearView.prototype._createCellForMonth = /**\n     * Creates an MatCalendarCell for the given month.\n     * @param {?} month\n     * @param {?} monthName\n     * @return {?}\n     */\n    function (month, monthName) {\n        var /** @type {?} */ ariaLabel = this._dateAdapter.format(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1), this._dateFormats.display.monthYearA11yLabel);\n        return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._isMonthEnabled(month));\n    };\n    /**\n     * Whether the given month is enabled.\n     * @param {?} month\n     * @return {?}\n     */\n    MatYearView.prototype._isMonthEnabled = /**\n     * Whether the given month is enabled.\n     * @param {?} month\n     * @return {?}\n     */\n    function (month) {\n        if (!this.dateFilter) {\n            return true;\n        }\n        var /** @type {?} */ firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        // If any date in the month is enabled count the month as enabled.\n        for (var /** @type {?} */ date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    MatYearView.prototype._getValidDateOrNull = /**\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    function (obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    };\n    return MatYearView;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * A calendar that is used as part of the datepicker.\n * \\@docs-private\n */\nvar MatCalendar = /** @class */ (function () {\n    function MatCalendar(_elementRef, _intl, _ngZone, _dateAdapter, _dateFormats, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._intl = _intl;\n        this._ngZone = _ngZone;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        this._intlChanges = _intl.changes.subscribe(function () { return changeDetectorRef.markForCheck(); });\n    }\n    Object.defineProperty(MatCalendar.prototype, \"startAt\", {\n        get: /**\n         * A date representing the period (month or year) to start the calendar in.\n         * @return {?}\n         */\n        function () { return this._startAt; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatCalendar.prototype, \"selected\", {\n        get: /**\n         * The currently selected date.\n         * @return {?}\n         */\n        function () { return this._selected; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatCalendar.prototype, \"minDate\", {\n        get: /**\n         * The minimum selectable date.\n         * @return {?}\n         */\n        function () { return this._minDate; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatCalendar.prototype, \"maxDate\", {\n        get: /**\n         * The maximum selectable date.\n         * @return {?}\n         */\n        function () { return this._maxDate; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatCalendar.prototype, \"_activeDate\", {\n        /**\n         * The current active date. This determines which time period is shown and which date is\n         * highlighted when using keyboard navigation.\n         */\n        get: /**\n         * The current active date. This determines which time period is shown and which date is\n         * highlighted when using keyboard navigation.\n         * @return {?}\n         */\n        function () { return this._clampedActiveDate; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatCalendar.prototype, \"_periodButtonText\", {\n        /** The label for the current calendar view. */\n        get: /**\n         * The label for the current calendar view.\n         * @return {?}\n         */\n        function () {\n            return this._monthView ?\n                this._dateAdapter.format(this._activeDate, this._dateFormats.display.monthYearLabel)\n                    .toLocaleUpperCase() :\n                this._dateAdapter.getYearName(this._activeDate);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatCalendar.prototype, \"_periodButtonLabel\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._monthView ? this._intl.switchToYearViewLabel : this._intl.switchToMonthViewLabel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatCalendar.prototype, \"_prevButtonLabel\", {\n        /** The label for the the previous button. */\n        get: /**\n         * The label for the the previous button.\n         * @return {?}\n         */\n        function () {\n            return this._monthView ? this._intl.prevMonthLabel : this._intl.prevYearLabel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatCalendar.prototype, \"_nextButtonLabel\", {\n        /** The label for the the next button. */\n        get: /**\n         * The label for the the next button.\n         * @return {?}\n         */\n        function () {\n            return this._monthView ? this._intl.nextMonthLabel : this._intl.nextYearLabel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatCalendar.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        this._activeDate = this.startAt || this._dateAdapter.today();\n        this._focusActiveCell();\n        this._monthView = this.startView != 'year';\n    };\n    /**\n     * @return {?}\n     */\n    MatCalendar.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._intlChanges.unsubscribe();\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MatCalendar.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        var /** @type {?} */ change = changes[\"minDate\"] || changes[\"maxDate\"] || changes[\"dateFilter\"];\n        if (change && !change.firstChange) {\n            var /** @type {?} */ view = this.monthView || this.yearView;\n            if (view) {\n                view._init();\n            }\n        }\n    };\n    /** Handles date selection in the month view. */\n    /**\n     * Handles date selection in the month view.\n     * @param {?} date\n     * @return {?}\n     */\n    MatCalendar.prototype._dateSelected = /**\n     * Handles date selection in the month view.\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        if (!this._dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatCalendar.prototype._userSelected = /**\n     * @return {?}\n     */\n    function () {\n        this._userSelection.emit();\n    };\n    /** Handles month selection in the year view. */\n    /**\n     * Handles month selection in the year view.\n     * @param {?} month\n     * @return {?}\n     */\n    MatCalendar.prototype._monthSelected = /**\n     * Handles month selection in the year view.\n     * @param {?} month\n     * @return {?}\n     */\n    function (month) {\n        this._activeDate = month;\n        this._monthView = true;\n    };\n    /** Handles user clicks on the period label. */\n    /**\n     * Handles user clicks on the period label.\n     * @return {?}\n     */\n    MatCalendar.prototype._currentPeriodClicked = /**\n     * Handles user clicks on the period label.\n     * @return {?}\n     */\n    function () {\n        this._monthView = !this._monthView;\n    };\n    /** Handles user clicks on the previous button. */\n    /**\n     * Handles user clicks on the previous button.\n     * @return {?}\n     */\n    MatCalendar.prototype._previousClicked = /**\n     * Handles user clicks on the previous button.\n     * @return {?}\n     */\n    function () {\n        this._activeDate = this._monthView ?\n            this._dateAdapter.addCalendarMonths(this._activeDate, -1) :\n            this._dateAdapter.addCalendarYears(this._activeDate, -1);\n    };\n    /** Handles user clicks on the next button. */\n    /**\n     * Handles user clicks on the next button.\n     * @return {?}\n     */\n    MatCalendar.prototype._nextClicked = /**\n     * Handles user clicks on the next button.\n     * @return {?}\n     */\n    function () {\n        this._activeDate = this._monthView ?\n            this._dateAdapter.addCalendarMonths(this._activeDate, 1) :\n            this._dateAdapter.addCalendarYears(this._activeDate, 1);\n    };\n    /** Whether the previous period button is enabled. */\n    /**\n     * Whether the previous period button is enabled.\n     * @return {?}\n     */\n    MatCalendar.prototype._previousEnabled = /**\n     * Whether the previous period button is enabled.\n     * @return {?}\n     */\n    function () {\n        if (!this.minDate) {\n            return true;\n        }\n        return !this.minDate || !this._isSameView(this._activeDate, this.minDate);\n    };\n    /** Whether the next period button is enabled. */\n    /**\n     * Whether the next period button is enabled.\n     * @return {?}\n     */\n    MatCalendar.prototype._nextEnabled = /**\n     * Whether the next period button is enabled.\n     * @return {?}\n     */\n    function () {\n        return !this.maxDate || !this._isSameView(this._activeDate, this.maxDate);\n    };\n    /** Handles keydown events on the calendar body. */\n    /**\n     * Handles keydown events on the calendar body.\n     * @param {?} event\n     * @return {?}\n     */\n    MatCalendar.prototype._handleCalendarBodyKeydown = /**\n     * Handles keydown events on the calendar body.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        if (this._monthView) {\n            this._handleCalendarBodyKeydownInMonthView(event);\n        }\n        else {\n            this._handleCalendarBodyKeydownInYearView(event);\n        }\n    };\n    /** Focuses the active cell after the microtask queue is empty. */\n    /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    MatCalendar.prototype._focusActiveCell = /**\n     * Focuses the active cell after the microtask queue is empty.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.asObservable().pipe(first()).subscribe(function () {\n                _this._elementRef.nativeElement.querySelector('.mat-calendar-body-active').focus();\n            });\n        });\n    };\n    /**\n     * Whether the two dates represent the same view in the current view mode (month or year).\n     * @param {?} date1\n     * @param {?} date2\n     * @return {?}\n     */\n    MatCalendar.prototype._isSameView = /**\n     * Whether the two dates represent the same view in the current view mode (month or year).\n     * @param {?} date1\n     * @param {?} date2\n     * @return {?}\n     */\n    function (date1, date2) {\n        return this._monthView ?\n            this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2) :\n            this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n    };\n    /**\n     * Handles keydown events on the calendar body when calendar is in month view.\n     * @param {?} event\n     * @return {?}\n     */\n    MatCalendar.prototype._handleCalendarBodyKeydownInMonthView = /**\n     * Handles keydown events on the calendar body when calendar is in month view.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this._activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -1);\n                break;\n            case RIGHT_ARROW:\n                this._activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1);\n                break;\n            case UP_ARROW:\n                this._activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this._activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this._activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this._activeDate = this._dateAdapter.addCalendarDays(this._activeDate, (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                    this._dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this._activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this._activeDate = event.altKey ?\n                    this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n                if (this._dateFilterForViews(this._activeDate)) {\n                    this._dateSelected(this._activeDate);\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    };\n    /**\n     * Handles keydown events on the calendar body when calendar is in year view.\n     * @param {?} event\n     * @return {?}\n     */\n    MatCalendar.prototype._handleCalendarBodyKeydownInYearView = /**\n     * Handles keydown events on the calendar body when calendar is in year view.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this._activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case RIGHT_ARROW:\n                this._activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case UP_ARROW:\n                this._activeDate = this._prevMonthInSameCol(this._activeDate);\n                break;\n            case DOWN_ARROW:\n                this._activeDate = this._nextMonthInSameCol(this._activeDate);\n                break;\n            case HOME:\n                this._activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this._activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this._activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this._activeDate =\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n                this._monthSelected(this._activeDate);\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    };\n    /**\n     * Determine the date for the month that comes before the given month in the same column in the\n     * calendar table.\n     * @param {?} date\n     * @return {?}\n     */\n    MatCalendar.prototype._prevMonthInSameCol = /**\n     * Determine the date for the month that comes before the given month in the same column in the\n     * calendar table.\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        // Determine how many months to jump forward given that there are 2 empty slots at the beginning\n        // of each year.\n        var /** @type {?} */ increment = this._dateAdapter.getMonth(date) <= 4 ? -5 :\n            (this._dateAdapter.getMonth(date) >= 7 ? -7 : -12);\n        return this._dateAdapter.addCalendarMonths(date, increment);\n    };\n    /**\n     * Determine the date for the month that comes after the given month in the same column in the\n     * calendar table.\n     * @param {?} date\n     * @return {?}\n     */\n    MatCalendar.prototype._nextMonthInSameCol = /**\n     * Determine the date for the month that comes after the given month in the same column in the\n     * calendar table.\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        // Determine how many months to jump forward given that there are 2 empty slots at the beginning\n        // of each year.\n        var /** @type {?} */ increment = this._dateAdapter.getMonth(date) <= 4 ? 7 :\n            (this._dateAdapter.getMonth(date) >= 7 ? 5 : 12);\n        return this._dateAdapter.addCalendarMonths(date, increment);\n    };\n    /**\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    MatCalendar.prototype._getValidDateOrNull = /**\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    function (obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    };\n    return MatCalendar;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Injection token that determines the scroll handling while the calendar is open.\n */\nvar MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return function () { return overlay.scrollStrategies.reposition(); };\n}\n/**\n * \\@docs-private\n */\nvar MAT_DATEPICKER_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * \\@docs-private\n */\nvar MatDatepickerContent = /** @class */ (function () {\n    function MatDatepickerContent() {\n    }\n    /**\n     * @return {?}\n     */\n    MatDatepickerContent.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        this._calendar._focusActiveCell();\n    };\n    /**\n     * Handles keydown event on datepicker content.\n     * @param event The event.\n     */\n    /**\n     * Handles keydown event on datepicker content.\n     * @param {?} event The event.\n     * @return {?}\n     */\n    MatDatepickerContent.prototype._handleKeydown = /**\n     * Handles keydown event on datepicker content.\n     * @param {?} event The event.\n     * @return {?}\n     */\n    function (event) {\n        if (event.keyCode === ESCAPE) {\n            this.datepicker.close();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n    return MatDatepickerContent;\n}());\n/**\n * Component responsible for managing the datepicker popup/dialog.\n */\nvar MatDatepicker = /** @class */ (function () {\n    function MatDatepicker(_dialog, _overlay, _ngZone, _viewContainerRef, _scrollStrategy, _dateAdapter, _dir, _document) {\n        this._dialog = _dialog;\n        this._overlay = _overlay;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._scrollStrategy = _scrollStrategy;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._document = _document;\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n    }\n    Object.defineProperty(MatDatepicker.prototype, \"startAt\", {\n        get: /**\n         * The date to open the calendar to initially.\n         * @return {?}\n         */\n        function () {\n            // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n            // selected value is.\n            return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n        },\n        set: /**\n         * @param {?} date\n         * @return {?}\n         */\n        function (date) {\n            this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(date));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDatepicker.prototype, \"touchUi\", {\n        get: /**\n         * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n         * than a popup and elements have more padding to allow for bigger touch targets.\n         * @return {?}\n         */\n        function () {\n            return this._touchUi;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._touchUi = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDatepicker.prototype, \"disabled\", {\n        get: /**\n         * Whether the datepicker pop-up should be disabled.\n         * @return {?}\n         */\n        function () {\n            return this._disabled === undefined && this._datepickerInput ?\n                this._datepickerInput.disabled : !!this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            var /** @type {?} */ newValue = coerceBooleanProperty(value);\n            if (newValue !== this._disabled) {\n                this._disabled = newValue;\n                this._disabledChange.next(newValue);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDatepicker.prototype, \"_selected\", {\n        /** The currently selected date. */\n        get: /**\n         * The currently selected date.\n         * @return {?}\n         */\n        function () { return this._validSelected; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._validSelected = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDatepicker.prototype, \"_minDate\", {\n        /** The minimum selectable date. */\n        get: /**\n         * The minimum selectable date.\n         * @return {?}\n         */\n        function () {\n            return this._datepickerInput && this._datepickerInput.min;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDatepicker.prototype, \"_maxDate\", {\n        /** The maximum selectable date. */\n        get: /**\n         * The maximum selectable date.\n         * @return {?}\n         */\n        function () {\n            return this._datepickerInput && this._datepickerInput.max;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDatepicker.prototype, \"_dateFilter\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._datepickerInput && this._datepickerInput._dateFilter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatDatepicker.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.close();\n        this._inputSubscription.unsubscribe();\n        this._disabledChange.complete();\n        if (this._popupRef) {\n            this._popupRef.dispose();\n        }\n    };\n    /** Selects the given date */\n    /**\n     * Selects the given date\n     * @param {?} date\n     * @return {?}\n     */\n    MatDatepicker.prototype._select = /**\n     * Selects the given date\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        var /** @type {?} */ oldValue = this._selected;\n        this._selected = date;\n        if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n            this.selectedChanged.emit(date);\n        }\n    };\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     */\n    /**\n     * Register an input with this datepicker.\n     * @param {?} input The datepicker input to register with this datepicker.\n     * @return {?}\n     */\n    MatDatepicker.prototype._registerInput = /**\n     * Register an input with this datepicker.\n     * @param {?} input The datepicker input to register with this datepicker.\n     * @return {?}\n     */\n    function (input) {\n        var _this = this;\n        if (this._datepickerInput) {\n            throw Error('A MatDatepicker can only be associated with a single input.');\n        }\n        this._datepickerInput = input;\n        this._inputSubscription =\n            this._datepickerInput._valueChange.subscribe(function (value) { return _this._selected = value; });\n    };\n    /** Open the calendar. */\n    /**\n     * Open the calendar.\n     * @return {?}\n     */\n    MatDatepicker.prototype.open = /**\n     * Open the calendar.\n     * @return {?}\n     */\n    function () {\n        if (this.opened || this.disabled) {\n            return;\n        }\n        if (!this._datepickerInput) {\n            throw Error('Attempted to open an MatDatepicker with no associated input.');\n        }\n        if (this._document) {\n            this._focusedElementBeforeOpen = this._document.activeElement;\n        }\n        this.touchUi ? this._openAsDialog() : this._openAsPopup();\n        this.opened = true;\n        this.openedStream.emit();\n    };\n    /** Close the calendar. */\n    /**\n     * Close the calendar.\n     * @return {?}\n     */\n    MatDatepicker.prototype.close = /**\n     * Close the calendar.\n     * @return {?}\n     */\n    function () {\n        if (!this.opened) {\n            return;\n        }\n        if (this._popupRef && this._popupRef.hasAttached()) {\n            this._popupRef.detach();\n        }\n        if (this._dialogRef) {\n            this._dialogRef.close();\n            this._dialogRef = null;\n        }\n        if (this._calendarPortal && this._calendarPortal.isAttached) {\n            this._calendarPortal.detach();\n        }\n        if (this._focusedElementBeforeOpen &&\n            typeof this._focusedElementBeforeOpen.focus === 'function') {\n            this._focusedElementBeforeOpen.focus();\n            this._focusedElementBeforeOpen = null;\n        }\n        this.opened = false;\n        this.closedStream.emit();\n    };\n    /**\n     * Open the calendar as a dialog.\n     * @return {?}\n     */\n    MatDatepicker.prototype._openAsDialog = /**\n     * Open the calendar as a dialog.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._dialogRef = this._dialog.open(MatDatepickerContent, {\n            direction: this._dir ? this._dir.value : 'ltr',\n            viewContainerRef: this._viewContainerRef,\n            panelClass: 'mat-datepicker-dialog',\n        });\n        this._dialogRef.afterClosed().subscribe(function () { return _this.close(); });\n        this._dialogRef.componentInstance.datepicker = this;\n    };\n    /**\n     * Open the calendar as a popup.\n     * @return {?}\n     */\n    MatDatepicker.prototype._openAsPopup = /**\n     * Open the calendar as a popup.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this._calendarPortal) {\n            this._calendarPortal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n        }\n        if (!this._popupRef) {\n            this._createPopup();\n        }\n        if (!this._popupRef.hasAttached()) {\n            var /** @type {?} */ componentRef = this._popupRef.attach(this._calendarPortal);\n            componentRef.instance.datepicker = this;\n            // Update the position once the calendar has rendered.\n            this._ngZone.onStable.asObservable().pipe(first()).subscribe(function () {\n                _this._popupRef.updatePosition();\n            });\n        }\n        this._popupRef.backdropClick().subscribe(function () { return _this.close(); });\n    };\n    /**\n     * Create the popup.\n     * @return {?}\n     */\n    MatDatepicker.prototype._createPopup = /**\n     * Create the popup.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ overlayConfig = new OverlayConfig({\n            positionStrategy: this._createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'mat-overlay-transparent-backdrop',\n            direction: this._dir ? this._dir.value : 'ltr',\n            scrollStrategy: this._scrollStrategy(),\n            panelClass: 'mat-datepicker-popup',\n        });\n        this._popupRef = this._overlay.create(overlayConfig);\n    };\n    /**\n     * Create the popup PositionStrategy.\n     * @return {?}\n     */\n    MatDatepicker.prototype._createPopupPositionStrategy = /**\n     * Create the popup PositionStrategy.\n     * @return {?}\n     */\n    function () {\n        return this._overlay.position()\n            .connectedTo(this._datepickerInput.getPopupConnectionElementRef(), { originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' })\n            .withFallbackPosition({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' })\n            .withFallbackPosition({ originX: 'end', originY: 'bottom' }, { overlayX: 'end', overlayY: 'top' })\n            .withFallbackPosition({ originX: 'end', originY: 'top' }, { overlayX: 'end', overlayY: 'bottom' });\n    };\n    /**\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    MatDatepicker.prototype._getValidDateOrNull = /**\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    function (obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    };\n    return MatDatepicker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MAT_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return MatDatepickerInput; }),\n    multi: true\n};\nvar MAT_DATEPICKER_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return MatDatepickerInput; }),\n    multi: true\n};\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n */\nvar MatDatepickerInputEvent = /** @class */ (function () {\n    function MatDatepickerInputEvent(target, targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n    return MatDatepickerInputEvent;\n}());\n/**\n * Directive used to connect an input to a MatDatepicker.\n */\nvar MatDatepickerInput = /** @class */ (function () {\n    function MatDatepickerInput(_elementRef, _renderer, _dateAdapter, _dateFormats, _formField) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._formField = _formField;\n        if (!this._dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        if (!this._dateFormats) {\n            throw createMissingDateImplError('MAT_DATE_FORMATS');\n        }\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe(function () {\n            _this.value = _this.value;\n        });\n    }\n    Object.defineProperty(MatDatepickerInput.prototype, \"matDatepicker\", {\n        set: /**\n         * The datepicker that this input is associated with.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this.registerDatepicker(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    MatDatepickerInput.prototype.registerDatepicker = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (value) {\n            this._datepicker = value;\n            this._datepicker._registerInput(this);\n        }\n    };\n    Object.defineProperty(MatDatepickerInput.prototype, \"matDatepickerFilter\", {\n        set: /**\n         * @param {?} filter\n         * @return {?}\n         */\n        function (filter) {\n            this._dateFilter = filter;\n            this._validatorOnChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDatepickerInput.prototype, \"value\", {\n        get: /**\n         * The value of the input.\n         * @return {?}\n         */\n        function () {\n            return this._value;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            value = this._dateAdapter.deserialize(value);\n            this._lastValueValid = !value || this._dateAdapter.isValid(value);\n            value = this._getValidDateOrNull(value);\n            var /** @type {?} */ oldDate = this.value;\n            this._value = value;\n            this._renderer.setProperty(this._elementRef.nativeElement, 'value', value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '');\n            if (!this._dateAdapter.sameDate(oldDate, value)) {\n                this._valueChange.emit(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDatepickerInput.prototype, \"min\", {\n        get: /**\n         * The minimum valid date.\n         * @return {?}\n         */\n        function () { return this._min; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n            this._validatorOnChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDatepickerInput.prototype, \"max\", {\n        get: /**\n         * The maximum valid date.\n         * @return {?}\n         */\n        function () { return this._max; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\n            this._validatorOnChange();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDatepickerInput.prototype, \"disabled\", {\n        get: /**\n         * Whether the datepicker-input is disabled.\n         * @return {?}\n         */\n        function () { return !!this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            var /** @type {?} */ newValue = coerceBooleanProperty(value);\n            if (this._disabled !== newValue) {\n                this._disabled = newValue;\n                this._disabledChange.emit(newValue);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatDatepickerInput.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._datepicker) {\n            this._datepickerSubscription =\n                this._datepicker.selectedChanged.subscribe(function (selected) {\n                    _this.value = selected;\n                    _this._cvaOnChange(selected);\n                    _this._onTouched();\n                    _this.dateInput.emit(new MatDatepickerInputEvent(_this, _this._elementRef.nativeElement));\n                    _this.dateChange.emit(new MatDatepickerInputEvent(_this, _this._elementRef.nativeElement));\n                });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatDatepickerInput.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._datepickerSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this._valueChange.complete();\n        this._disabledChange.complete();\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MatDatepickerInput.prototype.registerOnValidatorChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this._validatorOnChange = fn;\n    };\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    MatDatepickerInput.prototype.validate = /**\n     * @param {?} c\n     * @return {?}\n     */\n    function (c) {\n        return this._validator ? this._validator(c) : null;\n    };\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return The element to connect the popup to.\n     */\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return {?} The element to connect the popup to.\n     */\n    MatDatepickerInput.prototype.getPopupConnectionElementRef = /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return {?} The element to connect the popup to.\n     */\n    function () {\n        return this._formField ? this._formField.underlineRef : this._elementRef;\n    };\n    // Implemented as part of ControlValueAccessor\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    MatDatepickerInput.prototype.writeValue = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this.value = value;\n    };\n    // Implemented as part of ControlValueAccessor\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MatDatepickerInput.prototype.registerOnChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this._cvaOnChange = fn;\n    };\n    // Implemented as part of ControlValueAccessor\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MatDatepickerInput.prototype.registerOnTouched = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this._onTouched = fn;\n    };\n    // Implemented as part of ControlValueAccessor\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    MatDatepickerInput.prototype.setDisabledState = /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    function (disabled) {\n        this.disabled = disabled;\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatDatepickerInput.prototype._onKeydown = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (event.altKey && event.keyCode === DOWN_ARROW) {\n            this._datepicker.open();\n            event.preventDefault();\n        }\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    MatDatepickerInput.prototype._onInput = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n        this._lastValueValid = !date || this._dateAdapter.isValid(date);\n        date = this._getValidDateOrNull(date);\n        this._value = date;\n        this._cvaOnChange(date);\n        this._valueChange.emit(date);\n        this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    };\n    /**\n     * @return {?}\n     */\n    MatDatepickerInput.prototype._onChange = /**\n     * @return {?}\n     */\n    function () {\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    };\n    /**\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    MatDatepickerInput.prototype._getValidDateOrNull = /**\n     * @param {?} obj The object to check.\n     * @return {?} The given object if it is both a date instance and valid, otherwise null.\n     */\n    function (obj) {\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n    };\n    return MatDatepickerInput;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatDatepickerToggle = /** @class */ (function () {\n    function MatDatepickerToggle(_intl, _changeDetectorRef) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n    }\n    Object.defineProperty(MatDatepickerToggle.prototype, \"disabled\", {\n        get: /**\n         * Whether the toggle button is disabled.\n         * @return {?}\n         */\n        function () {\n            return this._disabled === undefined ? this.datepicker.disabled : !!this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MatDatepickerToggle.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes[\"datepicker\"]) {\n            this._watchStateChanges();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatDatepickerToggle.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._stateChanges.unsubscribe();\n    };\n    /**\n     * @return {?}\n     */\n    MatDatepickerToggle.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        this._watchStateChanges();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatDatepickerToggle.prototype._open = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatDatepickerToggle.prototype._watchStateChanges = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : of();\n        var /** @type {?} */ inputDisabled = this.datepicker && this.datepicker._datepickerInput ?\n            this.datepicker._datepickerInput._disabledChange : of();\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerDisabled, inputDisabled)\n            .subscribe(function () { return _this._changeDetectorRef.markForCheck(); });\n    };\n    return MatDatepickerToggle;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatDatepickerModule = /** @class */ (function () {\n    function MatDatepickerModule() {\n    }\n    return MatDatepickerModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDatepickerModule, MatCalendar, MatCalendarCell, MatCalendarBody, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY_PROVIDER, MatDatepickerContent, MatDatepicker, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, MatDatepickerInputEvent, MatDatepickerInput, MatDatepickerIntl, MatDatepickerToggle, MatMonthView, MatYearView };\n//# sourceMappingURL=datepicker.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport '@angular/common';\nimport '@angular/core';\nimport '@angular/cdk/collections';\nimport { CdkAccordion, CdkAccordionItem } from '@angular/cdk/accordion';\nimport '@angular/cdk/a11y';\nimport { __extends } from 'tslib';\nimport * as tslib_1 from 'tslib';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport '@angular/animations';\nimport { mixinDisabled } from '@angular/material/core';\nimport 'rxjs/Subject';\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { filter } from 'rxjs/operators/filter';\nimport { merge } from 'rxjs/observable/merge';\nimport 'rxjs/Subscription';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nvar _CdkAccordion = CdkAccordion;\n/**\n * Directive for a Material Design Accordion.\n */\nvar MatAccordion = /** @class */ (function (_super) {\n    __extends(MatAccordion, _super);\n    function MatAccordion() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MatAccordion.prototype, \"hideToggle\", {\n        get: /**\n         * Whether the expansion indicator should be hidden.\n         * @return {?}\n         */\n        function () { return this._hideToggle; },\n        set: /**\n         * @param {?} show\n         * @return {?}\n         */\n        function (show) { this._hideToggle = coerceBooleanProperty(show); },\n        enumerable: true,\n        configurable: true\n    });\n    return MatAccordion;\n}(_CdkAccordion));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nvar _CdkAccordionItem = CdkAccordionItem;\n/**\n * Time and timing curve for expansion panel animations.\n */\nvar EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * \\@docs-private\n */\nvar MatExpansionPanelBase = /** @class */ (function (_super) {\n    __extends(MatExpansionPanelBase, _super);\n    function MatExpansionPanelBase(accordion, _changeDetectorRef, _uniqueSelectionDispatcher) {\n        return _super.call(this, accordion, _changeDetectorRef, _uniqueSelectionDispatcher) || this;\n    }\n    return MatExpansionPanelBase;\n}(_CdkAccordionItem));\nvar _MatExpansionPanelMixinBase = mixinDisabled(MatExpansionPanelBase);\n/**\n * <mat-expansion-panel> component.\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MdAccordion directive attached.\n *\n * Please refer to README.md for examples on how to use it.\n */\nvar MatExpansionPanel = /** @class */ (function (_super) {\n    __extends(MatExpansionPanel, _super);\n    function MatExpansionPanel(accordion, _changeDetectorRef, _uniqueSelectionDispatcher) {\n        var _this = _super.call(this, accordion, _changeDetectorRef, _uniqueSelectionDispatcher) || this;\n        _this.accordion = accordion;\n        return _this;\n    }\n    Object.defineProperty(MatExpansionPanel.prototype, \"hideToggle\", {\n        get: /**\n         * Whether the toggle indicator should be hidden.\n         * @return {?}\n         */\n        function () {\n            return this._hideToggle;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._hideToggle = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Whether the expansion indicator should be hidden. */\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @return {?}\n     */\n    MatExpansionPanel.prototype._getHideToggle = /**\n     * Whether the expansion indicator should be hidden.\n     * @return {?}\n     */\n    function () {\n        if (this.accordion) {\n            return this.accordion.hideToggle;\n        }\n        return this.hideToggle;\n    };\n    /** Determines whether the expansion panel should have spacing between it and its siblings. */\n    /**\n     * Determines whether the expansion panel should have spacing between it and its siblings.\n     * @return {?}\n     */\n    MatExpansionPanel.prototype._hasSpacing = /**\n     * Determines whether the expansion panel should have spacing between it and its siblings.\n     * @return {?}\n     */\n    function () {\n        if (this.accordion) {\n            return (this.expanded ? this.accordion.displayMode : this._getExpandedState()) === 'default';\n        }\n        return false;\n    };\n    /** Gets the expanded state string. */\n    /**\n     * Gets the expanded state string.\n     * @return {?}\n     */\n    MatExpansionPanel.prototype._getExpandedState = /**\n     * Gets the expanded state string.\n     * @return {?}\n     */\n    function () {\n        return this.expanded ? 'expanded' : 'collapsed';\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MatExpansionPanel.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        this._inputChanges.next(changes);\n    };\n    /**\n     * @return {?}\n     */\n    MatExpansionPanel.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._inputChanges.complete();\n    };\n    return MatExpansionPanel;\n}(_MatExpansionPanelMixinBase));\nvar MatExpansionPanelActionRow = /** @class */ (function () {\n    function MatExpansionPanelActionRow() {\n    }\n    return MatExpansionPanelActionRow;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * <mat-expansion-panel-header> component.\n *\n * This component corresponds to the header element of an <mat-expansion-panel>.\n *\n * Please refer to README.md for examples on how to use it.\n */\nvar MatExpansionPanelHeader = /** @class */ (function () {\n    function MatExpansionPanelHeader(panel, _element, _focusMonitor, _changeDetectorRef) {\n        var _this = this;\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to  subscribe and trigger change detection manually.\n        this._parentChangeSubscription = merge(panel.opened, panel.closed, panel._inputChanges.pipe(filter(function (changes) { return !!(changes[\"hideToggle\"] || changes[\"disabled\"]); })))\n            .subscribe(function () { return _this._changeDetectorRef.markForCheck(); });\n        _focusMonitor.monitor(_element.nativeElement, false);\n    }\n    /** Toggles the expanded state of the panel. */\n    /**\n     * Toggles the expanded state of the panel.\n     * @return {?}\n     */\n    MatExpansionPanelHeader.prototype._toggle = /**\n     * Toggles the expanded state of the panel.\n     * @return {?}\n     */\n    function () {\n        if (!this.panel.disabled) {\n            this.panel.toggle();\n        }\n    };\n    /** Gets whether the panel is expanded. */\n    /**\n     * Gets whether the panel is expanded.\n     * @return {?}\n     */\n    MatExpansionPanelHeader.prototype._isExpanded = /**\n     * Gets whether the panel is expanded.\n     * @return {?}\n     */\n    function () {\n        return this.panel.expanded;\n    };\n    /** Gets the expanded state string of the panel. */\n    /**\n     * Gets the expanded state string of the panel.\n     * @return {?}\n     */\n    MatExpansionPanelHeader.prototype._getExpandedState = /**\n     * Gets the expanded state string of the panel.\n     * @return {?}\n     */\n    function () {\n        return this.panel._getExpandedState();\n    };\n    /** Gets the panel id. */\n    /**\n     * Gets the panel id.\n     * @return {?}\n     */\n    MatExpansionPanelHeader.prototype._getPanelId = /**\n     * Gets the panel id.\n     * @return {?}\n     */\n    function () {\n        return this.panel.id;\n    };\n    /** Gets whether the expand indicator should be shown. */\n    /**\n     * Gets whether the expand indicator should be shown.\n     * @return {?}\n     */\n    MatExpansionPanelHeader.prototype._showToggle = /**\n     * Gets whether the expand indicator should be shown.\n     * @return {?}\n     */\n    function () {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    };\n    /** Handle keyup event calling to toggle() if appropriate. */\n    /**\n     * Handle keyup event calling to toggle() if appropriate.\n     * @param {?} event\n     * @return {?}\n     */\n    MatExpansionPanelHeader.prototype._keyup = /**\n     * Handle keyup event calling to toggle() if appropriate.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                event.preventDefault();\n                this._toggle();\n                break;\n            default:\n                return;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatExpansionPanelHeader.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element.nativeElement);\n    };\n    return MatExpansionPanelHeader;\n}());\n/**\n * <mat-panel-description> directive.\n *\n * This direction is to be used inside of the MatExpansionPanelHeader component.\n */\nvar MatExpansionPanelDescription = /** @class */ (function () {\n    function MatExpansionPanelDescription() {\n    }\n    return MatExpansionPanelDescription;\n}());\n/**\n * <mat-panel-title> directive.\n *\n * This direction is to be used inside of the MatExpansionPanelHeader component.\n */\nvar MatExpansionPanelTitle = /** @class */ (function () {\n    function MatExpansionPanelTitle() {\n    }\n    return MatExpansionPanelTitle;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatExpansionModule = /** @class */ (function () {\n    function MatExpansionModule() {\n    }\n    return MatExpansionModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatExpansionModule, _CdkAccordion, MatAccordion, _CdkAccordionItem, EXPANSION_PANEL_ANIMATION_TIMING, MatExpansionPanelBase, _MatExpansionPanelMixinBase, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelDescription, MatExpansionPanelTitle };\n//# sourceMappingURL=expansion.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport '@angular/core';\nimport { MatLineSetter } from '@angular/material/core';\nimport { __extends } from 'tslib';\nimport * as tslib_1 from 'tslib';\nimport '@angular/cdk/bidi';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Converts values into strings. Falsy values become empty strings.\n * \\@docs-private\n * @param {?} value\n * @return {?}\n */\nfunction coerceToString(value) {\n    return \"\" + (value || '');\n}\n/**\n * Converts a value that might be a string into a number.\n * \\@docs-private\n * @param {?} value\n * @return {?}\n */\nfunction coerceToNumber(value) {\n    return typeof value === 'string' ? parseInt(value, 10) : value;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatGridTile = /** @class */ (function () {\n    function MatGridTile(_renderer, _element) {\n        this._renderer = _renderer;\n        this._element = _element;\n    }\n    Object.defineProperty(MatGridTile.prototype, \"rowspan\", {\n        get: /**\n         * Amount of rows that the grid tile takes up.\n         * @return {?}\n         */\n        function () { return this._rowspan; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._rowspan = coerceToNumber(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatGridTile.prototype, \"colspan\", {\n        get: /**\n         * Amount of columns that the grid tile takes up.\n         * @return {?}\n         */\n        function () { return this._colspan; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._colspan = coerceToNumber(value); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     */\n    /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    MatGridTile.prototype._setStyle = /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     * @param {?} property\n     * @param {?} value\n     * @return {?}\n     */\n    function (property, value) {\n        this._renderer.setStyle(this._element.nativeElement, property, value);\n    };\n    return MatGridTile;\n}());\nvar MatGridTileText = /** @class */ (function () {\n    function MatGridTileText(_renderer, _element) {\n        this._renderer = _renderer;\n        this._element = _element;\n    }\n    /**\n     * @return {?}\n     */\n    MatGridTileText.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        this._lineSetter = new MatLineSetter(this._lines, this._renderer, this._element);\n    };\n    return MatGridTileText;\n}());\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MatGridAvatarCssMatStyler = /** @class */ (function () {\n    function MatGridAvatarCssMatStyler() {\n    }\n    return MatGridAvatarCssMatStyler;\n}());\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MatGridTileHeaderCssMatStyler = /** @class */ (function () {\n    function MatGridTileHeaderCssMatStyler() {\n    }\n    return MatGridTileHeaderCssMatStyler;\n}());\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MatGridTileFooterCssMatStyler = /** @class */ (function () {\n    function MatGridTileFooterCssMatStyler() {\n    }\n    return MatGridTileFooterCssMatStyler;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * \\@docs-private\n */\nvar TileCoordinator = /** @class */ (function () {\n    function TileCoordinator(numColumns, tiles) {\n        var _this = this;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map(function (tile) { return _this._trackTile(tile); });\n    }\n    Object.defineProperty(TileCoordinator.prototype, \"rowCount\", {\n        /** Gets the total number of rows occupied by tiles */\n        get: /**\n         * Gets the total number of rows occupied by tiles\n         * @return {?}\n         */\n        function () { return this.rowIndex + 1; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TileCoordinator.prototype, \"rowspan\", {\n        /** Gets the total span of rows occupied by tiles.\n         * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2. */\n        get: /**\n         * Gets the total span of rows occupied by tiles.\n         * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ lastRowMax = Math.max.apply(Math, this.tracker);\n            // if any of the tiles has a rowspan that pushes it beyond the total row count,\n            // add the difference to the rowcount\n            return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Calculates the row and col position of a tile.\n     * @param {?} tile\n     * @return {?}\n     */\n    TileCoordinator.prototype._trackTile = /**\n     * Calculates the row and col position of a tile.\n     * @param {?} tile\n     * @return {?}\n     */\n    function (tile) {\n        // Find a gap large enough for this tile.\n        var /** @type {?} */ gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    };\n    /**\n     * Finds the next available space large enough to fit the tile.\n     * @param {?} tileCols\n     * @return {?}\n     */\n    TileCoordinator.prototype._findMatchingGap = /**\n     * Finds the next available space large enough to fit the tile.\n     * @param {?} tileCols\n     * @return {?}\n     */\n    function (tileCols) {\n        if (tileCols > this.tracker.length) {\n            throw Error(\"mat-grid-list: tile with colspan \" + tileCols + \" is wider than \" +\n                (\"grid with cols=\\\"\" + this.tracker.length + \"\\\".\"));\n        }\n        // Start index is inclusive, end index is exclusive.\n        var /** @type {?} */ gapStartIndex = -1;\n        var /** @type {?} */ gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n            // Continue iterating until we find a gap wide enough for this tile.\n        } while (gapEndIndex - gapStartIndex < tileCols);\n        return gapStartIndex;\n    };\n    /**\n     * Move \"down\" to the next row.\n     * @return {?}\n     */\n    TileCoordinator.prototype._nextRow = /**\n     * Move \"down\" to the next row.\n     * @return {?}\n     */\n    function () {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (var /** @type {?} */ i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    };\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     * @param {?} gapStartIndex\n     * @return {?}\n     */\n    TileCoordinator.prototype._findGapEndIndex = /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     * @param {?} gapStartIndex\n     * @return {?}\n     */\n    function (gapStartIndex) {\n        for (var /** @type {?} */ i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    };\n    /**\n     * Update the tile tracker to account for the given tile in the given space.\n     * @param {?} start\n     * @param {?} tile\n     * @return {?}\n     */\n    TileCoordinator.prototype._markTilePosition = /**\n     * Update the tile tracker to account for the given tile in the given space.\n     * @param {?} start\n     * @param {?} tile\n     * @return {?}\n     */\n    function (start, tile) {\n        for (var /** @type {?} */ i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    };\n    return TileCoordinator;\n}());\n/**\n * Simple data structure for tile position (row, col).\n * \\@docs-private\n */\nvar TilePosition = /** @class */ (function () {\n    function TilePosition(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n    return TilePosition;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * \\@docs-private\n * @abstract\n */\nvar TileStyler = /** @class */ (function () {\n    function TileStyler() {\n    }\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param gutterSize Size of the grid's gutter.\n     * @param tracker Instance of the TileCoordinator.\n     * @param cols Amount of columns in the grid.\n     * @param direction Layout direction of the grid.\n     */\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param {?} gutterSize Size of the grid's gutter.\n     * @param {?} tracker Instance of the TileCoordinator.\n     * @param {?} cols Amount of columns in the grid.\n     * @param {?} direction Layout direction of the grid.\n     * @return {?}\n     */\n    TileStyler.prototype.init = /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param {?} gutterSize Size of the grid's gutter.\n     * @param {?} tracker Instance of the TileCoordinator.\n     * @param {?} cols Amount of columns in the grid.\n     * @param {?} direction Layout direction of the grid.\n     * @return {?}\n     */\n    function (gutterSize, tracker, cols, direction) {\n        this._gutterSize = normalizeUnits(gutterSize);\n        this._rows = tracker.rowCount;\n        this._rowspan = tracker.rowspan;\n        this._cols = cols;\n        this._direction = direction;\n    };\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param {?} sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param {?} gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return {?} The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    TileStyler.prototype.getBaseTileSize = /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param {?} sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param {?} gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return {?} The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    function (sizePercent, gutterFraction) {\n        // Take the base size percent (as would be if evenly dividing the size between cells),\n        // and then subtracting the size of one gutter. However, since there are no gutters on the\n        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n        // edge evenly among the cells).\n        return \"(\" + sizePercent + \"% - (\" + this._gutterSize + \" * \" + gutterFraction + \"))\";\n    };\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param offset Number of tiles that have already been rendered in the row/column.\n     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @return Position of the tile as a CSS calc() expression.\n     */\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} offset Number of tiles that have already been rendered in the row/column.\n     * @return {?} Position of the tile as a CSS calc() expression.\n     */\n    TileStyler.prototype.getTilePosition = /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} offset Number of tiles that have already been rendered in the row/column.\n     * @return {?} Position of the tile as a CSS calc() expression.\n     */\n    function (baseSize, offset) {\n        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n        // row/column (offset).\n        return offset === 0 ? '0' : calc(\"(\" + baseSize + \" + \" + this._gutterSize + \") * \" + offset);\n    };\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param span The tile's rowspan or colspan.\n     * @return Size of the tile as a CSS calc() expression.\n     */\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} span The tile's rowspan or colspan.\n     * @return {?} Size of the tile as a CSS calc() expression.\n     */\n    TileStyler.prototype.getTileSize = /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param {?} span The tile's rowspan or colspan.\n     * @return {?} Size of the tile as a CSS calc() expression.\n     */\n    function (baseSize, span) {\n        return \"(\" + baseSize + \" * \" + span + \") + (\" + (span - 1) + \" * \" + this._gutterSize + \")\";\n    };\n    /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param tile Tile to which to apply the styling.\n     * @param rowIndex Index of the tile's row.\n     * @param colIndex Index of the tile's column.\n     */\n    /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param {?} tile Tile to which to apply the styling.\n     * @param {?} rowIndex Index of the tile's row.\n     * @param {?} colIndex Index of the tile's column.\n     * @return {?}\n     */\n    TileStyler.prototype.setStyle = /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param {?} tile Tile to which to apply the styling.\n     * @param {?} rowIndex Index of the tile's row.\n     * @param {?} colIndex Index of the tile's column.\n     * @return {?}\n     */\n    function (tile, rowIndex, colIndex) {\n        // Percent of the available horizontal space that one column takes up.\n        var /** @type {?} */ percentWidthPerTile = 100 / this._cols;\n        // Fraction of the vertical gutter size that each column takes up.\n        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n        var /** @type {?} */ gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    };\n    /** Sets the horizontal placement of the tile in the list. */\n    /**\n     * Sets the horizontal placement of the tile in the list.\n     * @param {?} tile\n     * @param {?} colIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    TileStyler.prototype.setColStyles = /**\n     * Sets the horizontal placement of the tile in the list.\n     * @param {?} tile\n     * @param {?} colIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    function (tile, colIndex, percentWidth, gutterWidth) {\n        // Base horizontal size of a column.\n        var /** @type {?} */ baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n        // The width and horizontal position of each tile is always calculated the same way, but the\n        // height and vertical position depends on the rowMode.\n        var /** @type {?} */ side = this._direction === 'ltr' ? 'left' : 'right';\n        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n    };\n    /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     */\n    /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     * @return {?}\n     */\n    TileStyler.prototype.getGutterSpan = /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     * @return {?}\n     */\n    function () {\n        return this._gutterSize + \" * (\" + this._rowspan + \" - 1)\";\n    };\n    /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param tileHeight Height of the tile.\n     */\n    /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param {?} tileHeight Height of the tile.\n     * @return {?}\n     */\n    TileStyler.prototype.getTileSpan = /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param {?} tileHeight Height of the tile.\n     * @return {?}\n     */\n    function (tileHeight) {\n        return this._rowspan + \" * \" + this.getTileSize(tileHeight, 1);\n    };\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method can be implemented by each type of TileStyler.\n     * @docs-private\n     */\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method can be implemented by each type of TileStyler.\n     * \\@docs-private\n     * @return {?}\n     */\n    TileStyler.prototype.getComputedHeight = /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method can be implemented by each type of TileStyler.\n     * \\@docs-private\n     * @return {?}\n     */\n    function () { return null; };\n    return TileStyler;\n}());\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example <mat-grid-list cols=\"3\" rowHeight=\"100px\">\n * \\@docs-private\n */\nvar FixedTileStyler = /** @class */ (function (_super) {\n    __extends(FixedTileStyler, _super);\n    function FixedTileStyler(fixedRowHeight) {\n        var _this = _super.call(this) || this;\n        _this.fixedRowHeight = fixedRowHeight;\n        return _this;\n    }\n    /**\n     * @param {?} gutterSize\n     * @param {?} tracker\n     * @param {?} cols\n     * @param {?} direction\n     * @return {?}\n     */\n    FixedTileStyler.prototype.init = /**\n     * @param {?} gutterSize\n     * @param {?} tracker\n     * @param {?} cols\n     * @param {?} direction\n     * @return {?}\n     */\n    function (gutterSize, tracker, cols, direction) {\n        _super.prototype.init.call(this, gutterSize, tracker, cols, direction);\n        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n    };\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    FixedTileStyler.prototype.setRowStyles = /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    function (tile, rowIndex) {\n        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n    };\n    /**\n     * @return {?}\n     */\n    FixedTileStyler.prototype.getComputedHeight = /**\n     * @return {?}\n     */\n    function () {\n        return [\n            'height', calc(this.getTileSpan(this.fixedRowHeight) + \" + \" + this.getGutterSpan())\n        ];\n    };\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    FixedTileStyler.prototype.reset = /**\n     * @param {?} list\n     * @return {?}\n     */\n    function (list) {\n        list._setListStyle(['height', null]);\n        list._tiles.forEach(function (tile) {\n            tile._setStyle('top', null);\n            tile._setStyle('height', null);\n        });\n    };\n    return FixedTileStyler;\n}(TileStyler));\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example <mat-grid-list cols=\"3\" rowHeight=\"3:1\">\n * \\@docs-private\n */\nvar RatioTileStyler = /** @class */ (function (_super) {\n    __extends(RatioTileStyler, _super);\n    function RatioTileStyler(value) {\n        var _this = _super.call(this) || this;\n        _this._parseRatio(value);\n        return _this;\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    RatioTileStyler.prototype.setRowStyles = /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @param {?} percentWidth\n     * @param {?} gutterWidth\n     * @return {?}\n     */\n    function (tile, rowIndex, percentWidth, gutterWidth) {\n        var /** @type {?} */ percentHeightPerTile = percentWidth / this.rowHeightRatio;\n        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n        // Use padding-top and margin-top to maintain the given aspect ratio, as\n        // a percentage-based value for these properties is applied versus the *width* of the\n        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n        tile._setStyle('margin-top', this.getTilePosition(this.baseTileHeight, rowIndex));\n        tile._setStyle('padding-top', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n    };\n    /**\n     * @return {?}\n     */\n    RatioTileStyler.prototype.getComputedHeight = /**\n     * @return {?}\n     */\n    function () {\n        return [\n            'padding-bottom', calc(this.getTileSpan(this.baseTileHeight) + \" + \" + this.getGutterSpan())\n        ];\n    };\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    RatioTileStyler.prototype.reset = /**\n     * @param {?} list\n     * @return {?}\n     */\n    function (list) {\n        list._setListStyle(['padding-bottom', null]);\n        list._tiles.forEach(function (tile) {\n            tile._setStyle('margin-top', null);\n            tile._setStyle('padding-top', null);\n        });\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    RatioTileStyler.prototype._parseRatio = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ ratioParts = value.split(':');\n        if (ratioParts.length !== 2) {\n            throw Error(\"mat-grid-list: invalid ratio given for row-height: \\\"\" + value + \"\\\"\");\n        }\n        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n    };\n    return RatioTileStyler;\n}(TileStyler));\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example <mat-grid-list cols=\"3\" rowHeight=\"fit\">\n *\n * \\@docs-private\n */\nvar FitTileStyler = /** @class */ (function (_super) {\n    __extends(FitTileStyler, _super);\n    function FitTileStyler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    FitTileStyler.prototype.setRowStyles = /**\n     * @param {?} tile\n     * @param {?} rowIndex\n     * @return {?}\n     */\n    function (tile, rowIndex) {\n        // Percent of the available vertical space that one row takes up.\n        var /** @type {?} */ percentHeightPerTile = 100 / this._rowspan;\n        // Fraction of the horizontal gutter size that each column takes up.\n        var /** @type {?} */ gutterHeightPerTile = (this._rows - 1) / this._rows;\n        // Base vertical size of a column.\n        var /** @type {?} */ baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n    };\n    /**\n     * @param {?} list\n     * @return {?}\n     */\n    FitTileStyler.prototype.reset = /**\n     * @param {?} list\n     * @return {?}\n     */\n    function (list) {\n        list._tiles.forEach(function (tile) {\n            tile._setStyle('top', null);\n            tile._setStyle('height', null);\n        });\n    };\n    return FitTileStyler;\n}(TileStyler));\n/**\n * Wraps a CSS string in a calc function\n * @param {?} exp\n * @return {?}\n */\nfunction calc(exp) { return \"calc(\" + exp + \")\"; }\n/**\n * Appends pixels to a CSS string if no units are given.\n * @param {?} value\n * @return {?}\n */\nfunction normalizeUnits(value) {\n    return (value.match(/px|em|rem/)) ? value : value + 'px';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\nvar MAT_FIT_MODE = 'fit';\nvar MatGridList = /** @class */ (function () {\n    function MatGridList(_renderer, _element, _dir) {\n        this._renderer = _renderer;\n        this._element = _element;\n        this._dir = _dir;\n    }\n    Object.defineProperty(MatGridList.prototype, \"cols\", {\n        get: /**\n         * Amount of columns in the grid list.\n         * @return {?}\n         */\n        function () { return this._cols; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._cols = coerceToNumber(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatGridList.prototype, \"gutterSize\", {\n        get: /**\n         * Size of the grid list's gutter in pixels.\n         * @return {?}\n         */\n        function () { return this._gutter; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._gutter = coerceToString(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatGridList.prototype, \"rowHeight\", {\n        set: /**\n         * Set internal representation of row height from the user-provided value.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            var /** @type {?} */ newValue = coerceToString(value);\n            if (newValue !== this._rowHeight) {\n                this._rowHeight = newValue;\n                this._setTileStyler(this._rowHeight);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatGridList.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._checkCols();\n        this._checkRowHeight();\n    };\n    /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     */\n    /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     * @return {?}\n     */\n    MatGridList.prototype.ngAfterContentChecked = /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     * @return {?}\n     */\n    function () {\n        this._layoutTiles();\n    };\n    /**\n     * Throw a friendly error if cols property is missing\n     * @return {?}\n     */\n    MatGridList.prototype._checkCols = /**\n     * Throw a friendly error if cols property is missing\n     * @return {?}\n     */\n    function () {\n        if (!this.cols) {\n            throw Error(\"mat-grid-list: must pass in number of columns. \" +\n                \"Example: <mat-grid-list cols=\\\"3\\\">\");\n        }\n    };\n    /**\n     * Default to equal width:height if rowHeight property is missing\n     * @return {?}\n     */\n    MatGridList.prototype._checkRowHeight = /**\n     * Default to equal width:height if rowHeight property is missing\n     * @return {?}\n     */\n    function () {\n        if (!this._rowHeight) {\n            this._setTileStyler('1:1');\n        }\n    };\n    /**\n     * Creates correct Tile Styler subtype based on rowHeight passed in by user\n     * @param {?} rowHeight\n     * @return {?}\n     */\n    MatGridList.prototype._setTileStyler = /**\n     * Creates correct Tile Styler subtype based on rowHeight passed in by user\n     * @param {?} rowHeight\n     * @return {?}\n     */\n    function (rowHeight) {\n        if (this._tileStyler) {\n            this._tileStyler.reset(this);\n        }\n        if (rowHeight === MAT_FIT_MODE) {\n            this._tileStyler = new FitTileStyler();\n        }\n        else if (rowHeight && rowHeight.indexOf(':') > -1) {\n            this._tileStyler = new RatioTileStyler(rowHeight);\n        }\n        else {\n            this._tileStyler = new FixedTileStyler(rowHeight);\n        }\n    };\n    /**\n     * Computes and applies the size and position for all children grid tiles.\n     * @return {?}\n     */\n    MatGridList.prototype._layoutTiles = /**\n     * Computes and applies the size and position for all children grid tiles.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ tracker = new TileCoordinator(this.cols, this._tiles);\n        var /** @type {?} */ direction = this._dir ? this._dir.value : 'ltr';\n        this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n        this._tiles.forEach(function (tile, index) {\n            var /** @type {?} */ pos = tracker.positions[index];\n            _this._tileStyler.setStyle(tile, pos.row, pos.col);\n        });\n        this._setListStyle(this._tileStyler.getComputedHeight());\n    };\n    /** Sets style on the main grid-list element, given the style name and value. */\n    /**\n     * Sets style on the main grid-list element, given the style name and value.\n     * @param {?} style\n     * @return {?}\n     */\n    MatGridList.prototype._setListStyle = /**\n     * Sets style on the main grid-list element, given the style name and value.\n     * @param {?} style\n     * @return {?}\n     */\n    function (style) {\n        if (style) {\n            this._renderer.setStyle(this._element.nativeElement, style[0], style[1]);\n        }\n    };\n    return MatGridList;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatGridListModule = /** @class */ (function () {\n    function MatGridListModule() {\n    }\n    return MatGridListModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatGridListModule, MatGridList, MatGridTile, MatGridTileText, MatGridAvatarCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileFooterCssMatStyler };\n//# sourceMappingURL=grid-list.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport '@angular/common';\nimport '@angular/core';\nimport { MatLineSetter, mixinDisableRipple, mixinDisabled, mixinTabIndex } from '@angular/material/core';\nimport { __extends } from 'tslib';\nimport * as tslib_1 from 'tslib';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport '@angular/cdk/collections';\nimport { SPACE } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n */\nvar MatListBase = /** @class */ (function () {\n    function MatListBase() {\n    }\n    return MatListBase;\n}());\nvar _MatListMixinBase = mixinDisableRipple(MatListBase);\n/**\n * \\@docs-private\n */\nvar MatListItemBase = /** @class */ (function () {\n    function MatListItemBase() {\n    }\n    return MatListItemBase;\n}());\nvar _MatListItemMixinBase = mixinDisableRipple(MatListItemBase);\n/**\n * Divider between items within a list.\n */\nvar MatListDivider = /** @class */ (function () {\n    function MatListDivider() {\n    }\n    return MatListDivider;\n}());\n/**\n * A Material Design list component.\n */\nvar MatList = /** @class */ (function (_super) {\n    __extends(MatList, _super);\n    function MatList() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MatList;\n}(_MatListMixinBase));\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MatListCssMatStyler = /** @class */ (function () {\n    function MatListCssMatStyler() {\n    }\n    return MatListCssMatStyler;\n}());\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MatNavListCssMatStyler = /** @class */ (function () {\n    function MatNavListCssMatStyler() {\n    }\n    return MatNavListCssMatStyler;\n}());\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MatDividerCssMatStyler = /** @class */ (function () {\n    function MatDividerCssMatStyler() {\n    }\n    return MatDividerCssMatStyler;\n}());\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MatListAvatarCssMatStyler = /** @class */ (function () {\n    function MatListAvatarCssMatStyler() {\n    }\n    return MatListAvatarCssMatStyler;\n}());\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MatListIconCssMatStyler = /** @class */ (function () {\n    function MatListIconCssMatStyler() {\n    }\n    return MatListIconCssMatStyler;\n}());\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nvar MatListSubheaderCssMatStyler = /** @class */ (function () {\n    function MatListSubheaderCssMatStyler() {\n    }\n    return MatListSubheaderCssMatStyler;\n}());\n/**\n * An item within a Material Design list.\n */\nvar MatListItem = /** @class */ (function (_super) {\n    __extends(MatListItem, _super);\n    function MatListItem(_renderer, _element, _list, navList) {\n        var _this = _super.call(this) || this;\n        _this._renderer = _renderer;\n        _this._element = _element;\n        _this._list = _list;\n        _this._isNavList = !!navList;\n        return _this;\n    }\n    Object.defineProperty(MatListItem.prototype, \"_hasAvatar\", {\n        set: /**\n         * @param {?} avatar\n         * @return {?}\n         */\n        function (avatar) {\n            if (avatar != null) {\n                this._renderer.addClass(this._element.nativeElement, 'mat-list-item-avatar');\n            }\n            else {\n                this._renderer.removeClass(this._element.nativeElement, 'mat-list-item-avatar');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatListItem.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        this._lineSetter = new MatLineSetter(this._lines, this._renderer, this._element);\n    };\n    /** Whether this list item should show a ripple effect when clicked.  */\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    MatListItem.prototype._isRippleDisabled = /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    function () {\n        return !this._isNavList || this.disableRipple || this._list.disableRipple;\n    };\n    /**\n     * @return {?}\n     */\n    MatListItem.prototype._handleFocus = /**\n     * @return {?}\n     */\n    function () {\n        this._renderer.addClass(this._element.nativeElement, 'mat-list-item-focus');\n    };\n    /**\n     * @return {?}\n     */\n    MatListItem.prototype._handleBlur = /**\n     * @return {?}\n     */\n    function () {\n        this._renderer.removeClass(this._element.nativeElement, 'mat-list-item-focus');\n    };\n    /** Retrieves the DOM element of the component host. */\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    MatListItem.prototype._getHostElement = /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    function () {\n        return this._element.nativeElement;\n    };\n    return MatListItem;\n}(_MatListItemMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n */\nvar MatSelectionListBase = /** @class */ (function () {\n    function MatSelectionListBase() {\n    }\n    return MatSelectionListBase;\n}());\nvar _MatSelectionListMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatSelectionListBase)));\n/**\n * \\@docs-private\n */\nvar MatListOptionBase = /** @class */ (function () {\n    function MatListOptionBase() {\n    }\n    return MatListOptionBase;\n}());\nvar _MatListOptionMixinBase = mixinDisableRipple(MatListOptionBase);\n/**\n * Change event object emitted by MatListOption\n */\nvar MatListOptionChange = /** @class */ (function () {\n    function MatListOptionChange() {\n    }\n    return MatListOptionChange;\n}());\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nvar MatListOption = /** @class */ (function (_super) {\n    __extends(MatListOption, _super);\n    function MatListOption(_renderer, _element, _changeDetector, selectionList) {\n        var _this = _super.call(this) || this;\n        _this._renderer = _renderer;\n        _this._element = _element;\n        _this._changeDetector = _changeDetector;\n        _this.selectionList = selectionList;\n        return _this;\n    }\n    Object.defineProperty(MatListOption.prototype, \"disabled\", {\n        get: /**\n         * Whether the option is disabled.\n         * @return {?}\n         */\n        function () {\n            return (this.selectionList && this.selectionList.disabled) || this._disabled;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._disabled = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatListOption.prototype, \"selected\", {\n        get: /**\n         * Whether the option is selected.\n         * @return {?}\n         */\n        function () { return this.selectionList.selectedOptions.isSelected(this); },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            var /** @type {?} */ isSelected = coerceBooleanProperty(value);\n            if (isSelected !== this.selected) {\n                this.selectionList.selectedOptions.toggle(this);\n                this._changeDetector.markForCheck();\n                this.selectionChange.emit(this._createChangeEvent());\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatListOption.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        if (this.selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatListOption.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        this._lineSetter = new MatLineSetter(this._lines, this._renderer, this._element);\n    };\n    /**\n     * @return {?}\n     */\n    MatListOption.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.selectionList._removeOptionFromList(this);\n    };\n    /** Toggles the selection state of the option. */\n    /**\n     * Toggles the selection state of the option.\n     * @return {?}\n     */\n    MatListOption.prototype.toggle = /**\n     * Toggles the selection state of the option.\n     * @return {?}\n     */\n    function () {\n        this.selected = !this.selected;\n    };\n    /** Allows for programmatic focusing of the option. */\n    /**\n     * Allows for programmatic focusing of the option.\n     * @return {?}\n     */\n    MatListOption.prototype.focus = /**\n     * Allows for programmatic focusing of the option.\n     * @return {?}\n     */\n    function () {\n        this._element.nativeElement.focus();\n    };\n    /** Whether this list item should show a ripple effect when clicked.  */\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    MatListOption.prototype._isRippleDisabled = /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    function () {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    };\n    /**\n     * @return {?}\n     */\n    MatListOption.prototype._handleClick = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.disabled) {\n            this.toggle();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatListOption.prototype._handleFocus = /**\n     * @return {?}\n     */\n    function () {\n        this._hasFocus = true;\n        this.selectionList._setFocusedOption(this);\n    };\n    /**\n     * Creates a selection event object from the specified option.\n     * @param {?=} option\n     * @return {?}\n     */\n    MatListOption.prototype._createChangeEvent = /**\n     * Creates a selection event object from the specified option.\n     * @param {?=} option\n     * @return {?}\n     */\n    function (option) {\n        if (option === void 0) { option = this; }\n        var /** @type {?} */ event = new MatListOptionChange();\n        event.source = option;\n        event.selected = option.selected;\n        return event;\n    };\n    /** Retrieves the DOM element of the component host. */\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    MatListOption.prototype._getHostElement = /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    function () {\n        return this._element.nativeElement;\n    };\n    return MatListOption;\n}(_MatListOptionMixinBase));\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nvar MatSelectionList = /** @class */ (function (_super) {\n    __extends(MatSelectionList, _super);\n    function MatSelectionList(_element, tabIndex) {\n        var _this = _super.call(this) || this;\n        _this._element = _element;\n        _this.tabIndex = parseInt(tabIndex) || 0;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    MatSelectionList.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        this._keyManager = new FocusKeyManager(this.options).withWrap();\n    };\n    /** Focus the selection-list. */\n    /**\n     * Focus the selection-list.\n     * @return {?}\n     */\n    MatSelectionList.prototype.focus = /**\n     * Focus the selection-list.\n     * @return {?}\n     */\n    function () {\n        this._element.nativeElement.focus();\n    };\n    /** Selects all of the options. */\n    /**\n     * Selects all of the options.\n     * @return {?}\n     */\n    MatSelectionList.prototype.selectAll = /**\n     * Selects all of the options.\n     * @return {?}\n     */\n    function () {\n        this.options.forEach(function (option) {\n            if (!option.selected) {\n                option.toggle();\n            }\n        });\n    };\n    /** Deselects all of the options. */\n    /**\n     * Deselects all of the options.\n     * @return {?}\n     */\n    MatSelectionList.prototype.deselectAll = /**\n     * Deselects all of the options.\n     * @return {?}\n     */\n    function () {\n        this.options.forEach(function (option) {\n            if (option.selected) {\n                option.toggle();\n            }\n        });\n    };\n    /** Sets the focused option of the selection-list. */\n    /**\n     * Sets the focused option of the selection-list.\n     * @param {?} option\n     * @return {?}\n     */\n    MatSelectionList.prototype._setFocusedOption = /**\n     * Sets the focused option of the selection-list.\n     * @param {?} option\n     * @return {?}\n     */\n    function (option) {\n        this._keyManager.updateActiveItemIndex(this._getOptionIndex(option));\n    };\n    /** Removes an option from the selection list and updates the active item. */\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @param {?} option\n     * @return {?}\n     */\n    MatSelectionList.prototype._removeOptionFromList = /**\n     * Removes an option from the selection list and updates the active item.\n     * @param {?} option\n     * @return {?}\n     */\n    function (option) {\n        if (option._hasFocus) {\n            var /** @type {?} */ optionIndex = this._getOptionIndex(option);\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    };\n    /** Passes relevant key presses to our key manager. */\n    /**\n     * Passes relevant key presses to our key manager.\n     * @param {?} event\n     * @return {?}\n     */\n    MatSelectionList.prototype._keydown = /**\n     * Passes relevant key presses to our key manager.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        switch (event.keyCode) {\n            case SPACE:\n                this._toggleSelectOnFocusedOption();\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    };\n    /**\n     * Toggles the selected state of the currently focused option.\n     * @return {?}\n     */\n    MatSelectionList.prototype._toggleSelectOnFocusedOption = /**\n     * Toggles the selected state of the currently focused option.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            var /** @type {?} */ focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption) {\n                focusedOption.toggle();\n            }\n        }\n    };\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of options.\n     */\n    MatSelectionList.prototype._isValidIndex = /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of options.\n     */\n    function (index) {\n        return index >= 0 && index < this.options.length;\n    };\n    /**\n     * Returns the index of the specified list option.\n     * @param {?} option\n     * @return {?}\n     */\n    MatSelectionList.prototype._getOptionIndex = /**\n     * Returns the index of the specified list option.\n     * @param {?} option\n     * @return {?}\n     */\n    function (option) {\n        return this.options.toArray().indexOf(option);\n    };\n    return MatSelectionList;\n}(_MatSelectionListMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatListModule = /** @class */ (function () {\n    function MatListModule() {\n    }\n    return MatListModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatListModule, MatListBase, _MatListMixinBase, MatListItemBase, _MatListItemMixinBase, MatListDivider, MatList, MatListCssMatStyler, MatNavListCssMatStyler, MatDividerCssMatStyler, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatListItem, MatSelectionListBase, _MatSelectionListMixinBase, MatListOptionBase, _MatListOptionMixinBase, MatListOptionChange, MatListOption, MatSelectionList };\n//# sourceMappingURL=list.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken } from '@angular/core';\nimport '@angular/common';\nimport { mixinDisabled } from '@angular/material/core';\nimport { Overlay, OverlayConfig } from '@angular/cdk/overlay';\nimport { FocusKeyManager, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { ESCAPE, LEFT_ARROW, RIGHT_ARROW } from '@angular/cdk/keycodes';\nimport { startWith } from 'rxjs/operators/startWith';\nimport { switchMap } from 'rxjs/operators/switchMap';\nimport { first } from 'rxjs/operators/first';\nimport { merge } from 'rxjs/observable/merge';\nimport 'rxjs/Subscription';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { __extends } from 'tslib';\nimport * as tslib_1 from 'tslib';\nimport 'rxjs/Subject';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport '@angular/cdk/bidi';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { filter } from 'rxjs/operators/filter';\nimport { of } from 'rxjs/observable/of';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * This animation controls the menu panel's entry and exit from the page.\n *\n * When the menu panel is added to the DOM, it scales in and fades in its border.\n *\n * When the menu panel is removed from the DOM, it simply fades out after a brief\n * delay to display the ripple.\n */\nvar transformMenu = trigger('transformMenu', [\n    state('void', style({\n        opacity: 0,\n        // This starts off from 0.01, instead of 0, because there's an issue in the Angular animations\n        // as of 4.2, which causes the animation to be skipped if it starts from 0.\n        transform: 'scale(0.01, 0.01)'\n    })),\n    state('enter-start', style({\n        opacity: 1,\n        transform: 'scale(1, 0.5)'\n    })),\n    state('enter', style({\n        transform: 'scale(1, 1)'\n    })),\n    transition('void => enter-start', animate('100ms linear')),\n    transition('enter-start => enter', animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\n    transition('* => void', animate('150ms 50ms linear', style({ opacity: 0 })))\n]);\n/**\n * This animation fades in the background color and content of the menu panel\n * after its containing element is scaled in.\n */\nvar fadeInItems = trigger('fadeInItems', [\n    state('showing', style({ opacity: 1 })),\n    transition('void => *', [\n        style({ opacity: 0 }),\n        animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n    ])\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuMissingError() {\n    throw Error(\"mat-menu-trigger: must pass in an mat-menu instance.\\n\\n    Example:\\n      <mat-menu #menu=\\\"matMenu\\\"></mat-menu>\\n      <button [matMenuTriggerFor]=\\\"menu\\\"></button>\");\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(\"x-position value must be either 'before' or after'.\\n      Example: <mat-menu x-position=\\\"before\\\" #menu=\\\"matMenu\\\"></mat-menu>\");\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(\"y-position value must be either 'above' or below'.\\n      Example: <mat-menu y-position=\\\"above\\\" #menu=\\\"matMenu\\\"></mat-menu>\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n */\nvar MatMenuItemBase = /** @class */ (function () {\n    function MatMenuItemBase() {\n    }\n    return MatMenuItemBase;\n}());\nvar _MatMenuItemMixinBase = mixinDisabled(MatMenuItemBase);\n/**\n * This directive is intended to be used inside an mat-menu tag.\n * It exists mostly to set the role attribute.\n */\nvar MatMenuItem = /** @class */ (function (_super) {\n    __extends(MatMenuItem, _super);\n    function MatMenuItem(_elementRef) {\n        var _this = _super.call(this) || this;\n        _this._elementRef = _elementRef;\n        return _this;\n    }\n    /** Focuses the menu item. */\n    /**\n     * Focuses the menu item.\n     * @return {?}\n     */\n    MatMenuItem.prototype.focus = /**\n     * Focuses the menu item.\n     * @return {?}\n     */\n    function () {\n        this._getHostElement().focus();\n    };\n    /**\n     * @return {?}\n     */\n    MatMenuItem.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._hovered.complete();\n    };\n    /** Used to set the `tabindex`. */\n    /**\n     * Used to set the `tabindex`.\n     * @return {?}\n     */\n    MatMenuItem.prototype._getTabIndex = /**\n     * Used to set the `tabindex`.\n     * @return {?}\n     */\n    function () {\n        return this.disabled ? '-1' : '0';\n    };\n    /** Returns the host DOM element. */\n    /**\n     * Returns the host DOM element.\n     * @return {?}\n     */\n    MatMenuItem.prototype._getHostElement = /**\n     * Returns the host DOM element.\n     * @return {?}\n     */\n    function () {\n        return this._elementRef.nativeElement;\n    };\n    /** Prevents the default element actions if it is disabled. */\n    /**\n     * Prevents the default element actions if it is disabled.\n     * @param {?} event\n     * @return {?}\n     */\n    MatMenuItem.prototype._checkDisabled = /**\n     * Prevents the default element actions if it is disabled.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n    /** Emits to the hover stream. */\n    /**\n     * Emits to the hover stream.\n     * @return {?}\n     */\n    MatMenuItem.prototype._emitHoverEvent = /**\n     * Emits to the hover stream.\n     * @return {?}\n     */\n    function () {\n        if (!this.disabled) {\n            this._hovered.next(this);\n        }\n    };\n    /** Gets the label to be used when determining whether the option should be focused. */\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    MatMenuItem.prototype.getLabel = /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ element = this._elementRef.nativeElement;\n        var /** @type {?} */ output = '';\n        if (element.childNodes) {\n            var /** @type {?} */ length_1 = element.childNodes.length;\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (var /** @type {?} */ i = 0; i < length_1; i++) {\n                if (element.childNodes[i].nodeType === Node.TEXT_NODE) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n        return output.trim();\n    };\n    return MatMenuItem;\n}(_MatMenuItemMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Default `mat-menu` options that can be overridden.\n * @record\n */\n\n/**\n * Injection token to be used to override the default options for `mat-menu`.\n */\nvar MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options');\n/**\n * Start elevation for the menu panel.\n * \\@docs-private\n */\nvar MAT_MENU_BASE_ELEVATION = 2;\nvar MatMenu = /** @class */ (function () {\n    function MatMenu(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n    }\n    Object.defineProperty(MatMenu.prototype, \"xPosition\", {\n        get: /**\n         * Position of the menu in the X axis.\n         * @return {?}\n         */\n        function () { return this._xPosition; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value !== 'before' && value !== 'after') {\n                throwMatMenuInvalidPositionX();\n            }\n            this._xPosition = value;\n            this.setPositionClasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatMenu.prototype, \"yPosition\", {\n        get: /**\n         * Position of the menu in the Y axis.\n         * @return {?}\n         */\n        function () { return this._yPosition; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value !== 'above' && value !== 'below') {\n                throwMatMenuInvalidPositionY();\n            }\n            this._yPosition = value;\n            this.setPositionClasses();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatMenu.prototype, \"overlapTrigger\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._overlapTrigger;\n        },\n        set: /**\n         * Whether the menu should overlap its trigger.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._overlapTrigger = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatMenu.prototype, \"panelClass\", {\n        set: /**\n         * This method takes classes set on the host mat-menu element and applies them on the\n         * menu template that displays in the overlay container.  Otherwise, it's difficult\n         * to style the containing menu from outside the component.\n         * @param {?} classes list of class names\n         * @return {?}\n         */\n        function (classes) {\n            if (classes && classes.length) {\n                this._classList = classes.split(' ').reduce(function (obj, className) {\n                    obj[className] = true;\n                    return obj;\n                }, {});\n                this._elementRef.nativeElement.className = '';\n                this.setPositionClasses();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatMenu.prototype, \"classList\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.panelClass; },\n        set: /**\n         * This method takes classes set on the host mat-menu element and applies them on the\n         * menu template that displays in the overlay container.  Otherwise, it's difficult\n         * to style the containing menu from outside the component.\n         * @deprecated Use `panelClass` instead.\n         * @param {?} classes\n         * @return {?}\n         */\n        function (classes) { this.panelClass = classes; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatMenu.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._keyManager = new FocusKeyManager(this.items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(function () { return _this.close.emit('keydown'); });\n    };\n    /**\n     * @return {?}\n     */\n    MatMenu.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._tabSubscription.unsubscribe();\n        this.closed.emit();\n        this.closed.complete();\n    };\n    /** Stream that emits whenever the hovered menu item changes. */\n    /**\n     * Stream that emits whenever the hovered menu item changes.\n     * @return {?}\n     */\n    MatMenu.prototype._hovered = /**\n     * Stream that emits whenever the hovered menu item changes.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.items) {\n            return this.items.changes.pipe(startWith(this.items), switchMap(function (items) { return merge.apply(void 0, items.map(function (item) { return item._hovered; })); }));\n        }\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(first(), switchMap(function () { return _this._hovered(); }));\n    };\n    /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n    /**\n     * Handle a keyboard event from the menu, delegating to the appropriate action.\n     * @param {?} event\n     * @return {?}\n     */\n    MatMenu.prototype._handleKeydown = /**\n     * Handle a keyboard event from the menu, delegating to the appropriate action.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        switch (event.keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                event.stopPropagation();\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    };\n    /**\n     * Focus the first item in the menu. This method is used by the menu trigger\n     * to focus the first item when the menu is opened by the ENTER key.\n     */\n    /**\n     * Focus the first item in the menu. This method is used by the menu trigger\n     * to focus the first item when the menu is opened by the ENTER key.\n     * @return {?}\n     */\n    MatMenu.prototype.focusFirstItem = /**\n     * Focus the first item in the menu. This method is used by the menu trigger\n     * to focus the first item when the menu is opened by the ENTER key.\n     * @return {?}\n     */\n    function () {\n        this._keyManager.setFirstItemActive();\n    };\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened by mouse,\n     * allowing the user to start from the first option when pressing the down arrow.\n     */\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened by mouse,\n     * allowing the user to start from the first option when pressing the down arrow.\n     * @return {?}\n     */\n    MatMenu.prototype.resetActiveItem = /**\n     * Resets the active item in the menu. This is used when the menu is opened by mouse,\n     * allowing the user to start from the first option when pressing the down arrow.\n     * @return {?}\n     */\n    function () {\n        this._keyManager.setActiveItem(-1);\n    };\n    /**\n     * It's necessary to set position-based classes to ensure the menu panel animation\n     * folds out from the correct direction.\n     */\n    /**\n     * It's necessary to set position-based classes to ensure the menu panel animation\n     * folds out from the correct direction.\n     * @param {?=} posX\n     * @param {?=} posY\n     * @return {?}\n     */\n    MatMenu.prototype.setPositionClasses = /**\n     * It's necessary to set position-based classes to ensure the menu panel animation\n     * folds out from the correct direction.\n     * @param {?=} posX\n     * @param {?=} posY\n     * @return {?}\n     */\n    function (posX, posY) {\n        if (posX === void 0) { posX = this.xPosition; }\n        if (posY === void 0) { posY = this.yPosition; }\n        this._classList['mat-menu-before'] = posX === 'before';\n        this._classList['mat-menu-after'] = posX === 'after';\n        this._classList['mat-menu-above'] = posY === 'above';\n        this._classList['mat-menu-below'] = posY === 'below';\n    };\n    /**\n     * Sets the menu panel elevation.\n     * @param depth Number of parent menus that come before the menu.\n     */\n    /**\n     * Sets the menu panel elevation.\n     * @param {?} depth Number of parent menus that come before the menu.\n     * @return {?}\n     */\n    MatMenu.prototype.setElevation = /**\n     * Sets the menu panel elevation.\n     * @param {?} depth Number of parent menus that come before the menu.\n     * @return {?}\n     */\n    function (depth) {\n        // The elevation starts at the base and increases by one for each level.\n        var /** @type {?} */ newElevation = \"mat-elevation-z\" + (MAT_MENU_BASE_ELEVATION + depth);\n        var /** @type {?} */ customElevation = Object.keys(this._classList).find(function (c) { return c.startsWith('mat-elevation-z'); });\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    };\n    /** Starts the enter animation. */\n    /**\n     * Starts the enter animation.\n     * @return {?}\n     */\n    MatMenu.prototype._startAnimation = /**\n     * Starts the enter animation.\n     * @return {?}\n     */\n    function () {\n        this._panelAnimationState = 'enter-start';\n    };\n    /** Resets the panel animation to its initial state. */\n    /**\n     * Resets the panel animation to its initial state.\n     * @return {?}\n     */\n    MatMenu.prototype._resetAnimation = /**\n     * Resets the panel animation to its initial state.\n     * @return {?}\n     */\n    function () {\n        this._panelAnimationState = 'void';\n    };\n    /** Callback that is invoked when the panel animation completes. */\n    /**\n     * Callback that is invoked when the panel animation completes.\n     * @param {?} event\n     * @return {?}\n     */\n    MatMenu.prototype._onAnimationDone = /**\n     * Callback that is invoked when the panel animation completes.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // After the initial expansion is done, trigger the second phase of the enter animation.\n        if (event.toState === 'enter-start') {\n            this._panelAnimationState = 'enter';\n        }\n    };\n    return MatMenu;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Injection token that determines the scroll handling while the menu is open.\n */\nvar MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return function () { return overlay.scrollStrategies.reposition(); };\n}\n/**\n * \\@docs-private\n */\nvar MAT_MENU_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Default top padding of the menu panel.\n */\nvar MENU_PANEL_TOP_PADDING = 8;\n/**\n * This directive is intended to be used in conjunction with an mat-menu tag.  It is\n * responsible for toggling the display of the provided menu instance.\n */\nvar MatMenuTrigger = /** @class */ (function () {\n    function MatMenuTrigger(_overlay, _element, _viewContainerRef, _scrollStrategy, _parentMenu, _menuItemInstance, _dir) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._scrollStrategy = _scrollStrategy;\n        this._parentMenu = _parentMenu;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n    }\n    Object.defineProperty(MatMenuTrigger.prototype, \"_deprecatedMatMenuTriggerFor\", {\n        get: /**\n         * @deprecated\n         * @return {?}\n         */\n        function () {\n            return this.menu;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this.menu = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatMenuTrigger.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._checkMenu();\n        this.menu.close.subscribe(function (reason) {\n            _this._destroyMenu();\n            // If a click closed the menu, we should close the entire chain of nested menus.\n            if (reason === 'click' && _this._parentMenu) {\n                _this._parentMenu.closed.emit(reason);\n            }\n        });\n        if (this.triggersSubmenu()) {\n            // Subscribe to changes in the hovered item in order to toggle the panel.\n            this._hoverSubscription = this._parentMenu._hovered()\n                .pipe(filter(function (active) { return active === _this._menuItemInstance; }))\n                .subscribe(function () {\n                _this._openedByMouse = true;\n                _this.openMenu();\n            });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatMenuTrigger.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._cleanUpSubscriptions();\n    };\n    Object.defineProperty(MatMenuTrigger.prototype, \"menuOpen\", {\n        /** Whether the menu is open. */\n        get: /**\n         * Whether the menu is open.\n         * @return {?}\n         */\n        function () {\n            return this._menuOpen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatMenuTrigger.prototype, \"dir\", {\n        /** The text direction of the containing app. */\n        get: /**\n         * The text direction of the containing app.\n         * @return {?}\n         */\n        function () {\n            return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Whether the menu triggers a sub-menu or a top-level one. */\n    /**\n     * Whether the menu triggers a sub-menu or a top-level one.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype.triggersSubmenu = /**\n     * Whether the menu triggers a sub-menu or a top-level one.\n     * @return {?}\n     */\n    function () {\n        return !!(this._menuItemInstance && this._parentMenu);\n    };\n    /** Toggles the menu between the open and closed states. */\n    /**\n     * Toggles the menu between the open and closed states.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype.toggleMenu = /**\n     * Toggles the menu between the open and closed states.\n     * @return {?}\n     */\n    function () {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    };\n    /** Opens the menu. */\n    /**\n     * Opens the menu.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype.openMenu = /**\n     * Opens the menu.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this._menuOpen) {\n            this._createOverlay().attach(this._portal);\n            this._closeSubscription = this._menuClosingActions().subscribe(function () {\n                _this.menu.close.emit();\n            });\n            this._initMenu();\n            if (this.menu instanceof MatMenu) {\n                this.menu._startAnimation();\n            }\n        }\n    };\n    /** Closes the menu. */\n    /**\n     * Closes the menu.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype.closeMenu = /**\n     * Closes the menu.\n     * @return {?}\n     */\n    function () {\n        this.menu.close.emit();\n    };\n    /** Focuses the menu trigger. */\n    /**\n     * Focuses the menu trigger.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype.focus = /**\n     * Focuses the menu trigger.\n     * @return {?}\n     */\n    function () {\n        this._element.nativeElement.focus();\n    };\n    /**\n     * Closes the menu and does the necessary cleanup.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._destroyMenu = /**\n     * Closes the menu and does the necessary cleanup.\n     * @return {?}\n     */\n    function () {\n        if (this._overlayRef && this.menuOpen) {\n            this._resetMenu();\n            this._overlayRef.detach();\n            this._closeSubscription.unsubscribe();\n            if (this.menu instanceof MatMenu) {\n                this.menu._resetAnimation();\n            }\n        }\n    };\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._initMenu = /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     * @return {?}\n     */\n    function () {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this._setIsMenuOpen(true);\n        // If the menu was opened by mouse, we focus the root node, which allows for the keyboard\n        // interactions to work. Otherwise, if the menu was opened by keyboard, we focus the first item.\n        if (this._openedByMouse) {\n            var /** @type {?} */ rootNode = /** @type {?} */ (((this._overlayRef)).overlayElement.firstElementChild);\n            if (rootNode) {\n                this.menu.resetActiveItem();\n                rootNode.focus();\n            }\n        }\n        else {\n            this.menu.focusFirstItem();\n        }\n    };\n    /**\n     * Updates the menu elevation based on the amount of parent menus that it has.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._setMenuElevation = /**\n     * Updates the menu elevation based on the amount of parent menus that it has.\n     * @return {?}\n     */\n    function () {\n        if (this.menu.setElevation) {\n            var /** @type {?} */ depth = 0;\n            var /** @type {?} */ parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    };\n    /**\n     * This method resets the menu when it's closed, most importantly restoring\n     * focus to the menu trigger if the menu was opened via the keyboard.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._resetMenu = /**\n     * This method resets the menu when it's closed, most importantly restoring\n     * focus to the menu trigger if the menu was opened via the keyboard.\n     * @return {?}\n     */\n    function () {\n        this._setIsMenuOpen(false);\n        // Focus only needs to be reset to the host element if the menu was opened\n        // by the keyboard and manually shifted to the first menu item.\n        if (!this._openedByMouse) {\n            this.focus();\n        }\n        this._openedByMouse = false;\n    };\n    /**\n     * @param {?} isOpen\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._setIsMenuOpen = /**\n     * @param {?} isOpen\n     * @return {?}\n     */\n    function (isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._highlighted = isOpen;\n        }\n    };\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._checkMenu = /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     * @return {?}\n     */\n    function () {\n        if (!this.menu) {\n            throwMatMenuMissingError();\n        }\n    };\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._createOverlay = /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     * @return {?}\n     */\n    function () {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n            var /** @type {?} */ config = this._getOverlayConfig();\n            this._subscribeToPositions(/** @type {?} */ (config.positionStrategy));\n            this._overlayRef = this._overlay.create(config);\n        }\n        return this._overlayRef;\n    };\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @return {?} OverlayConfig\n     */\n    MatMenuTrigger.prototype._getOverlayConfig = /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @return {?} OverlayConfig\n     */\n    function () {\n        return new OverlayConfig({\n            positionStrategy: this._getPosition(),\n            hasBackdrop: !this.triggersSubmenu(),\n            backdropClass: 'cdk-overlay-transparent-backdrop',\n            direction: this.dir,\n            scrollStrategy: this._scrollStrategy()\n        });\n    };\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     * @param {?} position\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._subscribeToPositions = /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        var _this = this;\n        this._positionSubscription = position.onPositionChange.subscribe(function (change) {\n            var /** @type {?} */ posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n            var /** @type {?} */ posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n            _this.menu.setPositionClasses(posX, posY);\n        });\n    };\n    /**\n     * This method builds the position strategy for the overlay, so the menu is properly connected\n     * to the trigger.\n     * @return {?} ConnectedPositionStrategy\n     */\n    MatMenuTrigger.prototype._getPosition = /**\n     * This method builds the position strategy for the overlay, so the menu is properly connected\n     * to the trigger.\n     * @return {?} ConnectedPositionStrategy\n     */\n    function () {\n        var _a = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'], originX = _a[0], originFallbackX = _a[1];\n        var _b = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'], overlayY = _b[0], overlayFallbackY = _b[1];\n        var _c = [overlayY, overlayFallbackY], originY = _c[0], originFallbackY = _c[1];\n        var _d = [originX, originFallbackX], overlayX = _d[0], overlayFallbackX = _d[1];\n        var /** @type {?} */ offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        return this._overlay.position()\n            .connectedTo(this._element, { originX: originX, originY: originY }, { overlayX: overlayX, overlayY: overlayY })\n            .withDirection(this.dir)\n            .withOffsetY(offsetY)\n            .withFallbackPosition({ originX: originFallbackX, originY: originY }, { overlayX: overlayFallbackX, overlayY: overlayY })\n            .withFallbackPosition({ originX: originX, originY: originFallbackY }, { overlayX: overlayX, overlayY: overlayFallbackY }, undefined, -offsetY)\n            .withFallbackPosition({ originX: originFallbackX, originY: originFallbackY }, { overlayX: overlayFallbackX, overlayY: overlayFallbackY }, undefined, -offsetY);\n    };\n    /**\n     * Cleans up the active subscriptions.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._cleanUpSubscriptions = /**\n     * Cleans up the active subscriptions.\n     * @return {?}\n     */\n    function () {\n        this._closeSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    };\n    /**\n     * Returns a stream that emits whenever an action that should close the menu occurs.\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._menuClosingActions = /**\n     * Returns a stream that emits whenever an action that should close the menu occurs.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ backdrop = /** @type {?} */ ((this._overlayRef)).backdropClick();\n        var /** @type {?} */ parentClose = this._parentMenu ? this._parentMenu.close : of();\n        var /** @type {?} */ hover = this._parentMenu ? this._parentMenu._hovered().pipe(filter(function (active) { return active !== _this._menuItemInstance; }), filter(function () { return _this._menuOpen; })) : of();\n        return merge(backdrop, parentClose, hover);\n    };\n    /** Handles mouse presses on the trigger. */\n    /**\n     * Handles mouse presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._handleMousedown = /**\n     * Handles mouse presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            this._openedByMouse = true;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    };\n    /** Handles key presses on the trigger. */\n    /**\n     * Handles key presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._handleKeydown = /**\n     * Handles key presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var /** @type {?} */ keyCode = event.keyCode;\n        if (this.triggersSubmenu() && ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this.openMenu();\n        }\n    };\n    /** Handles click events on the trigger. */\n    /**\n     * Handles click events on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    MatMenuTrigger.prototype._handleClick = /**\n     * Handles click events on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    };\n    return MatMenuTrigger;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatMenuModule = /** @class */ (function () {\n    function MatMenuModule() {\n    }\n    return MatMenuModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_SCROLL_STRATEGY, fadeInItems, transformMenu, MatMenuModule, MatMenu, MAT_MENU_DEFAULT_OPTIONS, MatMenuItem, MatMenuTrigger, MatMenuItemBase as ɵa12, _MatMenuItemMixinBase as ɵb12, MAT_MENU_SCROLL_STRATEGY_PROVIDER as ɵd12, MAT_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵc12 };\n//# sourceMappingURL=menu.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, isDevMode } from '@angular/core';\nimport '@angular/common';\nimport { __extends } from 'tslib';\nimport * as tslib_1 from 'tslib';\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, END, ENTER, HOME, SPACE, UP_ARROW } from '@angular/cdk/keycodes';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { filter } from 'rxjs/operators/filter';\nimport { first } from 'rxjs/operators/first';\nimport { map } from 'rxjs/operators/map';\nimport { startWith } from 'rxjs/operators/startWith';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\nimport '@angular/forms';\nimport { MatOption, mixinDisabled, mixinTabIndex } from '@angular/material/core';\nimport '@angular/material/form-field';\nimport 'rxjs/Observable';\nimport { merge } from 'rxjs/observable/merge';\nimport 'rxjs/Subject';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * This animation transforms the select's overlay panel on and off the page.\n *\n * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n * side to ensure the option text correctly overlaps the trigger text.\n *\n * When the panel is removed from the DOM, it simply fades out linearly.\n */\nvar transformPanel = trigger('transformPanel', [\n    state('showing', style({\n        opacity: 1,\n        minWidth: 'calc(100% + 32px)',\n        // 32px = 2 * 16px padding\n        transform: 'scaleY(1)'\n    })),\n    state('showing-multiple', style({\n        opacity: 1,\n        minWidth: 'calc(100% + 64px)',\n        // 64px = 48px padding on the left + 16px padding on the right\n        transform: 'scaleY(1)'\n    })),\n    transition('void => *', [\n        style({\n            opacity: 0,\n            minWidth: '100%',\n            transform: 'scaleY(0)'\n        }),\n        animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n    ]),\n    transition('* => void', [\n        animate('250ms 100ms linear', style({ opacity: 0 }))\n    ])\n]);\n/**\n * This animation fades in the background color and text content of the\n * select's options. It is time delayed to occur 100ms after the overlay\n * panel has transformed in.\n */\nvar fadeInContent = trigger('fadeInContent', [\n    state('showing', style({ opacity: 1 })),\n    transition('void => showing', [\n        style({ opacity: 0 }),\n        animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n    ])\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * The max height of the select's overlay panel\n */\nvar SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis\n */\nvar SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n */\nvar SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n */\nvar SELECT_ITEM_HEIGHT_EM = 3;\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * (SELECT_PANEL_PADDING_X * 1.5) + 20 = 44\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 20px.\n */\nvar SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 20;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nvar SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Injection token that determines the scroll handling while a select is open.\n */\nvar MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return function () { return overlay.scrollStrategies.reposition(); };\n}\n/**\n * \\@docs-private\n */\nvar MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nvar MatSelectChange = /** @class */ (function () {\n    function MatSelectChange(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n    return MatSelectChange;\n}());\n/**\n * \\@docs-private\n */\nvar MatSelectBase = /** @class */ (function () {\n    function MatSelectBase(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n    }\n    return MatSelectBase;\n}());\nvar _MatSelectMixinBase = mixinTabIndex(mixinDisabled(MatSelectBase));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nvar MatSelectTrigger = /** @class */ (function () {\n    function MatSelectTrigger() {\n    }\n    return MatSelectTrigger;\n}());\nvar MatSelect = /** @class */ (function (_super) {\n    __extends(MatSelect, _super);\n    function MatSelect(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, renderer, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, _scrollStrategyFactory) {\n        var _this = _super.call(this, renderer, elementRef) || this;\n        _this._viewportRuler = _viewportRuler;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._ngZone = _ngZone;\n        _this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        _this._dir = _dir;\n        _this._parentForm = _parentForm;\n        _this._parentFormGroup = _parentFormGroup;\n        _this._parentFormField = _parentFormField;\n        _this.ngControl = ngControl;\n        _this._scrollStrategyFactory = _scrollStrategyFactory;\n        if (_this.ngControl) {\n            _this.ngControl.valueAccessor = _this;\n        }\n        _this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        // Force setter to be called in case id was not specified.\n        _this.id = _this.id;\n        return _this;\n    }\n    Object.defineProperty(MatSelect.prototype, \"placeholder\", {\n        get: /**\n         * Placeholder to be shown if no value has been selected.\n         * @return {?}\n         */\n        function () { return this._placeholder; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._placeholder = value;\n            this.stateChanges.next();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"required\", {\n        get: /**\n         * Whether the component is required.\n         * @return {?}\n         */\n        function () { return this._required; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._required = coerceBooleanProperty(value);\n            this.stateChanges.next();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"multiple\", {\n        get: /**\n         * Whether the user should be allowed to select multiple options.\n         * @return {?}\n         */\n        function () { return this._multiple; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (this._selectionModel) {\n                throw getMatSelectDynamicMultipleError();\n            }\n            this._multiple = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"compareWith\", {\n        get: /**\n         * A function to compare the option values with the selected values. The first argument\n         * is a value from an option. The second is a value from the selection. A boolean\n         * should be returned.\n         * @return {?}\n         */\n        function () { return this._compareWith; },\n        set: /**\n         * @param {?} fn\n         * @return {?}\n         */\n        function (fn) {\n            if (typeof fn !== 'function') {\n                throw getMatSelectNonFunctionValueError();\n            }\n            this._compareWith = fn;\n            if (this._selectionModel) {\n                // A different comparator means the selection could change.\n                this._initializeSelection();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"value\", {\n        get: /**\n         * Value of the select control.\n         * @return {?}\n         */\n        function () { return this._value; },\n        set: /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        function (newValue) {\n            if (newValue !== this._value) {\n                this.writeValue(newValue);\n                this._value = newValue;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"disableRipple\", {\n        get: /**\n         * Whether ripples for all options in the select are disabled.\n         * @return {?}\n         */\n        function () { return this._disableRipple; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disableRipple = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"id\", {\n        get: /**\n         * Unique id of the element.\n         * @return {?}\n         */\n        function () { return this._id; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._id = value || this._uid;\n            this.stateChanges.next();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"optionSelectionChanges\", {\n        /** Combined stream of all of the child options' change events. */\n        get: /**\n         * Combined stream of all of the child options' change events.\n         * @return {?}\n         */\n        function () {\n            return merge.apply(void 0, this.options.map(function (option) { return option.onSelectionChange; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"_openedStream\", {\n        get: /**\n         * Event emitted when the select has been opened.\n         * @return {?}\n         */\n        function () {\n            return this.openedChange.pipe(filter(function (o) { return o; }), map(function () { }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"_closedStream\", {\n        get: /**\n         * Event emitted when the select has been closed.\n         * @return {?}\n         */\n        function () {\n            return this.openedChange.pipe(filter(function (o) { return !o; }), map(function () { }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatSelect.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n        this.stateChanges.next();\n    };\n    /**\n     * @return {?}\n     */\n    MatSelect.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._initKeyManager();\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(function () {\n            _this._resetOptions();\n            _this._initializeSelection();\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MatSelect.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (this.ngControl) {\n            this._updateErrorState();\n        }\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MatSelect.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes[\"disabled\"]) {\n            this.stateChanges.next();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatSelect.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._destroy.next();\n        this._destroy.complete();\n    };\n    /** Toggles the overlay panel open or closed. */\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    MatSelect.prototype.toggle = /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    function () {\n        this.panelOpen ? this.close() : this.open();\n    };\n    /** Opens the overlay panel. */\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    MatSelect.prototype.open = /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.disabled || !this.options || !this.options.length) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n        this._panelOpen = true;\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(first()).subscribe(function () {\n            if (_this._triggerFontSize && _this.overlayDir.overlayRef &&\n                _this.overlayDir.overlayRef.overlayElement) {\n                _this.overlayDir.overlayRef.overlayElement.style.fontSize = _this._triggerFontSize + \"px\";\n            }\n        });\n    };\n    /** Closes the overlay panel and focuses the host element. */\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    MatSelect.prototype.close = /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    function () {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._changeDetectorRef.markForCheck();\n            this.focus();\n        }\n    };\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    MatSelect.prototype.writeValue = /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    function (value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    };\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    MatSelect.prototype.registerOnChange = /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    function (fn) {\n        this._onChange = fn;\n    };\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    MatSelect.prototype.registerOnTouched = /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    function (fn) {\n        this._onTouched = fn;\n    };\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    MatSelect.prototype.setDisabledState = /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    function (isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    };\n    Object.defineProperty(MatSelect.prototype, \"panelOpen\", {\n        /** Whether or not the overlay panel is open. */\n        get: /**\n         * Whether or not the overlay panel is open.\n         * @return {?}\n         */\n        function () {\n            return this._panelOpen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"selected\", {\n        /** The currently selected option. */\n        get: /**\n         * The currently selected option.\n         * @return {?}\n         */\n        function () {\n            return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSelect.prototype, \"triggerValue\", {\n        /** The value displayed in the trigger. */\n        get: /**\n         * The value displayed in the trigger.\n         * @return {?}\n         */\n        function () {\n            if (this.empty) {\n                return '';\n            }\n            if (this._multiple) {\n                var /** @type {?} */ selectedOptions = this._selectionModel.selected.map(function (option) { return option.viewValue; });\n                if (this._isRtl()) {\n                    selectedOptions.reverse();\n                }\n                // TODO(crisbeto): delimiter should be configurable for proper localization.\n                return selectedOptions.join(', ');\n            }\n            return this._selectionModel.selected[0].viewValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Whether the element is in RTL mode. */\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    MatSelect.prototype._isRtl = /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    function () {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    };\n    /** Handles all keydown events on the select. */\n    /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    MatSelect.prototype._handleKeydown = /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    };\n    /**\n     * Handles keyboard events while the select is closed.\n     * @param {?} event\n     * @return {?}\n     */\n    MatSelect.prototype._handleClosedKeydown = /**\n     * Handles keyboard events while the select is closed.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var /** @type {?} */ keyCode = event.keyCode;\n        var /** @type {?} */ isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        var /** @type {?} */ isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        if (isOpenKey || (this.multiple && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            this._keyManager.onKeydown(event);\n        }\n    };\n    /**\n     * Handles keyboard events when the selected is open.\n     * @param {?} event\n     * @return {?}\n     */\n    MatSelect.prototype._handleOpenKeydown = /**\n     * Handles keyboard events when the selected is open.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var /** @type {?} */ keyCode = event.keyCode;\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? this._keyManager.setFirstItemActive() :\n                this._keyManager.setLastItemActive();\n        }\n        else if ((keyCode === ENTER || keyCode === SPACE) && this._keyManager.activeItem) {\n            event.preventDefault();\n            this._keyManager.activeItem._selectViaInteraction();\n        }\n        else {\n            this._keyManager.onKeydown(event);\n        }\n    };\n    /**\n     * When the panel element is finished transforming in (though not fading in), it\n     * emits an event and focuses an option if the panel is open.\n     */\n    /**\n     * When the panel element is finished transforming in (though not fading in), it\n     * emits an event and focuses an option if the panel is open.\n     * @return {?}\n     */\n    MatSelect.prototype._onPanelDone = /**\n     * When the panel element is finished transforming in (though not fading in), it\n     * emits an event and focuses an option if the panel is open.\n     * @return {?}\n     */\n    function () {\n        if (this.panelOpen) {\n            this._scrollTop = 0;\n            this.openedChange.emit(true);\n        }\n        else {\n            this.openedChange.emit(false);\n            this._panelDoneAnimating = false;\n            this.overlayDir.offsetX = 0;\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     * @return {?}\n     */\n    MatSelect.prototype._onFadeInDone = /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     * @return {?}\n     */\n    function () {\n        this._panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * @return {?}\n     */\n    MatSelect.prototype._onFocus = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.disabled) {\n            this.focused = true;\n            this.stateChanges.next();\n        }\n    };\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    MatSelect.prototype._onBlur = /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    function () {\n        if (!this.disabled && !this.panelOpen) {\n            this.focused = false;\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    };\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    MatSelect.prototype._onAttached = /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.overlayDir.positionChange.pipe(first()).subscribe(function () {\n            _this._changeDetectorRef.detectChanges();\n            _this._calculateOverlayOffsetX();\n            _this.panel.nativeElement.scrollTop = _this._scrollTop;\n        });\n    };\n    /** Returns the theme to be used on the panel. */\n    /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    MatSelect.prototype._getPanelTheme = /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    function () {\n        return this._parentFormField ? \"mat-\" + this._parentFormField.color : '';\n    };\n    Object.defineProperty(MatSelect.prototype, \"empty\", {\n        /** Whether the select has a value. */\n        get: /**\n         * Whether the select has a value.\n         * @return {?}\n         */\n        function () {\n            return !this._selectionModel || this._selectionModel.isEmpty();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatSelect.prototype._initializeSelection = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(function () {\n            _this._setSelectionByValue(_this.ngControl ? _this.ngControl.value : _this._value);\n        });\n    };\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    MatSelect.prototype._setSelectionByValue = /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    function (value, isUserInput) {\n        var _this = this;\n        if (isUserInput === void 0) { isUserInput = false; }\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._clearSelection();\n            value.forEach(function (currentValue) { return _this._selectValue(currentValue, isUserInput); });\n            this._sortValues();\n        }\n        else {\n            this._clearSelection();\n            var /** @type {?} */ correspondingOption = this._selectValue(value, isUserInput);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(this.options.toArray().indexOf(correspondingOption));\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * Finds and selects and option based on its value.\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?} Option that has the corresponding value.\n     */\n    MatSelect.prototype._selectValue = /**\n     * Finds and selects and option based on its value.\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?} Option that has the corresponding value.\n     */\n    function (value, isUserInput) {\n        var _this = this;\n        if (isUserInput === void 0) { isUserInput = false; }\n        var /** @type {?} */ correspondingOption = this.options.find(function (option) {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && _this._compareWith(option.value, value);\n            }\n            catch (/** @type {?} */ error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        });\n        if (correspondingOption) {\n            isUserInput ? correspondingOption._selectViaInteraction() : correspondingOption.select();\n            this._selectionModel.select(correspondingOption);\n            this.stateChanges.next();\n        }\n        return correspondingOption;\n    };\n    /**\n     * Clears the select trigger and deselects every option in the list.\n     * @param {?=} skip Option that should not be deselected.\n     * @return {?}\n     */\n    MatSelect.prototype._clearSelection = /**\n     * Clears the select trigger and deselects every option in the list.\n     * @param {?=} skip Option that should not be deselected.\n     * @return {?}\n     */\n    function (skip) {\n        this._selectionModel.clear();\n        this.options.forEach(function (option) {\n            if (option !== skip) {\n                option.deselect();\n            }\n        });\n        this.stateChanges.next();\n    };\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @return {?}\n     */\n    MatSelect.prototype._initKeyManager = /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withTypeAhead();\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(function () { return _this.close(); });\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(function () {\n            if (_this._panelOpen && _this.panel) {\n                _this._scrollActiveOptionIntoView();\n            }\n            else if (!_this._panelOpen && !_this.multiple && _this._keyManager.activeItem) {\n                _this._keyManager.activeItem._selectViaInteraction();\n            }\n        });\n    };\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @return {?}\n     */\n    MatSelect.prototype._resetOptions = /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.optionSelectionChanges.pipe(takeUntil(merge(this._destroy, this.options.changes)), filter(function (event) { return event.isUserInput; })).subscribe(function (event) {\n            _this._onSelect(event.source);\n            if (!_this.multiple) {\n                _this.close();\n            }\n        });\n        this._setOptionIds();\n    };\n    /**\n     * Invoked when an option is clicked.\n     * @param {?} option\n     * @return {?}\n     */\n    MatSelect.prototype._onSelect = /**\n     * Invoked when an option is clicked.\n     * @param {?} option\n     * @return {?}\n     */\n    function (option) {\n        var /** @type {?} */ wasSelected = this._selectionModel.isSelected(option);\n        // TODO(crisbeto): handle blank/null options inside multi-select.\n        if (this.multiple) {\n            this._selectionModel.toggle(option);\n            this.stateChanges.next();\n            wasSelected ? option.deselect() : option.select();\n            this._sortValues();\n        }\n        else {\n            this._clearSelection(option.value == null ? undefined : option);\n            if (option.value == null) {\n                this._propagateChanges(option.value);\n            }\n            else {\n                this._selectionModel.select(option);\n                this.stateChanges.next();\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n    };\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     * @return {?}\n     */\n    MatSelect.prototype._sortValues = /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._multiple) {\n            this._selectionModel.clear();\n            this.options.forEach(function (option) {\n                if (option.selected) {\n                    _this._selectionModel.select(option);\n                }\n            });\n            this.stateChanges.next();\n        }\n    };\n    /**\n     * Emits change event to set the model value.\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    MatSelect.prototype._propagateChanges = /**\n     * Emits change event to set the model value.\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    function (fallbackValue) {\n        var /** @type {?} */ valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = (/** @type {?} */ (this.selected)).map(function (option) { return option.value; });\n        }\n        else {\n            valueToEmit = this.selected ? (/** @type {?} */ (this.selected)).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @return {?}\n     */\n    MatSelect.prototype._setOptionIds = /**\n     * Records option IDs to pass to the aria-owns property.\n     * @return {?}\n     */\n    function () {\n        this._optionIds = this.options.map(function (option) { return option.id; }).join(' ');\n    };\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @return {?}\n     */\n    MatSelect.prototype._highlightCorrectOption = /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @return {?}\n     */\n    function () {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(/** @type {?} */ ((this._getOptionIndex(this._selectionModel.selected[0]))));\n            }\n        }\n    };\n    /**\n     * Scrolls the active option into view.\n     * @return {?}\n     */\n    MatSelect.prototype._scrollActiveOptionIntoView = /**\n     * Scrolls the active option into view.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ itemHeight = this._getItemHeight();\n        var /** @type {?} */ activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        var /** @type {?} */ labelCount = MatOption.countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        var /** @type {?} */ scrollOffset = (activeOptionIndex + labelCount) * itemHeight;\n        var /** @type {?} */ panelTop = this.panel.nativeElement.scrollTop;\n        if (scrollOffset < panelTop) {\n            this.panel.nativeElement.scrollTop = scrollOffset;\n        }\n        else if (scrollOffset + itemHeight > panelTop + SELECT_PANEL_MAX_HEIGHT) {\n            this.panel.nativeElement.scrollTop =\n                Math.max(0, scrollOffset - SELECT_PANEL_MAX_HEIGHT + itemHeight);\n        }\n    };\n    /** Focuses the select element. */\n    /**\n     * Focuses the select element.\n     * @return {?}\n     */\n    MatSelect.prototype.focus = /**\n     * Focuses the select element.\n     * @return {?}\n     */\n    function () {\n        this._elementRef.nativeElement.focus();\n    };\n    /**\n     * Gets the index of the provided option in the option list.\n     * @param {?} option\n     * @return {?}\n     */\n    MatSelect.prototype._getOptionIndex = /**\n     * Gets the index of the provided option in the option list.\n     * @param {?} option\n     * @return {?}\n     */\n    function (option) {\n        return this.options.reduce(function (result, current, index) {\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    };\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @return {?}\n     */\n    MatSelect.prototype._calculateOverlayPosition = /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ itemHeight = this._getItemHeight();\n        var /** @type {?} */ items = this._getItemCount();\n        var /** @type {?} */ panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        var /** @type {?} */ scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        var /** @type {?} */ maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        var /** @type {?} */ selectedOptionOffset = this.empty ? 0 : /** @type {?} */ ((this._getOptionIndex(this._selectionModel.selected[0])));\n        selectedOptionOffset += MatOption.countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        var /** @type {?} */ scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    };\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    MatSelect.prototype._calculateOverlayScroll = /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    function (selectedIndex, scrollBuffer, maxScroll) {\n        var /** @type {?} */ itemHeight = this._getItemHeight();\n        var /** @type {?} */ optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        var /** @type {?} */ halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        var /** @type {?} */ optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    };\n    Object.defineProperty(MatSelect.prototype, \"_ariaLabel\", {\n        /** Returns the aria-label of the select component. */\n        get: /**\n         * Returns the aria-label of the select component.\n         * @return {?}\n         */\n        function () {\n            // If an ariaLabelledby value has been set, the select should not overwrite the\n            // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n            return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    MatSelect.prototype._getAriaActiveDescendant = /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    function () {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    };\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @return {?}\n     */\n    MatSelect.prototype._calculateOverlayOffsetX = /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        var /** @type {?} */ viewportSize = this._viewportRuler.getViewportSize();\n        var /** @type {?} */ isRtl = this._isRtl();\n        var /** @type {?} */ paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        var /** @type {?} */ offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            var /** @type {?} */ selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        var /** @type {?} */ leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        var /** @type {?} */ rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors.\n        this.overlayDir.offsetX = offsetX;\n        this.overlayDir.overlayRef.updatePosition();\n    };\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    MatSelect.prototype._calculateOverlayOffsetY = /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    function (selectedIndex, scrollBuffer, maxScroll) {\n        var /** @type {?} */ itemHeight = this._getItemHeight();\n        var /** @type {?} */ optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        var /** @type {?} */ maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        var /** @type {?} */ optionOffsetFromPanelTop;\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            var /** @type {?} */ firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            var /** @type {?} */ selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            var /** @type {?} */ partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height\n        // difference, multiplied by -1 to ensure that the overlay moves in the correct\n        // direction up the page.\n        return optionOffsetFromPanelTop * -1 - optionHeightAdjustment;\n    };\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    MatSelect.prototype._checkOverlayWithinViewport = /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    function (maxScroll) {\n        var /** @type {?} */ itemHeight = this._getItemHeight();\n        var /** @type {?} */ viewportSize = this._viewportRuler.getViewportSize();\n        var /** @type {?} */ topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        var /** @type {?} */ bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        var /** @type {?} */ panelHeightTop = Math.abs(this._offsetY);\n        var /** @type {?} */ totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        var /** @type {?} */ panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    };\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    MatSelect.prototype._adjustPanelUp = /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    function (panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        var /** @type {?} */ distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = \"50% bottom 0px\";\n        }\n    };\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    MatSelect.prototype._adjustPanelDown = /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    function (panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        var /** @type {?} */ distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = \"50% top 0px\";\n            return;\n        }\n    };\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @return {?}\n     */\n    MatSelect.prototype._getOriginBasedOnOption = /**\n     * Sets the transform origin point based on the selected option.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ itemHeight = this._getItemHeight();\n        var /** @type {?} */ optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        var /** @type {?} */ originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return \"50% \" + originY + \"px 0px\";\n    };\n    /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @return {?}\n     */\n    MatSelect.prototype._getItemCount = /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @return {?}\n     */\n    function () {\n        return this.options.length + this.optionGroups.length;\n    };\n    /**\n     * Calculates the height of the select's options.\n     * @return {?}\n     */\n    MatSelect.prototype._getItemHeight = /**\n     * Calculates the height of the select's options.\n     * @return {?}\n     */\n    function () {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    };\n    /**\n     * Updates the select's error state. Only relevant when used with \\@angular/forms.\n     * @return {?}\n     */\n    MatSelect.prototype._updateErrorState = /**\n     * Updates the select's error state. Only relevant when used with \\@angular/forms.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ oldState = this.errorState;\n        var /** @type {?} */ parent = this._parentFormGroup || this._parentForm;\n        var /** @type {?} */ matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n        var /** @type {?} */ control = this.ngControl ? /** @type {?} */ (this.ngControl.control) : null;\n        var /** @type {?} */ newState = matcher.isErrorState(control, parent);\n        if (newState !== oldState) {\n            this.errorState = newState;\n            this.stateChanges.next();\n        }\n    };\n    // Implemented as part of MatFormFieldControl.\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    MatSelect.prototype.setDescribedByIds = /**\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) {\n        this._ariaDescribedby = ids.join(' ');\n    };\n    // Implemented as part of MatFormFieldControl.\n    /**\n     * @return {?}\n     */\n    MatSelect.prototype.onContainerClick = /**\n     * @return {?}\n     */\n    function () {\n        this.focus();\n        this.open();\n    };\n    Object.defineProperty(MatSelect.prototype, \"shouldPlaceholderFloat\", {\n        // Implemented as part of MatFormFieldControl.\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._panelOpen || !this.empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return MatSelect;\n}(_MatSelectMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatSelectModule = /** @class */ (function () {\n    function MatSelectModule() {\n    }\n    return MatSelectModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatSelectModule, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MatSelectChange, MatSelectBase, _MatSelectMixinBase, MatSelectTrigger, MatSelect, transformPanel, fadeInContent };\n//# sourceMappingURL=select.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport '@angular/cdk/a11y';\nimport { Overlay, OverlayConfig } from '@angular/cdk/overlay';\nimport '@angular/cdk/platform';\nimport '@angular/common';\nimport { InjectionToken } from '@angular/core';\nimport '@angular/material/core';\nimport '@angular/animations';\nimport '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { first } from 'rxjs/operators/first';\nimport { merge } from 'rxjs/observable/merge';\nimport '@angular/cdk/scrolling';\nimport 'rxjs/Subject';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Time in ms to delay before changing the tooltip visibility to hidden\n */\nvar TOUCHEND_HIDE_DELAY = 1500;\n/**\n * Time in ms to throttle repositioning after scroll events.\n */\nvar SCROLL_THROTTLE_MS = 20;\n/**\n * CSS class that will be attached to the overlay panel.\n */\nvar TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @param {?} position\n * @return {?}\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(\"Tooltip position \\\"\" + position + \"\\\" is invalid.\");\n}\n/**\n * Injection token that determines the scroll handling while a tooltip is visible.\n */\nvar MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return function () { return overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS }); };\n}\n/**\n * \\@docs-private\n */\nvar MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.google.com/components/tooltips.html\n */\nvar MatTooltip = /** @class */ (function () {\n    function MatTooltip(renderer, _overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, _scrollStrategy, _dir) {\n        var _this = this;\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._scrollStrategy = _scrollStrategy;\n        this._dir = _dir;\n        // The mouse events shouldn't be bound on iOS devices, because\n        // they can prevent the first tap from firing its click event.\n        if (!_platform.IOS) {\n            this._enterListener =\n                renderer.listen(_elementRef.nativeElement, 'mouseenter', function () { return _this.show(); });\n            this._leaveListener =\n                renderer.listen(_elementRef.nativeElement, 'mouseleave', function () { return _this.hide(); });\n        }\n        _focusMonitor.monitor(_elementRef.nativeElement, false).subscribe(function (origin) {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                _ngZone.run(function () { return _this.hide(0); });\n            }\n            else if (origin !== 'program') {\n                _ngZone.run(function () { return _this.show(); });\n            }\n        });\n    }\n    Object.defineProperty(MatTooltip.prototype, \"position\", {\n        get: /**\n         * Allows the user to define the position of the tooltip relative to the parent element\n         * @return {?}\n         */\n        function () { return this._position; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value !== this._position) {\n                this._position = value;\n                // TODO(andrewjs): When the overlay's position can be dynamically changed, do not destroy\n                // the tooltip.\n                if (this._tooltipInstance) {\n                    this._disposeTooltip();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTooltip.prototype, \"disabled\", {\n        get: /**\n         * Disables the display of the tooltip.\n         * @return {?}\n         */\n        function () { return this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n            // If tooltip is disabled, hide immediately.\n            if (this._disabled) {\n                this.hide(0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTooltip.prototype, \"_positionDeprecated\", {\n        get: /**\n         * @deprecated\n         * @return {?}\n         */\n        function () { return this._position; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._position = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTooltip.prototype, \"message\", {\n        get: /**\n         * The message to be displayed in the tooltip\n         * @return {?}\n         */\n        function () { return this._message; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n            // If the message is not a string (e.g. number), convert it to a string and trim it.\n            this._message = value != null ? (\"\" + value).trim() : '';\n            this._updateTooltipMessage();\n            this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTooltip.prototype, \"tooltipClass\", {\n        get: /**\n         * Classes to be passed to the tooltip. Supports the same syntax as `ngClass`.\n         * @return {?}\n         */\n        function () { return this._tooltipClass; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._tooltipClass = value;\n            if (this._tooltipInstance) {\n                this._setTooltipClass(this._tooltipClass);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    /**\n     * Dispose the tooltip when destroyed.\n     * @return {?}\n     */\n    MatTooltip.prototype.ngOnDestroy = /**\n     * Dispose the tooltip when destroyed.\n     * @return {?}\n     */\n    function () {\n        if (this._tooltipInstance) {\n            this._disposeTooltip();\n        }\n        // Clean up the event listeners set in the constructor\n        if (!this._platform.IOS) {\n            this._enterListener();\n            this._leaveListener();\n        }\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.message);\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    };\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    /**\n     * Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    MatTooltip.prototype.show = /**\n     * Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    function (delay) {\n        if (delay === void 0) { delay = this.showDelay; }\n        if (this.disabled || !this.message) {\n            return;\n        }\n        if (!this._tooltipInstance) {\n            this._createTooltip();\n        }\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage(); /** @type {?} */\n        ((this._tooltipInstance)).show(this._position, delay);\n    };\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    /**\n     * Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    MatTooltip.prototype.hide = /**\n     * Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    function (delay) {\n        if (delay === void 0) { delay = this.hideDelay; }\n        if (this._tooltipInstance) {\n            this._tooltipInstance.hide(delay);\n        }\n    };\n    /** Shows/hides the tooltip */\n    /**\n     * Shows/hides the tooltip\n     * @return {?}\n     */\n    MatTooltip.prototype.toggle = /**\n     * Shows/hides the tooltip\n     * @return {?}\n     */\n    function () {\n        this._isTooltipVisible() ? this.hide() : this.show();\n    };\n    /** Returns true if the tooltip is currently visible to the user */\n    /**\n     * Returns true if the tooltip is currently visible to the user\n     * @return {?}\n     */\n    MatTooltip.prototype._isTooltipVisible = /**\n     * Returns true if the tooltip is currently visible to the user\n     * @return {?}\n     */\n    function () {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    };\n    /** Handles the keydown events on the host element. */\n    /**\n     * Handles the keydown events on the host element.\n     * @param {?} e\n     * @return {?}\n     */\n    MatTooltip.prototype._handleKeydown = /**\n     * Handles the keydown events on the host element.\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        if (this._isTooltipVisible() && e.keyCode === ESCAPE) {\n            e.stopPropagation();\n            this.hide(0);\n        }\n    };\n    /**\n     * Create the tooltip to display\n     * @return {?}\n     */\n    MatTooltip.prototype._createTooltip = /**\n     * Create the tooltip to display\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ overlayRef = this._createOverlay();\n        var /** @type {?} */ portal = new ComponentPortal(TooltipComponent, this._viewContainerRef);\n        this._tooltipInstance = overlayRef.attach(portal).instance;\n        // Dispose of the tooltip when the overlay is detached.\n        merge(/** @type {?} */ ((this._tooltipInstance)).afterHidden(), overlayRef.detachments()).subscribe(function () {\n            // Check first if the tooltip has already been removed through this components destroy.\n            if (_this._tooltipInstance) {\n                _this._disposeTooltip();\n            }\n        });\n    };\n    /**\n     * Create the overlay config and position strategy\n     * @return {?}\n     */\n    MatTooltip.prototype._createOverlay = /**\n     * Create the overlay config and position strategy\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ origin = this._getOrigin();\n        var /** @type {?} */ overlay = this._getOverlayPosition();\n        // Create connected position strategy that listens for scroll events to reposition.\n        var /** @type {?} */ strategy = this._overlay\n            .position()\n            .connectedTo(this._elementRef, origin.main, overlay.main)\n            .withFallbackPosition(origin.fallback, overlay.fallback);\n        var /** @type {?} */ scrollableAncestors = this._scrollDispatcher\n            .getAncestorScrollContainers(this._elementRef);\n        strategy.withScrollableContainers(scrollableAncestors);\n        strategy.onPositionChange.subscribe(function (change) {\n            if (_this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && _this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    _this.hide(0);\n                }\n                else {\n                    // Otherwise recalculate the origin based on the new position.\n                    // Otherwise recalculate the origin based on the new position.\n                    _this._tooltipInstance._setTransformOrigin(change.connectionPair);\n                }\n            }\n        });\n        var /** @type {?} */ config = new OverlayConfig({\n            direction: this._dir ? this._dir.value : 'ltr',\n            positionStrategy: strategy,\n            panelClass: TOOLTIP_PANEL_CLASS,\n            scrollStrategy: this._scrollStrategy()\n        });\n        this._overlayRef = this._overlay.create(config);\n        return this._overlayRef;\n    };\n    /**\n     * Disposes the current tooltip and the overlay it is attached to\n     * @return {?}\n     */\n    MatTooltip.prototype._disposeTooltip = /**\n     * Disposes the current tooltip and the overlay it is attached to\n     * @return {?}\n     */\n    function () {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._tooltipInstance = null;\n    };\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. 'below' -> 'above').\n     */\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. 'below' -> 'above').\n     * @return {?}\n     */\n    MatTooltip.prototype._getOrigin = /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. 'below' -> 'above').\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ isDirectionLtr = !this._dir || this._dir.value == 'ltr';\n        var /** @type {?} */ position;\n        if (this.position == 'above' || this.position == 'below') {\n            position = { originX: 'center', originY: this.position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (this.position == 'left' ||\n            this.position == 'before' && isDirectionLtr ||\n            this.position == 'after' && !isDirectionLtr) {\n            position = { originX: 'start', originY: 'center' };\n        }\n        else if (this.position == 'right' ||\n            this.position == 'after' && isDirectionLtr ||\n            this.position == 'before' && !isDirectionLtr) {\n            position = { originX: 'end', originY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(this.position);\n        }\n        var _a = this._invertPosition(position.originX, position.originY), x = _a.x, y = _a.y;\n        return {\n            main: position,\n            fallback: { originX: x, originY: y }\n        };\n    };\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    /**\n     * Returns the overlay position and a fallback position based on the user's preference\n     * @return {?}\n     */\n    MatTooltip.prototype._getOverlayPosition = /**\n     * Returns the overlay position and a fallback position based on the user's preference\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ isLtr = !this._dir || this._dir.value == 'ltr';\n        var /** @type {?} */ position;\n        if (this.position == 'above') {\n            position = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (this.position == 'below') {\n            position = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (this.position == 'left' ||\n            this.position == 'before' && isLtr ||\n            this.position == 'after' && !isLtr) {\n            position = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (this.position == 'right' ||\n            this.position == 'after' && isLtr ||\n            this.position == 'before' && !isLtr) {\n            position = { overlayX: 'start', overlayY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(this.position);\n        }\n        var _a = this._invertPosition(position.overlayX, position.overlayY), x = _a.x, y = _a.y;\n        return {\n            main: position,\n            fallback: { overlayX: x, overlayY: y }\n        };\n    };\n    /**\n     * Updates the tooltip message and repositions the overlay according to the new message length\n     * @return {?}\n     */\n    MatTooltip.prototype._updateTooltipMessage = /**\n     * Updates the tooltip message and repositions the overlay according to the new message length\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(first()).subscribe(function () {\n                if (_this._tooltipInstance) {\n                    /** @type {?} */ ((_this._overlayRef)).updatePosition();\n                }\n            });\n        }\n    };\n    /**\n     * Updates the tooltip class\n     * @param {?} tooltipClass\n     * @return {?}\n     */\n    MatTooltip.prototype._setTooltipClass = /**\n     * Updates the tooltip class\n     * @param {?} tooltipClass\n     * @return {?}\n     */\n    function (tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    };\n    /**\n     * Inverts an overlay position.\n     * @param {?} x\n     * @param {?} y\n     * @return {?}\n     */\n    MatTooltip.prototype._invertPosition = /**\n     * Inverts an overlay position.\n     * @param {?} x\n     * @param {?} y\n     * @return {?}\n     */\n    function (x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x: x, y: y };\n    };\n    return MatTooltip;\n}());\n/**\n * Internal component that wraps the tooltip's content.\n * \\@docs-private\n */\nvar TooltipComponent = /** @class */ (function () {\n    function TooltipComponent(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param position Position of the tooltip.\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param {?} position Position of the tooltip.\n     * @param {?} delay Amount of milliseconds to the delay showing the tooltip.\n     * @return {?}\n     */\n    TooltipComponent.prototype.show = /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param {?} position Position of the tooltip.\n     * @param {?} delay Amount of milliseconds to the delay showing the tooltip.\n     * @return {?}\n     */\n    function (position, delay) {\n        var _this = this;\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        // Body interactions should cancel the tooltip if there is a delay in showing.\n        this._closeOnInteraction = true;\n        this._position = position;\n        this._showTimeoutId = setTimeout(function () {\n            _this._visibility = 'visible';\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            _this._markForCheck();\n        }, delay);\n    };\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param {?} delay Amount of milliseconds to delay showing the tooltip.\n     * @return {?}\n     */\n    TooltipComponent.prototype.hide = /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param {?} delay Amount of milliseconds to delay showing the tooltip.\n     * @return {?}\n     */\n    function (delay) {\n        var _this = this;\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId) {\n            clearTimeout(this._showTimeoutId);\n        }\n        this._hideTimeoutId = setTimeout(function () {\n            _this._visibility = 'hidden';\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            _this._markForCheck();\n        }, delay);\n    };\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    /**\n     * Returns an observable that notifies when the tooltip has been hidden from view.\n     * @return {?}\n     */\n    TooltipComponent.prototype.afterHidden = /**\n     * Returns an observable that notifies when the tooltip has been hidden from view.\n     * @return {?}\n     */\n    function () {\n        return this._onHide.asObservable();\n    };\n    /** Whether the tooltip is being displayed. */\n    /**\n     * Whether the tooltip is being displayed.\n     * @return {?}\n     */\n    TooltipComponent.prototype.isVisible = /**\n     * Whether the tooltip is being displayed.\n     * @return {?}\n     */\n    function () {\n        return this._visibility === 'visible';\n    };\n    /** Sets the tooltip transform origin according to the position of the tooltip overlay. */\n    /**\n     * Sets the tooltip transform origin according to the position of the tooltip overlay.\n     * @param {?} overlayPosition\n     * @return {?}\n     */\n    TooltipComponent.prototype._setTransformOrigin = /**\n     * Sets the tooltip transform origin according to the position of the tooltip overlay.\n     * @param {?} overlayPosition\n     * @return {?}\n     */\n    function (overlayPosition) {\n        var /** @type {?} */ axis = (this._position === 'above' || this._position === 'below') ? 'Y' : 'X';\n        var /** @type {?} */ position = axis == 'X' ? overlayPosition.overlayX : overlayPosition.overlayY;\n        if (position === 'top' || position === 'bottom') {\n            this._transformOrigin = position;\n        }\n        else if (position === 'start') {\n            this._transformOrigin = 'left';\n        }\n        else if (position === 'end') {\n            this._transformOrigin = 'right';\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(this._position);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TooltipComponent.prototype._animationStart = /**\n     * @return {?}\n     */\n    function () {\n        this._closeOnInteraction = false;\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    TooltipComponent.prototype._animationDone = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var _this = this;\n        var /** @type {?} */ toState = /** @type {?} */ (event.toState);\n        if (toState === 'hidden' && !this.isVisible()) {\n            this._onHide.next();\n        }\n        if (toState === 'visible' || toState === 'hidden') {\n            // Note: as of Angular 4.3, the animations module seems to fire the `start` callback before\n            // the end if animations are disabled. Make this call async to ensure that it still fires\n            // at the appropriate time.\n            Promise.resolve().then(function () { return _this._closeOnInteraction = true; });\n        }\n    };\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.google.com/components/tooltips.html#tooltips-interaction\n     */\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.google.com/components/tooltips.html#tooltips-interaction\n     * @return {?}\n     */\n    TooltipComponent.prototype._handleBodyInteraction = /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.google.com/components/tooltips.html#tooltips-interaction\n     * @return {?}\n     */\n    function () {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    };\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     * @return {?}\n     */\n    TooltipComponent.prototype._markForCheck = /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     * @return {?}\n     */\n    function () {\n        this._changeDetectorRef.markForCheck();\n    };\n    return TooltipComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatTooltipModule = /** @class */ (function () {\n    function MatTooltipModule() {\n    }\n    return MatTooltipModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatTooltipModule, TOUCHEND_HIDE_DELAY, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, getMatTooltipInvalidPositionError, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER, MatTooltip, TooltipComponent };\n//# sourceMappingURL=tooltip.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport '@angular/common';\nimport { Optional, SkipSelf } from '@angular/core';\nimport '@angular/material/button';\nimport '@angular/material/select';\nimport '@angular/material/tooltip';\nimport 'rxjs/Subject';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nvar MatPaginatorIntl = /** @class */ (function () {\n    function MatPaginatorIntl() {\n    }\n    return MatPaginatorIntl;\n}());\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/**\n * \\@docs-private\n */\nvar MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * The default page size if there is no page size and there are no provided page size options.\n */\nvar DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nvar PageEvent = /** @class */ (function () {\n    function PageEvent() {\n    }\n    return PageEvent;\n}());\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nvar MatPaginator = /** @class */ (function () {\n    function MatPaginator(_intl, _changeDetectorRef) {\n        var _this = this;\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._intlChanges = _intl.changes.subscribe(function () { return _this._changeDetectorRef.markForCheck(); });\n    }\n    Object.defineProperty(MatPaginator.prototype, \"pageIndex\", {\n        get: /**\n         * The zero-based page index of the displayed list of items. Defaulted to 0.\n         * @return {?}\n         */\n        function () { return this._pageIndex; },\n        set: /**\n         * @param {?} pageIndex\n         * @return {?}\n         */\n        function (pageIndex) {\n            this._pageIndex = pageIndex;\n            this._changeDetectorRef.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatPaginator.prototype, \"length\", {\n        get: /**\n         * The length of the total number of items that are being paginated. Defaulted to 0.\n         * @return {?}\n         */\n        function () { return this._length; },\n        set: /**\n         * @param {?} length\n         * @return {?}\n         */\n        function (length) {\n            this._length = length;\n            this._changeDetectorRef.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatPaginator.prototype, \"pageSize\", {\n        get: /**\n         * Number of items to display on a page. By default set to 50.\n         * @return {?}\n         */\n        function () { return this._pageSize; },\n        set: /**\n         * @param {?} pageSize\n         * @return {?}\n         */\n        function (pageSize) {\n            this._pageSize = pageSize;\n            this._updateDisplayedPageSizeOptions();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatPaginator.prototype, \"pageSizeOptions\", {\n        get: /**\n         * The set of provided page size options to display to the user.\n         * @return {?}\n         */\n        function () { return this._pageSizeOptions; },\n        set: /**\n         * @param {?} pageSizeOptions\n         * @return {?}\n         */\n        function (pageSizeOptions) {\n            this._pageSizeOptions = pageSizeOptions;\n            this._updateDisplayedPageSizeOptions();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatPaginator.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n    };\n    /**\n     * @return {?}\n     */\n    MatPaginator.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._intlChanges.unsubscribe();\n    };\n    /** Advances to the next page if it exists. */\n    /**\n     * Advances to the next page if it exists.\n     * @return {?}\n     */\n    MatPaginator.prototype.nextPage = /**\n     * Advances to the next page if it exists.\n     * @return {?}\n     */\n    function () {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        this.pageIndex++;\n        this._emitPageEvent();\n    };\n    /** Move back to the previous page if it exists. */\n    /**\n     * Move back to the previous page if it exists.\n     * @return {?}\n     */\n    MatPaginator.prototype.previousPage = /**\n     * Move back to the previous page if it exists.\n     * @return {?}\n     */\n    function () {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        this.pageIndex--;\n        this._emitPageEvent();\n    };\n    /** Whether there is a previous page. */\n    /**\n     * Whether there is a previous page.\n     * @return {?}\n     */\n    MatPaginator.prototype.hasPreviousPage = /**\n     * Whether there is a previous page.\n     * @return {?}\n     */\n    function () {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    };\n    /** Whether there is a next page. */\n    /**\n     * Whether there is a next page.\n     * @return {?}\n     */\n    MatPaginator.prototype.hasNextPage = /**\n     * Whether there is a next page.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ numberOfPages = Math.ceil(this.length / this.pageSize) - 1;\n        return this.pageIndex < numberOfPages && this.pageSize != 0;\n    };\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     * @param {?} pageSize\n     * @return {?}\n     */\n    MatPaginator.prototype._changePageSize = /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     * @param {?} pageSize\n     * @return {?}\n     */\n    function (pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        var /** @type {?} */ startIndex = this.pageIndex * this.pageSize;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent();\n    };\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     * @return {?}\n     */\n    MatPaginator.prototype._updateDisplayedPageSizeOptions = /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     * @return {?}\n     */\n    function () {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize = this.pageSizeOptions.length != 0 ?\n                this.pageSizeOptions[0] :\n                DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) == -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort(function (a, b) { return a - b; });\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * Emits an event notifying that a change of the paginator's properties has been triggered.\n     * @return {?}\n     */\n    MatPaginator.prototype._emitPageEvent = /**\n     * Emits an event notifying that a change of the paginator's properties has been triggered.\n     * @return {?}\n     */\n    function () {\n        this.page.next({\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length\n        });\n    };\n    return MatPaginator;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatPaginatorModule = /** @class */ (function () {\n    function MatPaginatorModule() {\n    }\n    return MatPaginatorModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatPaginatorModule, PageEvent, MatPaginator, MatPaginatorIntl, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MAT_PAGINATOR_INTL_PROVIDER };\n//# sourceMappingURL=paginator.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport '@angular/core';\nimport '@angular/common';\nimport '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * <mat-progress-bar> component.\n */\nvar MatProgressBar = /** @class */ (function () {\n    function MatProgressBar() {\n    }\n    Object.defineProperty(MatProgressBar.prototype, \"value\", {\n        get: /**\n         * Value of the progressbar. Defaults to zero. Mirrored to aria-valuenow.\n         * @return {?}\n         */\n        function () { return this._value; },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) { this._value = clamp(v || 0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatProgressBar.prototype, \"bufferValue\", {\n        get: /**\n         * Buffer value of the progress bar. Defaults to zero.\n         * @return {?}\n         */\n        function () { return this._bufferValue; },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) { this._bufferValue = clamp(v || 0); },\n        enumerable: true,\n        configurable: true\n    });\n    /** Gets the current transform value for the progress bar's primary indicator. */\n    /**\n     * Gets the current transform value for the progress bar's primary indicator.\n     * @return {?}\n     */\n    MatProgressBar.prototype._primaryTransform = /**\n     * Gets the current transform value for the progress bar's primary indicator.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ scale = this.value / 100;\n        return { transform: \"scaleX(\" + scale + \")\" };\n    };\n    /**\n     * Gets the current transform value for the progress bar's buffer indicator.  Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     */\n    /**\n     * Gets the current transform value for the progress bar's buffer indicator.  Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     * @return {?}\n     */\n    MatProgressBar.prototype._bufferTransform = /**\n     * Gets the current transform value for the progress bar's buffer indicator.  Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     * @return {?}\n     */\n    function () {\n        if (this.mode == 'buffer') {\n            var /** @type {?} */ scale = this.bufferValue / 100;\n            return { transform: \"scaleX(\" + scale + \")\" };\n        }\n    };\n    return MatProgressBar;\n}());\n/**\n * Clamps a value to be between two numbers, by default 0 and 100.\n * @param {?} v\n * @param {?=} min\n * @param {?=} max\n * @return {?}\n */\nfunction clamp(v, min, max) {\n    if (min === void 0) { min = 0; }\n    if (max === void 0) { max = 100; }\n    return Math.max(min, Math.min(max, v));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatProgressBarModule = /** @class */ (function () {\n    function MatProgressBarModule() {\n    }\n    return MatProgressBarModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatProgressBarModule, MatProgressBar };\n//# sourceMappingURL=progress-bar.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport '@angular/core';\nimport '@angular/cdk/platform';\nimport { mixinColor } from '@angular/material/core';\nimport { __extends } from 'tslib';\nimport * as tslib_1 from 'tslib';\nimport '@angular/common';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Base reference stroke width of the spinner.\n * \\@docs-private\n */\nvar BASE_STROKE_WIDTH = 10;\n/**\n * \\@docs-private\n */\nvar MatProgressSpinnerBase = /** @class */ (function () {\n    function MatProgressSpinnerBase(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n    }\n    return MatProgressSpinnerBase;\n}());\nvar _MatProgressSpinnerMixinBase = mixinColor(MatProgressSpinnerBase, 'primary');\nvar INDETERMINATE_ANIMATION_TEMPLATE = \"\\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\\n    12.51%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\\n\\n    25.1%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\\n    37.51%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\\n\\n    50.01%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\\n    62.51%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\\n\\n    75.01%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\\n    87.51%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\\n  }\\n\";\n/**\n * <mat-progress-spinner> component.\n */\nvar MatProgressSpinner = /** @class */ (function (_super) {\n    __extends(MatProgressSpinner, _super);\n    function MatProgressSpinner(_renderer, _elementRef, platform, _document) {\n        var _this = _super.call(this, _renderer, _elementRef) || this;\n        _this._renderer = _renderer;\n        _this._elementRef = _elementRef;\n        _this._document = _document;\n        _this._fallbackAnimation = platform.EDGE || platform.TRIDENT;\n        // On IE and Edge, we can't animate the `stroke-dashoffset`\n        // reliably so we fall back to a non-spec animation.\n        var /** @type {?} */ animationClass = \"mat-progress-spinner-indeterminate\" + (_this._fallbackAnimation ? '-fallback' : '') + \"-animation\";\n        _renderer.addClass(_elementRef.nativeElement, animationClass);\n        return _this;\n    }\n    Object.defineProperty(MatProgressSpinner.prototype, \"diameter\", {\n        get: /**\n         * The diameter of the progress spinner (will set width and height of svg).\n         * @return {?}\n         */\n        function () {\n            return this._diameter;\n        },\n        set: /**\n         * @param {?} size\n         * @return {?}\n         */\n        function (size) {\n            this._diameter = coerceNumberProperty(size);\n            if (!this._fallbackAnimation && !MatProgressSpinner.diameters.has(this._diameter)) {\n                this._attachStyleNode();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatProgressSpinner.prototype, \"strokeWidth\", {\n        get: /**\n         * Stroke width of the progress spinner.\n         * @return {?}\n         */\n        function () {\n            return this._strokeWidth || this.diameter / 10;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._strokeWidth = coerceNumberProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatProgressSpinner.prototype, \"value\", {\n        get: /**\n         * Value of the progress circle.\n         * @return {?}\n         */\n        function () {\n            return this.mode === 'determinate' ? this._value : 0;\n        },\n        set: /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        function (newValue) {\n            if (newValue != null && this.mode === 'determinate') {\n                this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MatProgressSpinner.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes[\"strokeWidth\"] || changes[\"diameter\"]) {\n            this._elementSize = this._diameter + Math.max(this.strokeWidth - BASE_STROKE_WIDTH, 0);\n        }\n    };\n    Object.defineProperty(MatProgressSpinner.prototype, \"_circleRadius\", {\n        /** The radius of the spinner, adjusted for stroke width. */\n        get: /**\n         * The radius of the spinner, adjusted for stroke width.\n         * @return {?}\n         */\n        function () {\n            return (this.diameter - BASE_STROKE_WIDTH) / 2;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatProgressSpinner.prototype, \"_viewBox\", {\n        /** The view box of the spinner's svg element. */\n        get: /**\n         * The view box of the spinner's svg element.\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ viewBox = this._circleRadius * 2 + this.strokeWidth;\n            return \"0 0 \" + viewBox + \" \" + viewBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatProgressSpinner.prototype, \"_strokeCircumference\", {\n        /** The stroke circumference of the svg circle. */\n        get: /**\n         * The stroke circumference of the svg circle.\n         * @return {?}\n         */\n        function () {\n            return 2 * Math.PI * this._circleRadius;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatProgressSpinner.prototype, \"_strokeDashOffset\", {\n        /** The dash offset of the svg circle. */\n        get: /**\n         * The dash offset of the svg circle.\n         * @return {?}\n         */\n        function () {\n            if (this.mode === 'determinate') {\n                return this._strokeCircumference * (100 - this._value) / 100;\n            }\n            // In fallback mode set the circle to 80% and rotate it with CSS.\n            if (this._fallbackAnimation && this.mode === 'indeterminate') {\n                return this._strokeCircumference * 0.2;\n            }\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatProgressSpinner.prototype, \"_circleStrokeWidth\", {\n        /** Stroke width of the circle in percent. */\n        get: /**\n         * Stroke width of the circle in percent.\n         * @return {?}\n         */\n        function () {\n            return this.strokeWidth / this._elementSize * 100;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Dynamically generates a style tag containing the correct animation for this diameter.\n     * @return {?}\n     */\n    MatProgressSpinner.prototype._attachStyleNode = /**\n     * Dynamically generates a style tag containing the correct animation for this diameter.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ styleTag = MatProgressSpinner.styleTag;\n        if (!styleTag) {\n            styleTag = this._renderer.createElement('style');\n            this._renderer.appendChild(this._document.head, styleTag);\n            MatProgressSpinner.styleTag = styleTag;\n        }\n        if (styleTag && styleTag.sheet) {\n            (/** @type {?} */ (styleTag.sheet)).insertRule(this._getAnimationText(), 0);\n        }\n        MatProgressSpinner.diameters.add(this.diameter);\n    };\n    /**\n     * Generates animation styles adjusted for the spinner's diameter.\n     * @return {?}\n     */\n    MatProgressSpinner.prototype._getAnimationText = /**\n     * Generates animation styles adjusted for the spinner's diameter.\n     * @return {?}\n     */\n    function () {\n        return INDETERMINATE_ANIMATION_TEMPLATE\n            .replace(/START_VALUE/g, \"\" + 0.95 * this._strokeCircumference)\n            .replace(/END_VALUE/g, \"\" + 0.2 * this._strokeCircumference)\n            .replace(/DIAMETER/g, \"\" + this.diameter);\n    };\n    return MatProgressSpinner;\n}(_MatProgressSpinnerMixinBase));\n/**\n * <mat-spinner> component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate <mat-progress-spinner> instance.\n */\nvar MatSpinner = /** @class */ (function (_super) {\n    __extends(MatSpinner, _super);\n    function MatSpinner(renderer, elementRef, platform, document) {\n        var _this = _super.call(this, renderer, elementRef, platform, document) || this;\n        _this.mode = 'indeterminate';\n        return _this;\n    }\n    return MatSpinner;\n}(MatProgressSpinner));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatProgressSpinnerModule = /** @class */ (function () {\n    function MatProgressSpinnerModule() {\n    }\n    return MatProgressSpinnerModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatProgressSpinnerModule, MatProgressSpinnerBase, _MatProgressSpinnerMixinBase, MatProgressSpinner, MatSpinner };\n//# sourceMappingURL=progress-spinner.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { forwardRef } from '@angular/core';\nimport '@angular/common';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/collections';\nimport '@angular/cdk/overlay';\nimport { mixinColor, mixinDisableRipple, mixinDisabled } from '@angular/material/core';\nimport { __extends } from 'tslib';\nimport * as tslib_1 from 'tslib';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * \\@docs-private\n */\nvar MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return MatRadioGroup; }),\n    multi: true\n};\n/**\n * Change event object emitted by MatRadio and MatRadioGroup.\n */\nvar MatRadioChange = /** @class */ (function () {\n    function MatRadioChange() {\n    }\n    return MatRadioChange;\n}());\n/**\n * \\@docs-private\n */\nvar MatRadioGroupBase = /** @class */ (function () {\n    function MatRadioGroupBase() {\n    }\n    return MatRadioGroupBase;\n}());\nvar _MatRadioGroupMixinBase = mixinDisabled(MatRadioGroupBase);\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nvar MatRadioGroup = /** @class */ (function (_super) {\n    __extends(MatRadioGroup, _super);\n    function MatRadioGroup(_changeDetector) {\n        var _this = _super.call(this) || this;\n        _this._changeDetector = _changeDetector;\n        return _this;\n    }\n    Object.defineProperty(MatRadioGroup.prototype, \"name\", {\n        get: /**\n         * Name of the radio button group. All radio buttons inside this group will use this name.\n         * @return {?}\n         */\n        function () { return this._name; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._name = value;\n            this._updateRadioButtonNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioGroup.prototype, \"align\", {\n        get: /**\n         * Alignment of the radio-buttons relative to their labels. Can be 'before' or 'after'.\n         * @deprecated\n         * @return {?}\n         */\n        function () {\n            // align refers to the checkbox relative to the label, while labelPosition refers to the\n            // label relative to the checkbox. As such, they are inverted.\n            return this.labelPosition == 'after' ? 'start' : 'end';\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this.labelPosition = (v == 'start') ? 'after' : 'before';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioGroup.prototype, \"labelPosition\", {\n        get: /**\n         * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n         * @return {?}\n         */\n        function () {\n            return this._labelPosition;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this._labelPosition = (v == 'before') ? 'before' : 'after';\n            this._markRadiosForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioGroup.prototype, \"value\", {\n        get: /**\n         * Value of the radio button.\n         * @return {?}\n         */\n        function () { return this._value; },\n        set: /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        function (newValue) {\n            if (this._value != newValue) {\n                // Set this before proceeding to ensure no circular loop occurs with selection.\n                this._value = newValue;\n                this._updateSelectedRadioFromValue();\n                this._checkSelectedRadioButton();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatRadioGroup.prototype._checkSelectedRadioButton = /**\n     * @return {?}\n     */\n    function () {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    };\n    Object.defineProperty(MatRadioGroup.prototype, \"selected\", {\n        get: /**\n         * Whether the radio button is selected.\n         * @return {?}\n         */\n        function () { return this._selected; },\n        set: /**\n         * @param {?} selected\n         * @return {?}\n         */\n        function (selected) {\n            this._selected = selected;\n            this.value = selected ? selected.value : null;\n            this._checkSelectedRadioButton();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioGroup.prototype, \"disabled\", {\n        get: /**\n         * Whether the radio group is disabled\n         * @return {?}\n         */\n        function () { return this._disabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n            this._markRadiosForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioGroup.prototype, \"required\", {\n        get: /**\n         * Whether the radio group is required\n         * @return {?}\n         */\n        function () { return this._required; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._required = coerceBooleanProperty(value);\n            this._markRadiosForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     * @return {?}\n     */\n    MatRadioGroup.prototype.ngAfterContentInit = /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     * @return {?}\n     */\n    function () {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n    };\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     * @return {?}\n     */\n    MatRadioGroup.prototype._touch = /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     * @return {?}\n     */\n    function () {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatRadioGroup.prototype._updateRadioButtonNames = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._radios) {\n            this._radios.forEach(function (radio) {\n                radio.name = _this.name;\n            });\n        }\n    };\n    /**\n     * Updates the `selected` radio button from the internal _value state.\n     * @return {?}\n     */\n    MatRadioGroup.prototype._updateSelectedRadioFromValue = /**\n     * Updates the `selected` radio button from the internal _value state.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // If the value already matches the selected radio, do nothing.\n        var /** @type {?} */ isAlreadySelected = this._selected != null && this._selected.value == this._value;\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach(function (radio) {\n                radio.checked = _this.value == radio.value;\n                if (radio.checked) {\n                    _this._selected = radio;\n                }\n            });\n        }\n    };\n    /** Dispatch change event with current selection and group value. */\n    /**\n     * Dispatch change event with current selection and group value.\n     * @return {?}\n     */\n    MatRadioGroup.prototype._emitChangeEvent = /**\n     * Dispatch change event with current selection and group value.\n     * @return {?}\n     */\n    function () {\n        if (this._isInitialized) {\n            var /** @type {?} */ event_1 = new MatRadioChange();\n            event_1.source = this._selected;\n            event_1.value = this._value;\n            this.change.emit(event_1);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatRadioGroup.prototype._markRadiosForCheck = /**\n     * @return {?}\n     */\n    function () {\n        if (this._radios) {\n            this._radios.forEach(function (radio) { return radio._markForCheck(); });\n        }\n    };\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    MatRadioGroup.prototype.writeValue = /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    };\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    MatRadioGroup.prototype.registerOnChange = /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    function (fn) {\n        this._controlValueAccessorChangeFn = fn;\n    };\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    MatRadioGroup.prototype.registerOnTouched = /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    function (fn) {\n        this.onTouched = fn;\n    };\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled Whether the control should be disabled.\n     * @return {?}\n     */\n    MatRadioGroup.prototype.setDisabledState = /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled Whether the control should be disabled.\n     * @return {?}\n     */\n    function (isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    };\n    return MatRadioGroup;\n}(_MatRadioGroupMixinBase));\n/**\n * \\@docs-private\n */\nvar MatRadioButtonBase = /** @class */ (function () {\n    function MatRadioButtonBase(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n    }\n    return MatRadioButtonBase;\n}());\n// As per Material design specifications the selection control radio should use the accent color\n// palette by default. https://material.io/guidelines/components/selection-controls.html\nvar _MatRadioButtonMixinBase = mixinColor(mixinDisableRipple(MatRadioButtonBase), 'accent');\n/**\n * A radio-button. May be inside of\n */\nvar MatRadioButton = /** @class */ (function (_super) {\n    __extends(MatRadioButton, _super);\n    function MatRadioButton(radioGroup, elementRef, renderer, _changeDetector, _focusMonitor, _radioDispatcher) {\n        var _this = _super.call(this, renderer, elementRef) || this;\n        _this._changeDetector = _changeDetector;\n        _this._focusMonitor = _focusMonitor;\n        _this._radioDispatcher = _radioDispatcher;\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        _this.radioGroup = radioGroup;\n        _this._removeUniqueSelectionListener =\n            _radioDispatcher.listen(function (id, name) {\n                if (id != _this.id && name == _this.name) {\n                    _this.checked = false;\n                }\n            });\n        return _this;\n    }\n    Object.defineProperty(MatRadioButton.prototype, \"checked\", {\n        get: /**\n         * Whether this radio button is checked.\n         * @return {?}\n         */\n        function () {\n            return this._checked;\n        },\n        set: /**\n         * @param {?} newCheckedState\n         * @return {?}\n         */\n        function (newCheckedState) {\n            if (this._checked != newCheckedState) {\n                this._checked = newCheckedState;\n                if (newCheckedState && this.radioGroup && this.radioGroup.value != this.value) {\n                    this.radioGroup.selected = this;\n                }\n                else if (!newCheckedState && this.radioGroup && this.radioGroup.value == this.value) {\n                    // When unchecking the selected radio button, update the selected radio\n                    // property on the group.\n                    this.radioGroup.selected = null;\n                }\n                if (newCheckedState) {\n                    // Notify all radio buttons with the same name to un-check.\n                    this._radioDispatcher.notify(this.id, this.name);\n                }\n                this._changeDetector.markForCheck();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioButton.prototype, \"value\", {\n        get: /**\n         * The value of this radio button.\n         * @return {?}\n         */\n        function () {\n            return this._value;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (this._value != value) {\n                this._value = value;\n                if (this.radioGroup != null) {\n                    if (!this.checked) {\n                        // Update checked when the value changed to match the radio group's value\n                        this.checked = this.radioGroup.value == value;\n                    }\n                    if (this.checked) {\n                        this.radioGroup.selected = this;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioButton.prototype, \"align\", {\n        get: /**\n         * Whether or not the radio-button should appear before or after the label.\n         * @deprecated\n         * @return {?}\n         */\n        function () {\n            // align refers to the checkbox relative to the label, while labelPosition refers to the\n            // label relative to the checkbox. As such, they are inverted.\n            return this.labelPosition == 'after' ? 'start' : 'end';\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this.labelPosition = (v == 'start') ? 'after' : 'before';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioButton.prototype, \"labelPosition\", {\n        get: /**\n         * Whether the label should appear after or before the radio button. Defaults to 'after'\n         * @return {?}\n         */\n        function () {\n            return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._labelPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioButton.prototype, \"disabled\", {\n        get: /**\n         * Whether the radio button is disabled.\n         * @return {?}\n         */\n        function () {\n            return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disabled = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioButton.prototype, \"required\", {\n        get: /**\n         * Whether the radio button is required.\n         * @return {?}\n         */\n        function () {\n            return this._required || (this.radioGroup && this.radioGroup.required);\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._required = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatRadioButton.prototype, \"inputId\", {\n        /** ID of the native input element inside `<mat-radio-button>` */\n        get: /**\n         * ID of the native input element inside `<mat-radio-button>`\n         * @return {?}\n         */\n        function () { return (this.id || this._uniqueId) + \"-input\"; },\n        enumerable: true,\n        configurable: true\n    });\n    /** Focuses the radio button. */\n    /**\n     * Focuses the radio button.\n     * @return {?}\n     */\n    MatRadioButton.prototype.focus = /**\n     * Focuses the radio button.\n     * @return {?}\n     */\n    function () {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    };\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     * @return {?}\n     */\n    MatRadioButton.prototype._markForCheck = /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     * @return {?}\n     */\n    function () {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    };\n    /**\n     * @return {?}\n     */\n    MatRadioButton.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatRadioButton.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._focusMonitor.monitor(this._inputElement.nativeElement, false)\n            .subscribe(function (focusOrigin) { return _this._onInputFocusChange(focusOrigin); });\n    };\n    /**\n     * @return {?}\n     */\n    MatRadioButton.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n        this._removeUniqueSelectionListener();\n    };\n    /**\n     * Dispatch change event with current value.\n     * @return {?}\n     */\n    MatRadioButton.prototype._emitChangeEvent = /**\n     * Dispatch change event with current value.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ event = new MatRadioChange();\n        event.source = this;\n        event.value = this._value;\n        this.change.emit(event);\n    };\n    /**\n     * @return {?}\n     */\n    MatRadioButton.prototype._isRippleDisabled = /**\n     * @return {?}\n     */\n    function () {\n        return this.disableRipple || this.disabled;\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatRadioButton.prototype._onInputClick = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    };\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     */\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     * @param {?} event\n     * @return {?}\n     */\n    MatRadioButton.prototype._onInputChange = /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        var /** @type {?} */ groupValueChanged = this.radioGroup && this.value != this.radioGroup.value;\n        this.checked = true;\n        this._emitChangeEvent();\n        if (this.radioGroup) {\n            this.radioGroup._controlValueAccessorChangeFn(this.value);\n            this.radioGroup._touch();\n            if (groupValueChanged) {\n                this.radioGroup._emitChangeEvent();\n            }\n        }\n    };\n    /**\n     * Function is called whenever the focus changes for the input element.\n     * @param {?} focusOrigin\n     * @return {?}\n     */\n    MatRadioButton.prototype._onInputFocusChange = /**\n     * Function is called whenever the focus changes for the input element.\n     * @param {?} focusOrigin\n     * @return {?}\n     */\n    function (focusOrigin) {\n        if (!this._focusRipple && focusOrigin === 'keyboard') {\n            this._focusRipple = this._ripple.launch(0, 0, { persistent: true, centered: true });\n        }\n        else if (!focusOrigin) {\n            if (this.radioGroup) {\n                this.radioGroup._touch();\n            }\n            if (this._focusRipple) {\n                this._focusRipple.fadeOut();\n                this._focusRipple = null;\n            }\n        }\n    };\n    return MatRadioButton;\n}(_MatRadioButtonMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatRadioModule = /** @class */ (function () {\n    function MatRadioModule() {\n    }\n    return MatRadioModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatRadioModule, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioChange, MatRadioGroupBase, _MatRadioGroupMixinBase, MatRadioGroup, MatRadioButtonBase, _MatRadioButtonMixinBase, MatRadioButton };\n//# sourceMappingURL=radio.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/overlay';\nimport '@angular/common';\nimport '@angular/core';\nimport '@angular/material/core';\nimport '@angular/cdk/scrolling';\nimport '@angular/animations';\nimport '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport '@angular/platform-browser';\nimport { merge } from 'rxjs/observable/merge';\nimport { filter } from 'rxjs/operators/filter';\nimport { first } from 'rxjs/operators/first';\nimport { startWith } from 'rxjs/operators/startWith';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\nimport { map } from 'rxjs/operators/map';\nimport 'rxjs/Subject';\nimport 'rxjs/Observable';\nimport { __extends } from 'tslib';\nimport * as tslib_1 from 'tslib';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @param {?} position\n * @return {?}\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(\"A drawer was already declared for 'position=\\\"\" + position + \"\\\"'\");\n}\n/**\n * Drawer toggle promise result.\n * @deprecated\n */\nvar MatDrawerToggleResult = /** @class */ (function () {\n    function MatDrawerToggleResult(type, animationFinished) {\n        this.type = type;\n        this.animationFinished = animationFinished;\n    }\n    return MatDrawerToggleResult;\n}());\nvar MatDrawerContent = /** @class */ (function () {\n    function MatDrawerContent(_changeDetectorRef, _container) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    /**\n     * @return {?}\n     */\n    MatDrawerContent.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._container._contentMargins.subscribe(function (margins) {\n            _this._margins = margins;\n            _this._changeDetectorRef.markForCheck();\n        });\n    };\n    return MatDrawerContent;\n}());\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nvar MatDrawer = /** @class */ (function () {\n    function MatDrawer(_elementRef, _focusTrapFactory, _focusMonitor, _doc) {\n        var _this = this;\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._doc = _doc;\n        this.openedChange.subscribe(function (opened) {\n            if (opened) {\n                if (_this._doc) {\n                    _this._elementFocusedBeforeDrawerWasOpened = /** @type {?} */ (_this._doc.activeElement);\n                }\n                if (_this._isFocusTrapEnabled && _this._focusTrap) {\n                    _this._focusTrap.focusInitialElementWhenReady();\n                }\n            }\n            else {\n                _this._restoreFocus();\n            }\n        });\n    }\n    Object.defineProperty(MatDrawer.prototype, \"position\", {\n        get: /**\n         * The side that the drawer is attached to.\n         * @return {?}\n         */\n        function () { return this._position; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            // Make sure we have a valid value.\n            value = value === 'end' ? 'end' : 'start';\n            if (value != this._position) {\n                this._position = value;\n                this.onAlignChanged.emit();\n                this.onPositionChanged.emit();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDrawer.prototype, \"align\", {\n        get: /**\n         * @deprecated\n         * @return {?}\n         */\n        function () { return this.position; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this.position = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDrawer.prototype, \"mode\", {\n        get: /**\n         * Mode of the drawer; one of 'over', 'push' or 'side'.\n         * @return {?}\n         */\n        function () { return this._mode; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._mode = value;\n            this._modeChanged.next();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDrawer.prototype, \"disableClose\", {\n        get: /**\n         * Whether the drawer can be closed with the escape key or by clicking on the backdrop.\n         * @return {?}\n         */\n        function () { return this._disableClose; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._disableClose = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDrawer.prototype, \"_openedStream\", {\n        get: /**\n         * Event emitted when the drawer has been opened.\n         * @return {?}\n         */\n        function () {\n            return this.openedChange.pipe(filter(function (o) { return o; }), map(function () { }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDrawer.prototype, \"openedStart\", {\n        get: /**\n         * Event emitted when the drawer has started opening.\n         * @return {?}\n         */\n        function () {\n            return this._animationStarted.pipe(filter(function (e) { return e.fromState !== e.toState && e.toState.indexOf('open') === 0; }), map(function () { }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDrawer.prototype, \"_closedStream\", {\n        get: /**\n         * Event emitted when the drawer has been closed.\n         * @return {?}\n         */\n        function () {\n            return this.openedChange.pipe(filter(function (o) { return !o; }), map(function () { }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDrawer.prototype, \"closedStart\", {\n        get: /**\n         * Event emitted when the drawer has started closing.\n         * @return {?}\n         */\n        function () {\n            return this._animationStarted.pipe(filter(function (e) { return e.fromState !== e.toState && e.toState === 'void'; }), map(function () { }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDrawer.prototype, \"_isFocusTrapEnabled\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            return this.opened && this.mode !== 'side';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * If focus is currently inside the drawer, restores it to where it was before the drawer\n     * opened.\n     * @return {?}\n     */\n    MatDrawer.prototype._restoreFocus = /**\n     * If focus is currently inside the drawer, restores it to where it was before the drawer\n     * opened.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ activeEl = this._doc && this._doc.activeElement;\n        if (activeEl && this._elementRef.nativeElement.contains(activeEl)) {\n            if (this._elementFocusedBeforeDrawerWasOpened instanceof HTMLElement) {\n                this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n            }\n            else {\n                this._elementRef.nativeElement.blur();\n            }\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    };\n    /**\n     * @return {?}\n     */\n    MatDrawer.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._focusTrap.enabled = this._isFocusTrapEnabled;\n        this._enableAnimations = true;\n    };\n    /**\n     * @return {?}\n     */\n    MatDrawer.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    };\n    Object.defineProperty(MatDrawer.prototype, \"opened\", {\n        get: /**\n         * Whether the drawer is opened. We overload this because we trigger an event when it\n         * starts or end.\n         * @return {?}\n         */\n        function () { return this._opened; },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this.toggle(coerceBooleanProperty(v));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Open the drawer.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    /**\n     * Open the drawer.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    MatDrawer.prototype.open = /**\n     * Open the drawer.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    function (openedVia) {\n        return this.toggle(true, openedVia);\n    };\n    /** Close the drawer. */\n    /**\n     * Close the drawer.\n     * @return {?}\n     */\n    MatDrawer.prototype.close = /**\n     * Close the drawer.\n     * @return {?}\n     */\n    function () {\n        return this.toggle(false);\n    };\n    /**\n     * Toggle this drawer.\n     * @param isOpen Whether the drawer should be open.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    /**\n     * Toggle this drawer.\n     * @param {?=} isOpen Whether the drawer should be open.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    MatDrawer.prototype.toggle = /**\n     * Toggle this drawer.\n     * @param {?=} isOpen Whether the drawer should be open.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    function (isOpen, openedVia) {\n        var _this = this;\n        if (isOpen === void 0) { isOpen = !this.opened; }\n        if (openedVia === void 0) { openedVia = 'program'; }\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            this._restoreFocus();\n        }\n        if (this._focusTrap) {\n            this._focusTrap.enabled = this._isFocusTrapEnabled;\n        }\n        // TODO(crisbeto): This promise is here for backwards-compatibility.\n        // It should be removed next time we do breaking changes in the drawer.\n        return new Promise(function (resolve) {\n            _this.openedChange.pipe(first()).subscribe(function (open) {\n                resolve(new MatDrawerToggleResult(open ? 'open' : 'close', true));\n            });\n        });\n    };\n    /**\n     * Handles the keyboard events.\n     * @docs-private\n     */\n    /**\n     * Handles the keyboard events.\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    MatDrawer.prototype.handleKeydown = /**\n     * Handles the keyboard events.\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (event.keyCode === ESCAPE && !this.disableClose) {\n            this.close();\n            event.stopPropagation();\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatDrawer.prototype._onAnimationStart = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        this._animationStarted.emit(event);\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatDrawer.prototype._onAnimationEnd = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var fromState = event.fromState, toState = event.toState;\n        if (toState.indexOf('open') === 0 && fromState === 'void') {\n            this.openedChange.emit(true);\n        }\n        else if (toState === 'void' && fromState.indexOf('open') === 0) {\n            this.openedChange.emit(false);\n        }\n    };\n    Object.defineProperty(MatDrawer.prototype, \"_width\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return MatDrawer;\n}());\n/**\n * <mat-drawer-container> component.\n *\n * This is the parent component to one or two <mat-drawer>s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nvar MatDrawerContainer = /** @class */ (function () {\n    function MatDrawerContainer(_dir, _element, _renderer, _ngZone, _changeDetectorRef) {\n        var _this = this;\n        this._dir = _dir;\n        this._element = _element;\n        this._renderer = _renderer;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        // If a `Dir` directive exists up the tree, listen direction changes and update the left/right\n        // properties to point to the proper start/end.\n        if (_dir != null) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(function () { return _this._validateDrawers(); });\n        }\n    }\n    Object.defineProperty(MatDrawerContainer.prototype, \"start\", {\n        /** The drawer child with the `start` position. */\n        get: /**\n         * The drawer child with the `start` position.\n         * @return {?}\n         */\n        function () { return this._start; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatDrawerContainer.prototype, \"end\", {\n        /** The drawer child with the `end` position. */\n        get: /**\n         * The drawer child with the `end` position.\n         * @return {?}\n         */\n        function () { return this._end; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatDrawerContainer.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._drawers.changes.pipe(startWith(null)).subscribe(function () {\n            _this._validateDrawers();\n            _this._drawers.forEach(function (drawer) {\n                _this._watchDrawerToggle(drawer);\n                _this._watchDrawerPosition(drawer);\n                _this._watchDrawerMode(drawer);\n            });\n            if (!_this._drawers.length ||\n                _this._isDrawerOpen(_this._start) ||\n                _this._isDrawerOpen(_this._end)) {\n                _this._updateContentMargins();\n            }\n            _this._changeDetectorRef.markForCheck();\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MatDrawerContainer.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._destroyed.next();\n        this._destroyed.complete();\n    };\n    /** Calls `open` of both start and end drawers */\n    /**\n     * Calls `open` of both start and end drawers\n     * @return {?}\n     */\n    MatDrawerContainer.prototype.open = /**\n     * Calls `open` of both start and end drawers\n     * @return {?}\n     */\n    function () {\n        this._drawers.forEach(function (drawer) { return drawer.open(); });\n    };\n    /** Calls `close` of both start and end drawers */\n    /**\n     * Calls `close` of both start and end drawers\n     * @return {?}\n     */\n    MatDrawerContainer.prototype.close = /**\n     * Calls `close` of both start and end drawers\n     * @return {?}\n     */\n    function () {\n        this._drawers.forEach(function (drawer) { return drawer.close(); });\n    };\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     * @param {?} drawer\n     * @return {?}\n     */\n    MatDrawerContainer.prototype._watchDrawerToggle = /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     * @param {?} drawer\n     * @return {?}\n     */\n    function (drawer) {\n        var _this = this;\n        drawer._animationStarted.pipe(takeUntil(this._drawers.changes), filter(function (event) { return event.fromState !== event.toState; }))\n            .subscribe(function (event) {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant') {\n                _this._renderer.addClass(_this._element.nativeElement, 'mat-drawer-transition');\n            }\n            _this._updateContentMargins();\n            _this._changeDetectorRef.markForCheck();\n        });\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(function () {\n                return _this._setContainerClass(drawer.opened);\n            });\n        }\n    };\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     * @param {?} drawer\n     * @return {?}\n     */\n    MatDrawerContainer.prototype._watchDrawerPosition = /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     * @param {?} drawer\n     * @return {?}\n     */\n    function (drawer) {\n        var _this = this;\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(function () {\n            _this._ngZone.onMicrotaskEmpty.asObservable().pipe(first()).subscribe(function () {\n                _this._validateDrawers();\n            });\n        });\n    };\n    /**\n     * Subscribes to changes in drawer mode so we can run change detection.\n     * @param {?} drawer\n     * @return {?}\n     */\n    MatDrawerContainer.prototype._watchDrawerMode = /**\n     * Subscribes to changes in drawer mode so we can run change detection.\n     * @param {?} drawer\n     * @return {?}\n     */\n    function (drawer) {\n        var _this = this;\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe(function () {\n                _this._updateContentMargins();\n                _this._changeDetectorRef.markForCheck();\n            });\n        }\n    };\n    /**\n     * Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element.\n     * @param {?} isAdd\n     * @return {?}\n     */\n    MatDrawerContainer.prototype._setContainerClass = /**\n     * Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element.\n     * @param {?} isAdd\n     * @return {?}\n     */\n    function (isAdd) {\n        if (isAdd) {\n            this._renderer.addClass(this._element.nativeElement, 'mat-drawer-opened');\n        }\n        else {\n            this._renderer.removeClass(this._element.nativeElement, 'mat-drawer-opened');\n        }\n    };\n    /**\n     * Validate the state of the drawer children components.\n     * @return {?}\n     */\n    MatDrawerContainer.prototype._validateDrawers = /**\n     * Validate the state of the drawer children components.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach(function (drawer) {\n            if (drawer.position == 'end') {\n                if (_this._end != null) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                _this._end = drawer;\n            }\n            else {\n                if (_this._start != null) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                _this._start = drawer;\n            }\n        });\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir == null || this._dir.value == 'ltr') {\n            this._left = this._start;\n            this._right = this._end;\n        }\n        else {\n            this._left = this._end;\n            this._right = this._start;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatDrawerContainer.prototype._onBackdropClicked = /**\n     * @return {?}\n     */\n    function () {\n        this.backdropClick.emit();\n        this._closeModalDrawer();\n    };\n    /**\n     * @return {?}\n     */\n    MatDrawerContainer.prototype._closeModalDrawer = /**\n     * @return {?}\n     */\n    function () {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter(function (drawer) { return drawer && !drawer.disableClose && drawer.mode !== 'side'; })\n            .forEach(function (drawer) { return ((drawer)).close(); });\n    };\n    /**\n     * @return {?}\n     */\n    MatDrawerContainer.prototype._isShowingBackdrop = /**\n     * @return {?}\n     */\n    function () {\n        return (this._isDrawerOpen(this._start) && /** @type {?} */ ((this._start)).mode != 'side')\n            || (this._isDrawerOpen(this._end) && /** @type {?} */ ((this._end)).mode != 'side');\n    };\n    /**\n     * @param {?} drawer\n     * @return {?}\n     */\n    MatDrawerContainer.prototype._isDrawerOpen = /**\n     * @param {?} drawer\n     * @return {?}\n     */\n    function (drawer) {\n        return drawer != null && drawer.opened;\n    };\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     * @return {?}\n     */\n    MatDrawerContainer.prototype._updateContentMargins = /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     * @return {?}\n     */\n    function () {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        var /** @type {?} */ left = 0;\n        var /** @type {?} */ right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._width;\n            }\n            else if (this._left.mode == 'push') {\n                var /** @type {?} */ width = this._left._width;\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._width;\n            }\n            else if (this._right.mode == 'push') {\n                var /** @type {?} */ width = this._right._width;\n                right += width;\n                left -= width;\n            }\n        }\n        this._contentMargins.next({ left: left, right: right });\n    };\n    return MatDrawerContainer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MatSidenavContent = /** @class */ (function (_super) {\n    __extends(MatSidenavContent, _super);\n    function MatSidenavContent(changeDetectorRef, container) {\n        return _super.call(this, changeDetectorRef, container) || this;\n    }\n    return MatSidenavContent;\n}(MatDrawerContent));\nvar MatSidenav = /** @class */ (function (_super) {\n    __extends(MatSidenav, _super);\n    function MatSidenav() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MatSidenav.prototype, \"fixedInViewport\", {\n        get: /**\n         * Whether the sidenav is fixed in the viewport.\n         * @return {?}\n         */\n        function () { return this._fixedInViewport; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._fixedInViewport = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSidenav.prototype, \"fixedTopGap\", {\n        get: /**\n         * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n         * mode.\n         * @return {?}\n         */\n        function () { return this._fixedTopGap; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._fixedTopGap = coerceNumberProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSidenav.prototype, \"fixedBottomGap\", {\n        get: /**\n         * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n         * fixed mode.\n         * @return {?}\n         */\n        function () { return this._fixedBottomGap; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._fixedBottomGap = coerceNumberProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    return MatSidenav;\n}(MatDrawer));\nvar MatSidenavContainer = /** @class */ (function (_super) {\n    __extends(MatSidenavContainer, _super);\n    function MatSidenavContainer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MatSidenavContainer;\n}(MatDrawerContainer));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatSidenavModule = /** @class */ (function () {\n    function MatSidenavModule() {\n    }\n    return MatSidenavModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatSidenavModule, throwMatDuplicatedDrawerError, MatDrawerToggleResult, MatDrawerContent, MatDrawer, MatDrawerContainer, MatSidenavContent, MatSidenav, MatSidenavContainer };\n//# sourceMappingURL=sidenav.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport '@angular/cdk/observers';\nimport '@angular/cdk/platform';\nimport { forwardRef } from '@angular/core';\nimport { applyCssTransform, mixinColor, mixinDisableRipple, mixinDisabled, mixinTabIndex } from '@angular/material/core';\nimport '@angular/platform-browser';\nimport '@angular/cdk/a11y';\nimport { __extends } from 'tslib';\nimport * as tslib_1 from 'tslib';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return MatSlideToggle; }),\n    multi: true\n};\n/**\n * Change event object emitted by a MatSlideToggle.\n */\nvar MatSlideToggleChange = /** @class */ (function () {\n    function MatSlideToggleChange() {\n    }\n    return MatSlideToggleChange;\n}());\n/**\n * \\@docs-private\n */\nvar MatSlideToggleBase = /** @class */ (function () {\n    function MatSlideToggleBase(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n    }\n    return MatSlideToggleBase;\n}());\nvar _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/**\n * Represents a slidable \"switch\" toggle that can be moved between on and off.\n */\nvar MatSlideToggle = /** @class */ (function (_super) {\n    __extends(MatSlideToggle, _super);\n    function MatSlideToggle(elementRef, renderer, _platform, _focusMonitor, _changeDetectorRef, tabIndex) {\n        var _this = _super.call(this, renderer, elementRef) || this;\n        _this._platform = _platform;\n        _this._focusMonitor = _focusMonitor;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this.tabIndex = parseInt(tabIndex) || 0;\n        return _this;\n    }\n    Object.defineProperty(MatSlideToggle.prototype, \"required\", {\n        get: /**\n         * Whether the slide-toggle is required.\n         * @return {?}\n         */\n        function () { return this._required; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._required = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlideToggle.prototype, \"checked\", {\n        get: /**\n         * Whether the slide-toggle element is checked or not\n         * @return {?}\n         */\n        function () { return this._checked; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._checked = coerceBooleanProperty(value);\n            this._changeDetectorRef.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlideToggle.prototype, \"inputId\", {\n        /** Returns the unique id for the visual hidden input. */\n        get: /**\n         * Returns the unique id for the visual hidden input.\n         * @return {?}\n         */\n        function () { return (this.id || this._uniqueId) + \"-input\"; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatSlideToggle.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._slideRenderer = new SlideToggleRenderer(this._elementRef, this._platform);\n        this._focusMonitor.monitor(this._inputElement.nativeElement, false)\n            .subscribe(function (focusOrigin) { return _this._onInputFocusChange(focusOrigin); });\n    };\n    /**\n     * @return {?}\n     */\n    MatSlideToggle.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    };\n    /**\n     * This function will called if the underlying input changed its value through user interaction.\n     */\n    /**\n     * This function will called if the underlying input changed its value through user interaction.\n     * @param {?} event\n     * @return {?}\n     */\n    MatSlideToggle.prototype._onChangeEvent = /**\n     * This function will called if the underlying input changed its value through user interaction.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        // Sync the value from the underlying input element with the slide-toggle component.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event if the native input emitted one.\n        // It is important to only emit it, if the native input triggered one, because we don't want\n        // to trigger a change event, when the `checked` variable changes programmatically.\n        this._emitChangeEvent();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatSlideToggle.prototype._onInputClick = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // In some situations the user will release the mouse on the label element. The label element\n        // redirects the click to the underlying input element and will result in a value change.\n        // Prevent the default behavior if dragging, because the value will be set after drag.\n        if (this._slideRenderer.dragging) {\n            event.preventDefault();\n        }\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    };\n    /** Implemented as part of ControlValueAccessor. */\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    MatSlideToggle.prototype.writeValue = /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this.checked = !!value;\n    };\n    /** Implemented as part of ControlValueAccessor. */\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    MatSlideToggle.prototype.registerOnChange = /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onChange = fn;\n    };\n    /** Implemented as part of ControlValueAccessor. */\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    MatSlideToggle.prototype.registerOnTouched = /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this.onTouched = fn;\n    };\n    /** Implemented as a part of ControlValueAccessor. */\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    MatSlideToggle.prototype.setDisabledState = /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    };\n    /** Focuses the slide-toggle. */\n    /**\n     * Focuses the slide-toggle.\n     * @return {?}\n     */\n    MatSlideToggle.prototype.focus = /**\n     * Focuses the slide-toggle.\n     * @return {?}\n     */\n    function () {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    };\n    /** Toggles the checked state of the slide-toggle. */\n    /**\n     * Toggles the checked state of the slide-toggle.\n     * @return {?}\n     */\n    MatSlideToggle.prototype.toggle = /**\n     * Toggles the checked state of the slide-toggle.\n     * @return {?}\n     */\n    function () {\n        this.checked = !this.checked;\n    };\n    /**\n     * Function is called whenever the focus changes for the input element.\n     * @param {?} focusOrigin\n     * @return {?}\n     */\n    MatSlideToggle.prototype._onInputFocusChange = /**\n     * Function is called whenever the focus changes for the input element.\n     * @param {?} focusOrigin\n     * @return {?}\n     */\n    function (focusOrigin) {\n        if (!this._focusRipple && focusOrigin === 'keyboard') {\n            // For keyboard focus show a persistent ripple as focus indicator.\n            this._focusRipple = this._ripple.launch(0, 0, { persistent: true, centered: true });\n        }\n        else if (!focusOrigin) {\n            this.onTouched();\n            // Fade out and clear the focus ripple if one is currently present.\n            if (this._focusRipple) {\n                this._focusRipple.fadeOut();\n                this._focusRipple = null;\n            }\n        }\n    };\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     * @return {?}\n     */\n    MatSlideToggle.prototype._emitChangeEvent = /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ event = new MatSlideToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n        this.onChange(this.checked);\n        this.change.emit(event);\n    };\n    /**\n     * @return {?}\n     */\n    MatSlideToggle.prototype._onDragStart = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.disabled) {\n            this._slideRenderer.startThumbDrag(this.checked);\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatSlideToggle.prototype._onDrag = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (this._slideRenderer.dragging) {\n            this._slideRenderer.updateThumbPosition(event.deltaX);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatSlideToggle.prototype._onDragEnd = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._slideRenderer.dragging) {\n            var /** @type {?} */ _previousChecked = this.checked;\n            this.checked = this._slideRenderer.dragPercentage > 50;\n            if (_previousChecked !== this.checked) {\n                this._emitChangeEvent();\n            }\n            // The drag should be stopped outside of the current event handler, because otherwise the\n            // click event will be fired before and will revert the drag change.\n            setTimeout(function () { return _this._slideRenderer.stopThumbDrag(); });\n        }\n    };\n    /** Method being called whenever the label text changes. */\n    /**\n     * Method being called whenever the label text changes.\n     * @return {?}\n     */\n    MatSlideToggle.prototype._onLabelTextChange = /**\n     * Method being called whenever the label text changes.\n     * @return {?}\n     */\n    function () {\n        // This method is getting called whenever the label of the slide-toggle changes.\n        // Since the slide-toggle uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    };\n    return MatSlideToggle;\n}(_MatSlideToggleMixinBase));\n/**\n * Renderer for the Slide Toggle component, which separates DOM modification in its own class\n */\nvar SlideToggleRenderer = /** @class */ (function () {\n    function SlideToggleRenderer(elementRef, platform) {\n        // We only need to interact with these elements when we're on the browser, so only grab\n        // the reference in that case.\n        if (platform.isBrowser) {\n            this._thumbEl = elementRef.nativeElement.querySelector('.mat-slide-toggle-thumb-container');\n            this._thumbBarEl = elementRef.nativeElement.querySelector('.mat-slide-toggle-bar');\n        }\n    }\n    /** Initializes the drag of the slide-toggle. */\n    /**\n     * Initializes the drag of the slide-toggle.\n     * @param {?} checked\n     * @return {?}\n     */\n    SlideToggleRenderer.prototype.startThumbDrag = /**\n     * Initializes the drag of the slide-toggle.\n     * @param {?} checked\n     * @return {?}\n     */\n    function (checked) {\n        if (this.dragging) {\n            return;\n        }\n        this._thumbBarWidth = this._thumbBarEl.clientWidth - this._thumbEl.clientWidth;\n        this._thumbEl.classList.add('mat-dragging');\n        this._previousChecked = checked;\n        this.dragging = true;\n    };\n    /** Resets the current drag and returns the new checked value. */\n    /**\n     * Resets the current drag and returns the new checked value.\n     * @return {?}\n     */\n    SlideToggleRenderer.prototype.stopThumbDrag = /**\n     * Resets the current drag and returns the new checked value.\n     * @return {?}\n     */\n    function () {\n        if (!this.dragging) {\n            return false;\n        }\n        this.dragging = false;\n        this._thumbEl.classList.remove('mat-dragging');\n        // Reset the transform because the component will take care of the thumb position after drag.\n        applyCssTransform(this._thumbEl, '');\n        return this.dragPercentage > 50;\n    };\n    /** Updates the thumb containers position from the specified distance. */\n    /**\n     * Updates the thumb containers position from the specified distance.\n     * @param {?} distance\n     * @return {?}\n     */\n    SlideToggleRenderer.prototype.updateThumbPosition = /**\n     * Updates the thumb containers position from the specified distance.\n     * @param {?} distance\n     * @return {?}\n     */\n    function (distance) {\n        this.dragPercentage = this._getDragPercentage(distance);\n        // Calculate the moved distance based on the thumb bar width.\n        var /** @type {?} */ dragX = (this.dragPercentage / 100) * this._thumbBarWidth;\n        applyCssTransform(this._thumbEl, \"translate3d(\" + dragX + \"px, 0, 0)\");\n    };\n    /**\n     * Retrieves the percentage of thumb from the moved distance. Percentage as fraction of 100.\n     * @param {?} distance\n     * @return {?}\n     */\n    SlideToggleRenderer.prototype._getDragPercentage = /**\n     * Retrieves the percentage of thumb from the moved distance. Percentage as fraction of 100.\n     * @param {?} distance\n     * @return {?}\n     */\n    function (distance) {\n        var /** @type {?} */ percentage = (distance / this._thumbBarWidth) * 100;\n        // When the toggle was initially checked, then we have to start the drag at the end.\n        if (this._previousChecked) {\n            percentage += 100;\n        }\n        return Math.max(0, Math.min(percentage, 100));\n    };\n    return SlideToggleRenderer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatSlideToggleModule = /** @class */ (function () {\n    function MatSlideToggleModule() {\n    }\n    return MatSlideToggleModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatSlideToggleModule, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggleChange, MatSlideToggleBase, _MatSlideToggleMixinBase, MatSlideToggle };\n//# sourceMappingURL=slide-toggle.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\nimport '@angular/common';\nimport { forwardRef } from '@angular/core';\nimport { mixinColor, mixinDisabled } from '@angular/material/core';\nimport '@angular/platform-browser';\nimport { __extends } from 'tslib';\nimport * as tslib_1 from 'tslib';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { DOWN_ARROW, END, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport 'rxjs/Subscription';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nvar MIN_AUTO_TICK_SEPARATION = 30;\n/**\n * The thumb gap size for a disabled slider.\n */\nvar DISABLED_THUMB_GAP = 7;\n/**\n * The thumb gap size for a non-active slider at its minimum value.\n */\nvar MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/**\n * The thumb gap size for an active slider at its minimum value.\n */\nvar MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n */\nvar MAT_SLIDER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return MatSlider; }),\n    multi: true\n};\n/**\n * A simple change event emitted by the MatSlider component.\n */\nvar MatSliderChange = /** @class */ (function () {\n    function MatSliderChange() {\n    }\n    return MatSliderChange;\n}());\n/**\n * \\@docs-private\n */\nvar MatSliderBase = /** @class */ (function () {\n    function MatSliderBase(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n    }\n    return MatSliderBase;\n}());\nvar _MatSliderMixinBase = mixinColor(mixinDisabled(MatSliderBase), 'accent');\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nvar MatSlider = /** @class */ (function (_super) {\n    __extends(MatSlider, _super);\n    function MatSlider(renderer, elementRef, _focusMonitor, _changeDetectorRef, _dir) {\n        var _this = _super.call(this, renderer, elementRef) || this;\n        _this._focusMonitor = _focusMonitor;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._dir = _dir;\n        return _this;\n    }\n    Object.defineProperty(MatSlider.prototype, \"invert\", {\n        get: /**\n         * Whether the slider is inverted.\n         * @return {?}\n         */\n        function () { return this._invert; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._invert = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlider.prototype, \"max\", {\n        get: /**\n         * The maximum value that the slider can have.\n         * @return {?}\n         */\n        function () { return this._max; },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this._max = coerceNumberProperty(v, this._max);\n            this._percent = this._calculatePercentage(this._value);\n            // Since this also modifies the percentage, we need to let the change detection know.\n            this._changeDetectorRef.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlider.prototype, \"min\", {\n        get: /**\n         * The minimum value that the slider can have.\n         * @return {?}\n         */\n        function () { return this._min; },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this._min = coerceNumberProperty(v, this._min);\n            // If the value wasn't explicitly set by the user, set it to the min.\n            if (this._value === null) {\n                this.value = this._min;\n            }\n            this._percent = this._calculatePercentage(this._value);\n            // Since this also modifies the percentage, we need to let the change detection know.\n            this._changeDetectorRef.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlider.prototype, \"step\", {\n        get: /**\n         * The values at which the thumb will snap.\n         * @return {?}\n         */\n        function () { return this._step; },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this._step = coerceNumberProperty(v, this._step);\n            if (this._step % 1 !== 0) {\n                this._roundLabelTo = /** @type {?} */ ((this._step.toString().split('.').pop())).length;\n            }\n            // Since this could modify the label, we need to notify the change detection.\n            this._changeDetectorRef.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlider.prototype, \"thumbLabel\", {\n        get: /**\n         * Whether or not to show the thumb label.\n         * @return {?}\n         */\n        function () { return this._thumbLabel; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._thumbLabel = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlider.prototype, \"_thumbLabelDeprecated\", {\n        get: /**\n         * @deprecated\n         * @return {?}\n         */\n        function () { return this._thumbLabel; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._thumbLabel = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlider.prototype, \"tickInterval\", {\n        get: /**\n         * How often to show ticks. Relative to the step so that a tick always appears on a step.\n         * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n         * @return {?}\n         */\n        function () { return this._tickInterval; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (value === 'auto') {\n                this._tickInterval = 'auto';\n            }\n            else if (typeof value === 'number' || typeof value === 'string') {\n                this._tickInterval = coerceNumberProperty(value, /** @type {?} */ (this._tickInterval));\n            }\n            else {\n                this._tickInterval = 0;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlider.prototype, \"_tickIntervalDeprecated\", {\n        get: /**\n         * @deprecated\n         * @return {?}\n         */\n        function () { return this.tickInterval; },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) { this.tickInterval = v; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlider.prototype, \"value\", {\n        get: /**\n         * Value of the slider.\n         * @return {?}\n         */\n        function () {\n            // If the value needs to be read and it is still uninitialized, initialize it to the min.\n            if (this._value === null) {\n                this.value = this._min;\n            }\n            return this._value;\n        },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            if (v !== this._value) {\n                this._value = coerceNumberProperty(v, this._value || 0);\n                this._percent = this._calculatePercentage(this._value);\n                // Since this also modifies the percentage, we need to let the change detection know.\n                this._changeDetectorRef.markForCheck();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlider.prototype, \"vertical\", {\n        get: /**\n         * Whether the slider is vertical.\n         * @return {?}\n         */\n        function () { return this._vertical; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._vertical = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlider.prototype, \"displayValue\", {\n        /** The value to be used for display purposes. */\n        get: /**\n         * The value to be used for display purposes.\n         * @return {?}\n         */\n        function () {\n            // Note that this could be improved further by rounding something like 0.999 to 1 or\n            // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n            // every change detection cycle.\n            if (this._roundLabelTo && this.value && this.value % 1 !== 0) {\n                return this.value.toFixed(this._roundLabelTo);\n            }\n            return this.value || 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlider.prototype, \"percent\", {\n        /** The percentage of the slider that coincides with the value. */\n        get: /**\n         * The percentage of the slider that coincides with the value.\n         * @return {?}\n         */\n        function () { return this._clamp(this._percent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlider.prototype, \"_invertAxis\", {\n        /**\n         * Whether the axis of the slider is inverted.\n         * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n         */\n        get: /**\n         * Whether the axis of the slider is inverted.\n         * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n         * @return {?}\n         */\n        function () {\n            // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n            // top. However from a y-axis standpoint this is inverted.\n            return this.vertical ? !this.invert : this.invert;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlider.prototype, \"_isMinValue\", {\n        /** Whether the slider is at its minimum value. */\n        get: /**\n         * Whether the slider is at its minimum value.\n         * @return {?}\n         */\n        function () {\n            return this.percent === 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlider.prototype, \"_thumbGap\", {\n        /**\n         * The amount of space to leave between the slider thumb and the track fill & track background\n         * elements.\n         */\n        get: /**\n         * The amount of space to leave between the slider thumb and the track fill & track background\n         * elements.\n         * @return {?}\n         */\n        function () {\n            if (this.disabled) {\n                return DISABLED_THUMB_GAP;\n            }\n            if (this._isMinValue && !this.thumbLabel) {\n                return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n            }\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlider.prototype, \"_trackBackgroundStyles\", {\n        /** CSS styles for the track background element. */\n        get: /**\n         * CSS styles for the track background element.\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n            var /** @type {?} */ sign = this._invertMouseCoords ? '-' : '';\n            return {\n                'transform': \"translate\" + axis + \"(\" + sign + this._thumbGap + \"px) scale\" + axis + \"(\" + (1 - this.percent) + \")\"\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlider.prototype, \"_trackFillStyles\", {\n        /** CSS styles for the track fill element. */\n        get: /**\n         * CSS styles for the track fill element.\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n            var /** @type {?} */ sign = this._invertMouseCoords ? '' : '-';\n            return {\n                'transform': \"translate\" + axis + \"(\" + sign + this._thumbGap + \"px) scale\" + axis + \"(\" + this.percent + \")\"\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlider.prototype, \"_ticksContainerStyles\", {\n        /** CSS styles for the ticks container element. */\n        get: /**\n         * CSS styles for the ticks container element.\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n            // For a horizontal slider in RTL languages we push the ticks container off the left edge\n            // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n            var /** @type {?} */ sign = !this.vertical && this._direction == 'rtl' ? '' : '-';\n            var /** @type {?} */ offset = this._tickIntervalPercent / 2 * 100;\n            return {\n                'transform': \"translate\" + axis + \"(\" + sign + offset + \"%)\"\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlider.prototype, \"_ticksStyles\", {\n        /** CSS styles for the ticks element. */\n        get: /**\n         * CSS styles for the ticks element.\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ tickSize = this._tickIntervalPercent * 100;\n            var /** @type {?} */ backgroundSize = this.vertical ? \"2px \" + tickSize + \"%\" : tickSize + \"% 2px\";\n            var /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n            // Depending on the direction we pushed the ticks container, push the ticks the opposite\n            // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n            // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n            var /** @type {?} */ sign = !this.vertical && this._direction == 'rtl' ? '-' : '';\n            var /** @type {?} */ rotate = !this.vertical && this._direction == 'rtl' ? ' rotate(180deg)' : '';\n            var /** @type {?} */ styles = {\n                'backgroundSize': backgroundSize,\n                // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n                'transform': \"translateZ(0) translate\" + axis + \"(\" + sign + tickSize / 2 + \"%)\" + rotate\n            };\n            if (this._isMinValue && this._thumbGap) {\n                var /** @type {?} */ side = this.vertical ?\n                    (this._invertAxis ? 'Bottom' : 'Top') :\n                    (this._invertAxis ? 'Right' : 'Left');\n                styles[\"padding\" + side] = this._thumbGap + \"px\";\n            }\n            return styles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlider.prototype, \"_thumbContainerStyles\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n            // For a horizontal slider in RTL languages we push the thumb container off the left edge\n            // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n            var /** @type {?} */ invertOffset = (this._direction == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n            var /** @type {?} */ offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n            return {\n                'transform': \"translate\" + axis + \"(-\" + offset + \"%)\"\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlider.prototype, \"_invertMouseCoords\", {\n        get: /**\n         * Whether mouse events should be converted to a slider position by calculating their distance\n         * from the right or bottom edge of the slider as opposed to the top or left.\n         * @return {?}\n         */\n        function () {\n            return (this._direction == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSlider.prototype, \"_direction\", {\n        get: /**\n         * The language direction for this slider element.\n         * @return {?}\n         */\n        function () {\n            return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatSlider.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._focusMonitor\n            .monitor(this._elementRef.nativeElement, true)\n            .subscribe(function (origin) {\n            _this._isActive = !!origin && origin !== 'keyboard';\n            _this._changeDetectorRef.detectChanges();\n        });\n        if (this._dir) {\n            this._dirChangeSubscription = this._dir.change.subscribe(function () {\n                _this._changeDetectorRef.markForCheck();\n            });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatSlider.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        this._dirChangeSubscription.unsubscribe();\n    };\n    /**\n     * @return {?}\n     */\n    MatSlider.prototype._onMouseenter = /**\n     * @return {?}\n     */\n    function () {\n        if (this.disabled) {\n            return;\n        }\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatSlider.prototype._onClick = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (this.disabled) {\n            return;\n        }\n        var /** @type {?} */ oldValue = this.value;\n        this._isSliding = false;\n        this._focusHostElement();\n        this._updateValueFromPosition({ x: event.clientX, y: event.clientY });\n        /* Emit a change and input event if the value changed. */\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatSlider.prototype._onSlide = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (this.disabled) {\n            return;\n        }\n        // The slide start event sometimes fails to fire on iOS, so if we're not already in the sliding\n        // state, call the slide start handler manually.\n        if (!this._isSliding) {\n            this._onSlideStart(null);\n        }\n        // Prevent the slide from selecting anything else.\n        event.preventDefault();\n        var /** @type {?} */ oldValue = this.value;\n        this._updateValueFromPosition({ x: event.center.x, y: event.center.y });\n        // Native range elements always emit `input` events when the value changed while sliding.\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatSlider.prototype._onSlideStart = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (this.disabled || this._isSliding) {\n            return;\n        }\n        // Simulate mouseenter in case this is a mobile device.\n        this._onMouseenter();\n        this._isSliding = true;\n        this._focusHostElement();\n        this._valueOnSlideStart = this.value;\n        if (event) {\n            this._updateValueFromPosition({ x: event.center.x, y: event.center.y });\n            event.preventDefault();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatSlider.prototype._onSlideEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._isSliding = false;\n        if (this._valueOnSlideStart != this.value) {\n            this._emitChangeEvent();\n        }\n        this._valueOnSlideStart = null;\n    };\n    /**\n     * @return {?}\n     */\n    MatSlider.prototype._onFocus = /**\n     * @return {?}\n     */\n    function () {\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    };\n    /**\n     * @return {?}\n     */\n    MatSlider.prototype._onBlur = /**\n     * @return {?}\n     */\n    function () {\n        this.onTouched();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatSlider.prototype._onKeydown = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (this.disabled) {\n            return;\n        }\n        var /** @type {?} */ oldValue = this.value;\n        switch (event.keyCode) {\n            case PAGE_UP:\n                this._increment(10);\n                break;\n            case PAGE_DOWN:\n                this._increment(-10);\n                break;\n            case END:\n                this.value = this.max;\n                break;\n            case HOME:\n                this.value = this.min;\n                break;\n            case LEFT_ARROW:\n                // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n                // inverted slider the thumb moves in that direction. However for a blind user, nothing\n                // about the slider indicates that it is inverted. They will expect left to be decrement,\n                // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n                // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n                // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n                // sighted users, therefore we do not swap the meaning.\n                this._increment(this._direction == 'rtl' ? 1 : -1);\n                break;\n            case UP_ARROW:\n                this._increment(1);\n                break;\n            case RIGHT_ARROW:\n                // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n                this._increment(this._direction == 'rtl' ? -1 : 1);\n                break;\n            case DOWN_ARROW:\n                this._increment(-1);\n                break;\n            default:\n                // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n                // it.\n                return;\n        }\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n        this._isSliding = true;\n        event.preventDefault();\n    };\n    /**\n     * @return {?}\n     */\n    MatSlider.prototype._onKeyup = /**\n     * @return {?}\n     */\n    function () {\n        this._isSliding = false;\n    };\n    /**\n     * Increments the slider by the given number of steps (negative number decrements).\n     * @param {?} numSteps\n     * @return {?}\n     */\n    MatSlider.prototype._increment = /**\n     * Increments the slider by the given number of steps (negative number decrements).\n     * @param {?} numSteps\n     * @return {?}\n     */\n    function (numSteps) {\n        this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n    };\n    /**\n     * Calculate the new value from the new physical location. The value will always be snapped.\n     * @param {?} pos\n     * @return {?}\n     */\n    MatSlider.prototype._updateValueFromPosition = /**\n     * Calculate the new value from the new physical location. The value will always be snapped.\n     * @param {?} pos\n     * @return {?}\n     */\n    function (pos) {\n        if (!this._sliderDimensions) {\n            return;\n        }\n        var /** @type {?} */ offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n        var /** @type {?} */ size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        var /** @type {?} */ posComponent = this.vertical ? pos.y : pos.x;\n        // The exact value is calculated from the event and used to find the closest snap value.\n        var /** @type {?} */ percent = this._clamp((posComponent - offset) / size);\n        if (this._invertMouseCoords) {\n            percent = 1 - percent;\n        }\n        var /** @type {?} */ exactValue = this._calculateValue(percent);\n        // This calculation finds the closest step by finding the closest whole number divisible by the\n        // step relative to the min.\n        var /** @type {?} */ closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n        // The value needs to snap to the min and max.\n        this.value = this._clamp(closestValue, this.min, this.max);\n    };\n    /**\n     * Emits a change event if the current value is different from the last emitted value.\n     * @return {?}\n     */\n    MatSlider.prototype._emitChangeEvent = /**\n     * Emits a change event if the current value is different from the last emitted value.\n     * @return {?}\n     */\n    function () {\n        this._controlValueAccessorChangeFn(this.value);\n        this.change.emit(this._createChangeEvent());\n    };\n    /**\n     * Emits an input event when the current value is different from the last emitted value.\n     * @return {?}\n     */\n    MatSlider.prototype._emitInputEvent = /**\n     * Emits an input event when the current value is different from the last emitted value.\n     * @return {?}\n     */\n    function () {\n        this.input.emit(this._createChangeEvent());\n    };\n    /**\n     * Updates the amount of space between ticks as a percentage of the width of the slider.\n     * @return {?}\n     */\n    MatSlider.prototype._updateTickIntervalPercent = /**\n     * Updates the amount of space between ticks as a percentage of the width of the slider.\n     * @return {?}\n     */\n    function () {\n        if (!this.tickInterval || !this._sliderDimensions) {\n            return;\n        }\n        if (this.tickInterval == 'auto') {\n            var /** @type {?} */ trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n            var /** @type {?} */ pixelsPerStep = trackSize * this.step / (this.max - this.min);\n            var /** @type {?} */ stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n            var /** @type {?} */ pixelsPerTick = stepsPerTick * this.step;\n            this._tickIntervalPercent = pixelsPerTick / trackSize;\n        }\n        else {\n            this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n        }\n    };\n    /**\n     * Creates a slider change object from the specified value.\n     * @param {?=} value\n     * @return {?}\n     */\n    MatSlider.prototype._createChangeEvent = /**\n     * Creates a slider change object from the specified value.\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) {\n        if (value === void 0) { value = this.value; }\n        var /** @type {?} */ event = new MatSliderChange();\n        event.source = this;\n        event.value = value;\n        return event;\n    };\n    /**\n     * Calculates the percentage of the slider that a value is.\n     * @param {?} value\n     * @return {?}\n     */\n    MatSlider.prototype._calculatePercentage = /**\n     * Calculates the percentage of the slider that a value is.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return ((value || 0) - this.min) / (this.max - this.min);\n    };\n    /**\n     * Calculates the value a percentage of the slider corresponds to.\n     * @param {?} percentage\n     * @return {?}\n     */\n    MatSlider.prototype._calculateValue = /**\n     * Calculates the value a percentage of the slider corresponds to.\n     * @param {?} percentage\n     * @return {?}\n     */\n    function (percentage) {\n        return this.min + percentage * (this.max - this.min);\n    };\n    /**\n     * Return a number between two numbers.\n     * @param {?} value\n     * @param {?=} min\n     * @param {?=} max\n     * @return {?}\n     */\n    MatSlider.prototype._clamp = /**\n     * Return a number between two numbers.\n     * @param {?} value\n     * @param {?=} min\n     * @param {?=} max\n     * @return {?}\n     */\n    function (value, min, max) {\n        if (min === void 0) { min = 0; }\n        if (max === void 0) { max = 1; }\n        return Math.max(min, Math.min(value, max));\n    };\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     * @return {?}\n     */\n    MatSlider.prototype._getSliderDimensions = /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     * @return {?}\n     */\n    function () {\n        return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n    };\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     * @return {?}\n     */\n    MatSlider.prototype._focusHostElement = /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     * @return {?}\n     */\n    function () {\n        this._elementRef.nativeElement.focus();\n    };\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    MatSlider.prototype.writeValue = /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this.value = value;\n    };\n    /**\n     * Registers a callback to eb triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    /**\n     * Registers a callback to eb triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    MatSlider.prototype.registerOnChange = /**\n     * Registers a callback to eb triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    function (fn) {\n        this._controlValueAccessorChangeFn = fn;\n    };\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    MatSlider.prototype.registerOnTouched = /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn Callback to be registered.\n     * @return {?}\n     */\n    function (fn) {\n        this.onTouched = fn;\n    };\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param isDisabled\n     */\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    MatSlider.prototype.setDisabledState = /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this.disabled = isDisabled;\n    };\n    return MatSlider;\n}(_MatSliderMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatSliderModule = /** @class */ (function () {\n    function MatSliderModule() {\n    }\n    return MatSliderModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatSliderModule, MAT_SLIDER_VALUE_ACCESSOR, MatSliderChange, MatSliderBase, _MatSliderMixinBase, MatSlider };\n//# sourceMappingURL=slider.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken } from '@angular/core';\nimport '@angular/common';\nimport { OverlayConfig } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, ComponentPortal, PortalInjector } from '@angular/cdk/portal';\nimport '@angular/cdk/a11y';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport { AnimationCurves, AnimationDurations, extendObject } from '@angular/material/core';\nimport '@angular/animations';\nimport 'rxjs/Subject';\nimport { __extends } from 'tslib';\nimport * as tslib_1 from 'tslib';\nimport { first } from 'rxjs/operators/first';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n */\nvar MatSnackBarRef = /** @class */ (function () {\n    function MatSnackBarRef(containerInstance, _overlayRef) {\n        var _this = this;\n        this._overlayRef = _overlayRef;\n        this.containerInstance = containerInstance;\n        // Dismiss snackbar on action.\n        this.onAction().subscribe(function () { return _this.dismiss(); });\n        containerInstance._onExit.subscribe(function () { return _this._finishDismiss(); });\n    }\n    /** Dismisses the snack bar. */\n    /**\n     * Dismisses the snack bar.\n     * @return {?}\n     */\n    MatSnackBarRef.prototype.dismiss = /**\n     * Dismisses the snack bar.\n     * @return {?}\n     */\n    function () {\n        if (!this._afterClosed.closed) {\n            this.containerInstance.exit();\n        }\n        clearTimeout(this._durationTimeoutId);\n    };\n    /** Marks the snackbar action clicked. */\n    /**\n     * Marks the snackbar action clicked.\n     * @return {?}\n     */\n    MatSnackBarRef.prototype.closeWithAction = /**\n     * Marks the snackbar action clicked.\n     * @return {?}\n     */\n    function () {\n        if (!this._onAction.closed) {\n            this._onAction.next();\n            this._onAction.complete();\n        }\n    };\n    /** Dismisses the snack bar after some duration */\n    /**\n     * Dismisses the snack bar after some duration\n     * @param {?} duration\n     * @return {?}\n     */\n    MatSnackBarRef.prototype._dismissAfter = /**\n     * Dismisses the snack bar after some duration\n     * @param {?} duration\n     * @return {?}\n     */\n    function (duration) {\n        var _this = this;\n        this._durationTimeoutId = setTimeout(function () { return _this.dismiss(); }, duration);\n    };\n    /** Marks the snackbar as opened */\n    /**\n     * Marks the snackbar as opened\n     * @return {?}\n     */\n    MatSnackBarRef.prototype._open = /**\n     * Marks the snackbar as opened\n     * @return {?}\n     */\n    function () {\n        if (!this._afterOpened.closed) {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }\n    };\n    /**\n     * Cleans up the DOM after closing.\n     * @return {?}\n     */\n    MatSnackBarRef.prototype._finishDismiss = /**\n     * Cleans up the DOM after closing.\n     * @return {?}\n     */\n    function () {\n        this._overlayRef.dispose();\n        if (!this._onAction.closed) {\n            this._onAction.complete();\n        }\n        this._afterClosed.next();\n        this._afterClosed.complete();\n    };\n    /** Gets an observable that is notified when the snack bar is finished closing. */\n    /**\n     * Gets an observable that is notified when the snack bar is finished closing.\n     * @return {?}\n     */\n    MatSnackBarRef.prototype.afterDismissed = /**\n     * Gets an observable that is notified when the snack bar is finished closing.\n     * @return {?}\n     */\n    function () {\n        return this._afterClosed.asObservable();\n    };\n    /** Gets an observable that is notified when the snack bar has opened and appeared. */\n    /**\n     * Gets an observable that is notified when the snack bar has opened and appeared.\n     * @return {?}\n     */\n    MatSnackBarRef.prototype.afterOpened = /**\n     * Gets an observable that is notified when the snack bar has opened and appeared.\n     * @return {?}\n     */\n    function () {\n        return this.containerInstance._onEnter;\n    };\n    /** Gets an observable that is notified when the snack bar action is called. */\n    /**\n     * Gets an observable that is notified when the snack bar action is called.\n     * @return {?}\n     */\n    MatSnackBarRef.prototype.onAction = /**\n     * Gets an observable that is notified when the snack bar action is called.\n     * @return {?}\n     */\n    function () {\n        return this._onAction.asObservable();\n    };\n    return MatSnackBarRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MAT_SNACK_BAR_DATA = new InjectionToken('MatSnackBarData');\n/**\n * Configuration used when opening a snack-bar.\n */\nvar MatSnackBarConfig = /** @class */ (function () {\n    function MatSnackBarConfig() {\n    }\n    return MatSnackBarConfig;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n */\nvar SimpleSnackBar = /** @class */ (function () {\n    function SimpleSnackBar(snackBarRef, data) {\n        this.snackBarRef = snackBarRef;\n        this.data = data;\n    }\n    /** Performs the action on the snack bar. */\n    /**\n     * Performs the action on the snack bar.\n     * @return {?}\n     */\n    SimpleSnackBar.prototype.action = /**\n     * Performs the action on the snack bar.\n     * @return {?}\n     */\n    function () {\n        this.snackBarRef.closeWithAction();\n    };\n    Object.defineProperty(SimpleSnackBar.prototype, \"hasAction\", {\n        /** If the action button should be shown. */\n        get: /**\n         * If the action button should be shown.\n         * @return {?}\n         */\n        function () {\n            return !!this.data.action;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SimpleSnackBar;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar SHOW_ANIMATION = AnimationDurations.ENTERING + \" \" + AnimationCurves.DECELERATION_CURVE;\nvar HIDE_ANIMATION = AnimationDurations.EXITING + \" \" + AnimationCurves.ACCELERATION_CURVE;\n/**\n * Internal component that wraps user-provided snack bar content.\n * \\@docs-private\n */\nvar MatSnackBarContainer = /** @class */ (function (_super) {\n    __extends(MatSnackBarContainer, _super);\n    function MatSnackBarContainer(_ngZone, _renderer, _elementRef, _changeDetectorRef) {\n        var _this = _super.call(this) || this;\n        _this._ngZone = _ngZone;\n        _this._renderer = _renderer;\n        _this._elementRef = _elementRef;\n        _this._changeDetectorRef = _changeDetectorRef;\n        return _this;\n    }\n    /** Attach a component portal as content to this snack bar container. */\n    /**\n     * Attach a component portal as content to this snack bar container.\n     * @template T\n     * @param {?} portal\n     * @return {?}\n     */\n    MatSnackBarContainer.prototype.attachComponentPortal = /**\n     * Attach a component portal as content to this snack bar container.\n     * @template T\n     * @param {?} portal\n     * @return {?}\n     */\n    function (portal) {\n        if (this._portalOutlet.hasAttached()) {\n            throw Error('Attempting to attach snack bar content after content is already attached');\n        }\n        if (this.snackBarConfig.panelClass || this.snackBarConfig.extraClasses) {\n            var /** @type {?} */ classes = this._getCssClasses(this.snackBarConfig.panelClass).concat(this._getCssClasses(this.snackBarConfig.extraClasses));\n            // Not the most efficient way of adding classes, but the renderer doesn't allow us\n            // to pass in an array or a space-separated list.\n            for (var _i = 0, classes_1 = classes; _i < classes_1.length; _i++) {\n                var cssClass = classes_1[_i];\n                this._renderer.addClass(this._elementRef.nativeElement, cssClass);\n            }\n        }\n        if (this.snackBarConfig.horizontalPosition === 'center') {\n            this._renderer.addClass(this._elementRef.nativeElement, 'mat-snack-bar-center');\n        }\n        if (this.snackBarConfig.verticalPosition === 'top') {\n            this._renderer.addClass(this._elementRef.nativeElement, 'mat-snack-bar-top');\n        }\n        return this._portalOutlet.attachComponentPortal(portal);\n    };\n    /** Attach a template portal as content to this snack bar container. */\n    /**\n     * Attach a template portal as content to this snack bar container.\n     * @return {?}\n     */\n    MatSnackBarContainer.prototype.attachTemplatePortal = /**\n     * Attach a template portal as content to this snack bar container.\n     * @return {?}\n     */\n    function () {\n        throw Error('Not yet implemented');\n    };\n    /** Handle end of animations, updating the state of the snackbar. */\n    /**\n     * Handle end of animations, updating the state of the snackbar.\n     * @param {?} event\n     * @return {?}\n     */\n    MatSnackBarContainer.prototype.onAnimationEnd = /**\n     * Handle end of animations, updating the state of the snackbar.\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var fromState = event.fromState, toState = event.toState;\n        if ((toState === 'void' && fromState !== 'void') || toState.startsWith('hidden')) {\n            this._completeExit();\n        }\n        if (toState.startsWith('visible')) {\n            // Note: we shouldn't use `this` inside the zone callback,\n            // because it can cause a memory leak.\n            var /** @type {?} */ onEnter_1 = this._onEnter;\n            this._ngZone.run(function () {\n                onEnter_1.next();\n                onEnter_1.complete();\n            });\n        }\n    };\n    /** Begin animation of snack bar entrance into view. */\n    /**\n     * Begin animation of snack bar entrance into view.\n     * @return {?}\n     */\n    MatSnackBarContainer.prototype.enter = /**\n     * Begin animation of snack bar entrance into view.\n     * @return {?}\n     */\n    function () {\n        if (!this._destroyed) {\n            this._animationState = \"visible-\" + this.snackBarConfig.verticalPosition;\n            this._changeDetectorRef.detectChanges();\n        }\n    };\n    /** Begin animation of the snack bar exiting from view. */\n    /**\n     * Begin animation of the snack bar exiting from view.\n     * @return {?}\n     */\n    MatSnackBarContainer.prototype.exit = /**\n     * Begin animation of the snack bar exiting from view.\n     * @return {?}\n     */\n    function () {\n        this._animationState = \"hidden-\" + this.snackBarConfig.verticalPosition;\n        return this._onExit;\n    };\n    /** Makes sure the exit callbacks have been invoked when the element is destroyed. */\n    /**\n     * Makes sure the exit callbacks have been invoked when the element is destroyed.\n     * @return {?}\n     */\n    MatSnackBarContainer.prototype.ngOnDestroy = /**\n     * Makes sure the exit callbacks have been invoked when the element is destroyed.\n     * @return {?}\n     */\n    function () {\n        this._destroyed = true;\n        this._completeExit();\n    };\n    /**\n     * Waits for the zone to settle before removing the element. Helps prevent\n     * errors where we end up removing an element which is in the middle of an animation.\n     * @return {?}\n     */\n    MatSnackBarContainer.prototype._completeExit = /**\n     * Waits for the zone to settle before removing the element. Helps prevent\n     * errors where we end up removing an element which is in the middle of an animation.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.onMicrotaskEmpty.asObservable().pipe(first()).subscribe(function () {\n            _this._onExit.next();\n            _this._onExit.complete();\n        });\n    };\n    /**\n     * Convert the class list to a array of classes it can apply to the dom\n     * @param {?} classList\n     * @return {?}\n     */\n    MatSnackBarContainer.prototype._getCssClasses = /**\n     * Convert the class list to a array of classes it can apply to the dom\n     * @param {?} classList\n     * @return {?}\n     */\n    function (classList) {\n        if (classList) {\n            if (Array.isArray(classList)) {\n                return classList;\n            }\n            else {\n                return [classList];\n            }\n        }\n        return [];\n    };\n    return MatSnackBarContainer;\n}(BasePortalOutlet));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Service to dispatch Material Design snack bar messages.\n */\nvar MatSnackBar = /** @class */ (function () {\n    function MatSnackBar(_overlay, _live, _injector, _breakpointObserver, _parentSnackBar) {\n        this._overlay = _overlay;\n        this._live = _live;\n        this._injector = _injector;\n        this._breakpointObserver = _breakpointObserver;\n        this._parentSnackBar = _parentSnackBar;\n    }\n    Object.defineProperty(MatSnackBar.prototype, \"_openedSnackBarRef\", {\n        /** Reference to the currently opened snackbar at *any* level. */\n        get: /**\n         * Reference to the currently opened snackbar at *any* level.\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ parent = this._parentSnackBar;\n            return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\n        },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (this._parentSnackBar) {\n                this._parentSnackBar._openedSnackBarRef = value;\n            }\n            else {\n                this._snackBarRefAtThisLevel = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates and dispatches a snack bar with a custom component for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param component Component to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    /**\n     * Creates and dispatches a snack bar with a custom component for the content, removing any\n     * currently opened snack bars.\n     *\n     * @template T\n     * @param {?} component Component to be instantiated.\n     * @param {?=} config Extra configuration for the snack bar.\n     * @return {?}\n     */\n    MatSnackBar.prototype.openFromComponent = /**\n     * Creates and dispatches a snack bar with a custom component for the content, removing any\n     * currently opened snack bars.\n     *\n     * @template T\n     * @param {?} component Component to be instantiated.\n     * @param {?=} config Extra configuration for the snack bar.\n     * @return {?}\n     */\n    function (component, config) {\n        var _this = this;\n        var /** @type {?} */ _config = _applyConfigDefaults(config);\n        var /** @type {?} */ snackBarRef = this._attach(component, _config);\n        // When the snackbar is dismissed, clear the reference to it.\n        snackBarRef.afterDismissed().subscribe(function () {\n            // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n            if (_this._openedSnackBarRef == snackBarRef) {\n                _this._openedSnackBarRef = null;\n            }\n        });\n        if (this._openedSnackBarRef) {\n            // If a snack bar is already in view, dismiss it and enter the\n            // new snack bar after exit animation is complete.\n            this._openedSnackBarRef.afterDismissed().subscribe(function () {\n                snackBarRef.containerInstance.enter();\n            });\n            this._openedSnackBarRef.dismiss();\n        }\n        else {\n            // If no snack bar is in view, enter the new snack bar.\n            snackBarRef.containerInstance.enter();\n        }\n        // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n        if (_config.duration && _config.duration > 0) {\n            snackBarRef.afterOpened().subscribe(function () { return snackBarRef._dismissAfter(/** @type {?} */ ((/** @type {?} */ ((_config)).duration))); });\n        }\n        if (_config.announcementMessage) {\n            this._live.announce(_config.announcementMessage, _config.politeness);\n        }\n        this._openedSnackBarRef = snackBarRef;\n        return this._openedSnackBarRef;\n    };\n    /**\n     * Opens a snackbar with a message and an optional action.\n     * @param message The message to show in the snackbar.\n     * @param action The label for the snackbar action.\n     * @param config Additional configuration options for the snackbar.\n     */\n    /**\n     * Opens a snackbar with a message and an optional action.\n     * @param {?} message The message to show in the snackbar.\n     * @param {?=} action The label for the snackbar action.\n     * @param {?=} config Additional configuration options for the snackbar.\n     * @return {?}\n     */\n    MatSnackBar.prototype.open = /**\n     * Opens a snackbar with a message and an optional action.\n     * @param {?} message The message to show in the snackbar.\n     * @param {?=} action The label for the snackbar action.\n     * @param {?=} config Additional configuration options for the snackbar.\n     * @return {?}\n     */\n    function (message, action, config) {\n        if (action === void 0) { action = ''; }\n        var /** @type {?} */ _config = _applyConfigDefaults(config);\n        // Since the user doesn't have access to the component, we can\n        // override the data to pass in our own message and action.\n        _config.data = { message: message, action: action };\n        _config.announcementMessage = message;\n        return this.openFromComponent(SimpleSnackBar, _config);\n    };\n    /**\n     * Dismisses the currently-visible snack bar.\n     */\n    /**\n     * Dismisses the currently-visible snack bar.\n     * @return {?}\n     */\n    MatSnackBar.prototype.dismiss = /**\n     * Dismisses the currently-visible snack bar.\n     * @return {?}\n     */\n    function () {\n        if (this._openedSnackBarRef) {\n            this._openedSnackBarRef.dismiss();\n        }\n    };\n    /**\n     * Attaches the snack bar container component to the overlay.\n     * @param {?} overlayRef\n     * @param {?} config\n     * @return {?}\n     */\n    MatSnackBar.prototype._attachSnackBarContainer = /**\n     * Attaches the snack bar container component to the overlay.\n     * @param {?} overlayRef\n     * @param {?} config\n     * @return {?}\n     */\n    function (overlayRef, config) {\n        var /** @type {?} */ containerPortal = new ComponentPortal(MatSnackBarContainer, config.viewContainerRef);\n        var /** @type {?} */ containerRef = overlayRef.attach(containerPortal);\n        containerRef.instance.snackBarConfig = config;\n        return containerRef.instance;\n    };\n    /**\n     * Places a new component as the content of the snack bar container.\n     * @template T\n     * @param {?} component\n     * @param {?} config\n     * @return {?}\n     */\n    MatSnackBar.prototype._attach = /**\n     * Places a new component as the content of the snack bar container.\n     * @template T\n     * @param {?} component\n     * @param {?} config\n     * @return {?}\n     */\n    function (component, config) {\n        var /** @type {?} */ overlayRef = this._createOverlay(config);\n        var /** @type {?} */ container = this._attachSnackBarContainer(overlayRef, config);\n        var /** @type {?} */ snackBarRef = new MatSnackBarRef(container, overlayRef);\n        var /** @type {?} */ injector = this._createInjector(config, snackBarRef);\n        var /** @type {?} */ portal = new ComponentPortal(component, undefined, injector);\n        var /** @type {?} */ contentRef = container.attachComponentPortal(portal);\n        // We can't pass this via the injector, because the injector is created earlier.\n        snackBarRef.instance = contentRef.instance;\n        // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as\n        // appropriate. This class is applied to the overlay element because the overlay must expand to\n        // fill the width of the screen for full width snackbars.\n        this._breakpointObserver.observe(Breakpoints.Handset).pipe(takeUntil(overlayRef.detachments().pipe(first()))).subscribe(function (state$$1) {\n            if (state$$1.matches) {\n                overlayRef.overlayElement.classList.add('mat-snack-bar-handset');\n            }\n            else {\n                overlayRef.overlayElement.classList.remove('mat-snack-bar-handset');\n            }\n        });\n        return snackBarRef;\n    };\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param {?} config The user-specified snack bar config.\n     * @return {?}\n     */\n    MatSnackBar.prototype._createOverlay = /**\n     * Creates a new overlay and places it in the correct location.\n     * @param {?} config The user-specified snack bar config.\n     * @return {?}\n     */\n    function (config) {\n        var /** @type {?} */ overlayConfig = new OverlayConfig();\n        overlayConfig.direction = config.direction;\n        var /** @type {?} */ positionStrategy = this._overlay.position().global();\n        // Set horizontal position.\n        var /** @type {?} */ isRtl = config.direction === 'rtl';\n        var /** @type {?} */ isLeft = (config.horizontalPosition === 'left' ||\n            (config.horizontalPosition === 'start' && !isRtl) ||\n            (config.horizontalPosition === 'end' && isRtl));\n        var /** @type {?} */ isRight = !isLeft && config.horizontalPosition !== 'center';\n        if (isLeft) {\n            positionStrategy.left('0');\n        }\n        else if (isRight) {\n            positionStrategy.right('0');\n        }\n        else {\n            positionStrategy.centerHorizontally();\n        }\n        // Set horizontal position.\n        if (config.verticalPosition === 'top') {\n            positionStrategy.top('0');\n        }\n        else {\n            positionStrategy.bottom('0');\n        }\n        overlayConfig.positionStrategy = positionStrategy;\n        return this._overlay.create(overlayConfig);\n    };\n    /**\n     * Creates an injector to be used inside of a snack bar component.\n     * @template T\n     * @param {?} config Config that was used to create the snack bar.\n     * @param {?} snackBarRef Reference to the snack bar.\n     * @return {?}\n     */\n    MatSnackBar.prototype._createInjector = /**\n     * Creates an injector to be used inside of a snack bar component.\n     * @template T\n     * @param {?} config Config that was used to create the snack bar.\n     * @param {?} snackBarRef Reference to the snack bar.\n     * @return {?}\n     */\n    function (config, snackBarRef) {\n        var /** @type {?} */ userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        var /** @type {?} */ injectionTokens = new WeakMap();\n        injectionTokens.set(MatSnackBarRef, snackBarRef);\n        injectionTokens.set(MAT_SNACK_BAR_DATA, config.data);\n        return new PortalInjector(userInjector || this._injector, injectionTokens);\n    };\n    return MatSnackBar;\n}());\n/**\n * Applies default options to the snackbar config.\n * @param {?=} config The configuration to which the defaults will be applied.\n * @return {?} The new configuration object with defaults applied.\n */\nfunction _applyConfigDefaults(config) {\n    return extendObject(new MatSnackBarConfig(), config);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatSnackBarModule = /** @class */ (function () {\n    function MatSnackBarModule() {\n    }\n    return MatSnackBarModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatSnackBarModule, MatSnackBar, SHOW_ANIMATION, HIDE_ANIMATION, MatSnackBarContainer, MAT_SNACK_BAR_DATA, MatSnackBarConfig, MatSnackBarRef, SimpleSnackBar };\n//# sourceMappingURL=snack-bar.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Optional, SkipSelf, isDevMode } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport '@angular/animations';\nimport '@angular/cdk/table';\nimport { merge } from 'rxjs/observable/merge';\nimport 'rxjs/Subject';\nimport '@angular/material/core';\nimport '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n * @param {?} id\n * @return {?}\n */\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(\"Cannot have two MatSortables with the same id (\" + id + \").\");\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(\"MatSortHeader must be placed within a parent element with the MatSort directive.\");\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getSortHeaderMissingIdError() {\n    return Error(\"MatSortHeader must be provided with a unique id.\");\n}\n/**\n * \\@docs-private\n * @param {?} direction\n * @return {?}\n */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(direction + \" is not a valid sort direction ('asc' or 'desc').\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Container for MatSortables to manage the sort state and provide default sort parameters.\n */\nvar MatSort = /** @class */ (function () {\n    function MatSort() {\n    }\n    Object.defineProperty(MatSort.prototype, \"direction\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._direction; },\n        set: /**\n         * The sort direction of the currently active MatSortable.\n         * @param {?} direction\n         * @return {?}\n         */\n        function (direction) {\n            if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n                throw getSortInvalidDirectionError(direction);\n            }\n            this._direction = direction;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatSort.prototype, \"disableClear\", {\n        get: /**\n         * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n         * May be overriden by the MatSortable's disable clear input.\n         * @return {?}\n         */\n        function () { return this._disableClear; },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) { this._disableClear = coerceBooleanProperty(v); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     */\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    MatSort.prototype.register = /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    function (sortable) {\n        if (!sortable.id) {\n            throw getSortHeaderMissingIdError();\n        }\n        if (this.sortables.has(sortable.id)) {\n            throw getSortDuplicateSortableIdError(sortable.id);\n        }\n        this.sortables.set(sortable.id, sortable);\n    };\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     */\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    MatSort.prototype.deregister = /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     * @param {?} sortable\n     * @return {?}\n     */\n    function (sortable) {\n        this.sortables.delete(sortable.id);\n    };\n    /** Sets the active sort id and determines the new sort direction. */\n    /**\n     * Sets the active sort id and determines the new sort direction.\n     * @param {?} sortable\n     * @return {?}\n     */\n    MatSort.prototype.sort = /**\n     * Sets the active sort id and determines the new sort direction.\n     * @param {?} sortable\n     * @return {?}\n     */\n    function (sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.next({ active: this.active, direction: this.direction });\n    };\n    /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n    /**\n     * Returns the next sort direction of the active sortable, checking for potential overrides.\n     * @param {?} sortable\n     * @return {?}\n     */\n    MatSort.prototype.getNextSortDirection = /**\n     * Returns the next sort direction of the active sortable, checking for potential overrides.\n     * @param {?} sortable\n     * @return {?}\n     */\n    function (sortable) {\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        var /** @type {?} */ disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n        var /** @type {?} */ sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        var /** @type {?} */ nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    };\n    return MatSort;\n}());\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear.\n * @param {?} start\n * @param {?} disableClear\n * @return {?}\n */\nfunction getSortDirectionCycle(start, disableClear) {\n    var /** @type {?} */ sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nvar MatSortHeaderIntl = /** @class */ (function () {\n    function MatSortHeaderIntl() {\n    }\n    return MatSortHeaderIntl;\n}());\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/**\n * \\@docs-private\n */\nvar MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nvar MatSortHeader = /** @class */ (function () {\n    function MatSortHeader(_intl, changeDetectorRef, _sort, _cdkColumnDef) {\n        this._intl = _intl;\n        this._sort = _sort;\n        this._cdkColumnDef = _cdkColumnDef;\n        if (!_sort) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        this._rerenderSubscription = merge(_sort.sortChange, _intl.changes).subscribe(function () {\n            changeDetectorRef.markForCheck();\n        });\n    }\n    Object.defineProperty(MatSortHeader.prototype, \"disableClear\", {\n        get: /**\n         * Overrides the disable clear value of the containing MatSort for this MatSortable.\n         * @return {?}\n         */\n        function () { return this._disableClear; },\n        set: /**\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) { this._disableClear = coerceBooleanProperty(v); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatSortHeader.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.id && this._cdkColumnDef) {\n            this.id = this._cdkColumnDef.name;\n        }\n        this._sort.register(this);\n    };\n    /**\n     * @return {?}\n     */\n    MatSortHeader.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    };\n    /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n    /**\n     * Whether this MatSortHeader is currently sorted in either ascending or descending order.\n     * @return {?}\n     */\n    MatSortHeader.prototype._isSorted = /**\n     * Whether this MatSortHeader is currently sorted in either ascending or descending order.\n     * @return {?}\n     */\n    function () {\n        return this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n    };\n    return MatSortHeader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatSortModule = /** @class */ (function () {\n    function MatSortModule() {\n    }\n    return MatSortModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatSortModule, MatSortHeader, MatSortHeaderIntl, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MAT_SORT_HEADER_INTL_PROVIDER, MatSort };\n//# sourceMappingURL=sort.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/portal';\nimport { CdkStep, CdkStepLabel, CdkStepper, CdkStepperNext, CdkStepperPrevious } from '@angular/cdk/stepper';\nimport '@angular/common';\nimport '@angular/core';\nimport '@angular/material/button';\nimport '@angular/material/core';\nimport '@angular/material/icon';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { __extends } from 'tslib';\nimport * as tslib_1 from 'tslib';\nimport 'rxjs/Subject';\nimport '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nvar _MatStepLabel = CdkStepLabel;\nvar MatStepLabel = /** @class */ (function (_super) {\n    __extends(MatStepLabel, _super);\n    function MatStepLabel(template) {\n        return _super.call(this, template) || this;\n    }\n    return MatStepLabel;\n}(_MatStepLabel));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Stepper data that is required for internationalization.\n */\nvar MatStepperIntl = /** @class */ (function () {\n    function MatStepperIntl() {\n    }\n    return MatStepperIntl;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatStepHeader = /** @class */ (function () {\n    function MatStepHeader(_intl, _focusMonitor, _element, changeDetectorRef) {\n        this._intl = _intl;\n        this._focusMonitor = _focusMonitor;\n        this._element = _element;\n        _focusMonitor.monitor(_element.nativeElement, true);\n        this._intlSubscription = _intl.changes.subscribe(function () { return changeDetectorRef.markForCheck(); });\n    }\n    Object.defineProperty(MatStepHeader.prototype, \"index\", {\n        get: /**\n         * Index of the given step.\n         * @return {?}\n         */\n        function () { return this._index; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._index = coerceNumberProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatStepHeader.prototype, \"selected\", {\n        get: /**\n         * Whether the given step is selected.\n         * @return {?}\n         */\n        function () { return this._selected; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._selected = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatStepHeader.prototype, \"active\", {\n        get: /**\n         * Whether the given step label is active.\n         * @return {?}\n         */\n        function () { return this._active; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._active = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatStepHeader.prototype, \"optional\", {\n        get: /**\n         * Whether the given step is optional.\n         * @return {?}\n         */\n        function () { return this._optional; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._optional = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatStepHeader.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._intlSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element.nativeElement);\n    };\n    /** Returns string label of given step if it is a text label. */\n    /**\n     * Returns string label of given step if it is a text label.\n     * @return {?}\n     */\n    MatStepHeader.prototype._stringLabel = /**\n     * Returns string label of given step if it is a text label.\n     * @return {?}\n     */\n    function () {\n        return this.label instanceof MatStepLabel ? null : this.label;\n    };\n    /** Returns MatStepLabel if the label of given step is a template label. */\n    /**\n     * Returns MatStepLabel if the label of given step is a template label.\n     * @return {?}\n     */\n    MatStepHeader.prototype._templateLabel = /**\n     * Returns MatStepLabel if the label of given step is a template label.\n     * @return {?}\n     */\n    function () {\n        return this.label instanceof MatStepLabel ? this.label : null;\n    };\n    /** Returns the host HTML element. */\n    /**\n     * Returns the host HTML element.\n     * @return {?}\n     */\n    MatStepHeader.prototype._getHostElement = /**\n     * Returns the host HTML element.\n     * @return {?}\n     */\n    function () {\n        return this._element.nativeElement;\n    };\n    return MatStepHeader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nvar _MatStep = CdkStep;\nvar _MatStepper = CdkStepper;\nvar MatStep = /** @class */ (function (_super) {\n    __extends(MatStep, _super);\n    function MatStep(stepper, _errorStateMatcher) {\n        var _this = _super.call(this, stepper) || this;\n        _this._errorStateMatcher = _errorStateMatcher;\n        return _this;\n    }\n    /** Custom error state matcher that additionally checks for validity of interacted form. */\n    /**\n     * Custom error state matcher that additionally checks for validity of interacted form.\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    MatStep.prototype.isErrorState = /**\n     * Custom error state matcher that additionally checks for validity of interacted form.\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    function (control, form) {\n        var /** @type {?} */ originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n        // Custom error state checks for the validity of form that is not submitted or touched\n        // since user can trigger a form change by calling for another step without directly\n        // interacting with the current form.\n        var /** @type {?} */ customErrorState = !!(control && control.invalid && this.interacted);\n        return originalErrorState || customErrorState;\n    };\n    return MatStep;\n}(_MatStep));\nvar MatStepper = /** @class */ (function (_super) {\n    __extends(MatStepper, _super);\n    function MatStepper() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MatStepper;\n}(_MatStepper));\nvar MatHorizontalStepper = /** @class */ (function (_super) {\n    __extends(MatHorizontalStepper, _super);\n    function MatHorizontalStepper() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MatHorizontalStepper;\n}(MatStepper));\nvar MatVerticalStepper = /** @class */ (function (_super) {\n    __extends(MatVerticalStepper, _super);\n    function MatVerticalStepper() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MatVerticalStepper;\n}(MatStepper));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nvar _MatStepperNext = CdkStepperNext;\nvar _MatStepperPrevious = CdkStepperPrevious;\n/**\n * Button that moves to the next step in a stepper workflow.\n */\nvar MatStepperNext = /** @class */ (function (_super) {\n    __extends(MatStepperNext, _super);\n    function MatStepperNext() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MatStepperNext;\n}(_MatStepperNext));\n/**\n * Button that moves to the previous step in a stepper workflow.\n */\nvar MatStepperPrevious = /** @class */ (function (_super) {\n    __extends(MatStepperPrevious, _super);\n    function MatStepperPrevious() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MatStepperPrevious;\n}(_MatStepperPrevious));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatStepperModule = /** @class */ (function () {\n    function MatStepperModule() {\n    }\n    return MatStepperModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatStepperModule, _MatStepLabel, MatStepLabel, _MatStep, _MatStepper, MatStep, MatStepper, MatHorizontalStepper, MatVerticalStepper, _MatStepperNext, _MatStepperPrevious, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIntl };\n//# sourceMappingURL=stepper.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport '@angular/core';\nimport { __extends } from 'tslib';\nimport * as tslib_1 from 'tslib';\nimport { CdkCell, CdkCellDef, CdkColumnDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef, CdkTable } from '@angular/cdk/table';\nimport '@angular/common';\nimport '@angular/material/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { combineLatest } from 'rxjs/operators/combineLatest';\nimport { map } from 'rxjs/operators/map';\nimport { startWith } from 'rxjs/operators/startWith';\nimport { empty } from 'rxjs/observable/empty';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nvar _MatTable = CdkTable;\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nvar MatTable = /** @class */ (function (_super) {\n    __extends(MatTable, _super);\n    function MatTable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MatTable;\n}(_MatTable));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nvar _MatCellDef = CdkCellDef;\nvar _MatHeaderCellDef = CdkHeaderCellDef;\nvar _MatColumnDef = CdkColumnDef;\nvar _MatHeaderCell = CdkHeaderCell;\nvar _MatCell = CdkCell;\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nvar MatCellDef = /** @class */ (function (_super) {\n    __extends(MatCellDef, _super);\n    function MatCellDef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MatCellDef;\n}(_MatCellDef));\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nvar MatHeaderCellDef = /** @class */ (function (_super) {\n    __extends(MatHeaderCellDef, _super);\n    function MatHeaderCellDef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MatHeaderCellDef;\n}(_MatHeaderCellDef));\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nvar MatColumnDef = /** @class */ (function (_super) {\n    __extends(MatColumnDef, _super);\n    function MatColumnDef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MatColumnDef;\n}(_MatColumnDef));\n/**\n * Header cell template container that adds the right classes and role.\n */\nvar MatHeaderCell = /** @class */ (function (_super) {\n    __extends(MatHeaderCell, _super);\n    function MatHeaderCell(columnDef, elementRef, renderer) {\n        var _this = _super.call(this, columnDef, elementRef, renderer) || this;\n        renderer.addClass(elementRef.nativeElement, \"mat-column-\" + columnDef.cssClassFriendlyName);\n        return _this;\n    }\n    return MatHeaderCell;\n}(_MatHeaderCell));\n/**\n * Cell template container that adds the right classes and role.\n */\nvar MatCell = /** @class */ (function (_super) {\n    __extends(MatCell, _super);\n    function MatCell(columnDef, elementRef, renderer) {\n        var _this = _super.call(this, columnDef, elementRef, renderer) || this;\n        renderer.addClass(elementRef.nativeElement, \"mat-column-\" + columnDef.cssClassFriendlyName);\n        return _this;\n    }\n    return MatCell;\n}(_MatCell));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nvar _MatHeaderRowDef = CdkHeaderRowDef;\nvar _MatCdkRowDef = CdkRowDef;\nvar _MatHeaderRow = CdkHeaderRow;\nvar _MatRow = CdkRow;\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nvar MatHeaderRowDef = /** @class */ (function (_super) {\n    __extends(MatHeaderRowDef, _super);\n    function MatHeaderRowDef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MatHeaderRowDef;\n}(_MatHeaderRowDef));\n/**\n * Data row definition for the mat-table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nvar MatRowDef = /** @class */ (function (_super) {\n    __extends(MatRowDef, _super);\n    function MatRowDef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MatRowDef;\n}(_MatCdkRowDef));\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nvar MatHeaderRow = /** @class */ (function (_super) {\n    __extends(MatHeaderRow, _super);\n    function MatHeaderRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MatHeaderRow;\n}(_MatHeaderRow));\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nvar MatRow = /** @class */ (function (_super) {\n    __extends(MatRow, _super);\n    function MatRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return MatRow;\n}(_MatRow));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatTableModule = /** @class */ (function () {\n    function MatTableModule() {\n    }\n    return MatTableModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n */\nvar MatTableDataSource = /** @class */ (function () {\n    function MatTableDataSource(initialData) {\n        if (initialData === void 0) { initialData = []; }\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    Object.defineProperty(MatTableDataSource.prototype, \"data\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._data.value; },\n        /** Array of data that should be rendered by the table, where each object represents one row. */\n        set: /**\n         * Array of data that should be rendered by the table, where each object represents one row.\n         * @param {?} data\n         * @return {?}\n         */\n        function (data) { this._data.next(data); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTableDataSource.prototype, \"filter\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._filter.value; },\n        /**\n         * Filter term that should be used to filter out objects from the data array. To override how\n         * data objects match to this filter string, provide a custom function for filterPredicate.\n         */\n        set: /**\n         * Filter term that should be used to filter out objects from the data array. To override how\n         * data objects match to this filter string, provide a custom function for filterPredicate.\n         * @param {?} filter\n         * @return {?}\n         */\n        function (filter) { this._filter.next(filter); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTableDataSource.prototype, \"sort\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._sort; },\n        /**\n         * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n         * emitted by the MatSort will trigger an update to the table's rendered data.\n         */\n        set: /**\n         * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n         * emitted by the MatSort will trigger an update to the table's rendered data.\n         * @param {?} sort\n         * @return {?}\n         */\n        function (sort) {\n            this._sort = sort;\n            this._updateChangeSubscription();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTableDataSource.prototype, \"paginator\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._paginator; },\n        /**\n         * Instance of the MatPaginator component used by the table to control what page of the data is\n         * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n         * table's rendered data.\n         *\n         * Note that the data source uses the paginator's properties to calculate which page of data\n         * should be displayed. If the paginator receives its properties as template inputs,\n         * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n         * initialized before assigning it to this data source.\n         */\n        set: /**\n         * Instance of the MatPaginator component used by the table to control what page of the data is\n         * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n         * table's rendered data.\n         *\n         * Note that the data source uses the paginator's properties to calculate which page of data\n         * should be displayed. If the paginator receives its properties as template inputs,\n         * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n         * initialized before assigning it to this data source.\n         * @param {?} paginator\n         * @return {?}\n         */\n        function (paginator) {\n            this._paginator = paginator;\n            this._updateChangeSubscription();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     */\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     * @return {?}\n     */\n    MatTableDataSource.prototype._updateChangeSubscription = /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // Otherwise, use an empty observable stream to take their place.\n        var /** @type {?} */ sortChange = this._sort ? this._sort.sortChange : empty();\n        var /** @type {?} */ pageChange = this._paginator ? this._paginator.page : empty();\n        if (this._renderChangesSubscription) {\n            this._renderChangesSubscription.unsubscribe();\n        }\n        // Watch for base data or filter changes to provide a filtered set of data.\n        this._renderChangesSubscription = this._data.pipe(combineLatest(this._filter), map(function (_a) {\n            var data = _a[0];\n            return _this._filterData(data);\n        }), \n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        combineLatest(sortChange.pipe(startWith(/** @type {?} */ ((null))))), map(function (_a) {\n            var data = _a[0];\n            return _this._orderData(data);\n        }), \n        // Watch for ordered data or page changes to provide a paged set of data.\n        combineLatest(pageChange.pipe(startWith(/** @type {?} */ ((null))))), map(function (_a) {\n            var data = _a[0];\n            return _this._pageData(data);\n        }))\n            .subscribe(function (data) { return _this._renderData.next(data); });\n    };\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     */\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    MatTableDataSource.prototype._filterData = /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var _this = this;\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overriden for customization.\n        this.filteredData =\n            !this.filter ? data : data.filter(function (obj) { return _this.filterPredicate(obj, _this.filter); });\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    };\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     */\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     * @param {?} data\n     * @return {?}\n     */\n    MatTableDataSource.prototype._orderData = /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var _this = this;\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort || !this.sort.active || this.sort.direction == '') {\n            return data;\n        }\n        var /** @type {?} */ active = this.sort.active;\n        var /** @type {?} */ direction = this.sort.direction;\n        return data.slice().sort(function (a, b) {\n            var /** @type {?} */ valueA = _this.sortingDataAccessor(a, active);\n            var /** @type {?} */ valueB = _this.sortingDataAccessor(b, active);\n            return (valueA < valueB ? -1 : 1) * (direction == 'asc' ? 1 : -1);\n        });\n    };\n    /**\n     * Returns a paged splice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     */\n    /**\n     * Returns a paged splice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    MatTableDataSource.prototype._pageData = /**\n     * Returns a paged splice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        if (!this.paginator) {\n            return data;\n        }\n        var /** @type {?} */ startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice().splice(startIndex, this.paginator.pageSize);\n    };\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     */\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     * @param {?} filteredDataLength\n     * @return {?}\n     */\n    MatTableDataSource.prototype._updatePaginator = /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     * @param {?} filteredDataLength\n     * @return {?}\n     */\n    function (filteredDataLength) {\n        var _this = this;\n        Promise.resolve().then(function () {\n            if (!_this.paginator) {\n                return;\n            }\n            _this.paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (_this.paginator.pageIndex > 0) {\n                var /** @type {?} */ lastPageIndex = Math.ceil(_this.paginator.length / _this.paginator.pageSize) - 1 || 0;\n                _this.paginator.pageIndex = Math.min(_this.paginator.pageIndex, lastPageIndex);\n            }\n        });\n    };\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * @docs-private\n     */\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * \\@docs-private\n     * @return {?}\n     */\n    MatTableDataSource.prototype.connect = /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * \\@docs-private\n     * @return {?}\n     */\n    function () { return this._renderData; };\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * @docs-private\n     */\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * \\@docs-private\n     * @return {?}\n     */\n    MatTableDataSource.prototype.disconnect = /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * \\@docs-private\n     * @return {?}\n     */\n    function () { };\n    return MatTableDataSource;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatTableModule, _MatCellDef, _MatHeaderCellDef, _MatColumnDef, _MatHeaderCell, _MatCell, MatCellDef, MatHeaderCellDef, MatColumnDef, MatHeaderCell, MatCell, _MatTable, MatTable, _MatHeaderRowDef, _MatCdkRowDef, _MatHeaderRow, _MatRow, MatHeaderRowDef, MatRowDef, MatHeaderRow, MatRow, MatTableDataSource };\n//# sourceMappingURL=table.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport '@angular/cdk/observers';\nimport { CdkPortal, CdkPortalOutlet, TemplatePortal } from '@angular/cdk/portal';\nimport '@angular/cdk/scrolling';\nimport '@angular/common';\nimport '@angular/core';\nimport { MatRipple, mixinColor, mixinDisableRipple, mixinDisabled } from '@angular/material/core';\nimport { __extends } from 'tslib';\nimport * as tslib_1 from 'tslib';\nimport 'rxjs/Subject';\nimport '@angular/animations';\nimport '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport 'rxjs/Subscription';\nimport { merge } from 'rxjs/observable/merge';\nimport { ENTER, LEFT_ARROW, RIGHT_ARROW, SPACE } from '@angular/cdk/keycodes';\nimport { startWith } from 'rxjs/operators/startWith';\nimport { of } from 'rxjs/observable/of';\nimport '@angular/cdk/platform';\nimport { takeUntil } from 'rxjs/operators/takeUntil';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nvar MatInkBar = /** @class */ (function () {\n    function MatInkBar(_renderer, _elementRef, _ngZone) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    MatInkBar.prototype.alignToElement = /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var _this = this;\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(function () {\n                requestAnimationFrame(function () { return _this._setStyles(element); });\n            });\n        }\n        else {\n            this._setStyles(element);\n        }\n    };\n    /** Shows the ink bar. */\n    /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    MatInkBar.prototype.show = /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    function () {\n        this._renderer.setStyle(this._elementRef.nativeElement, 'visibility', 'visible');\n    };\n    /** Hides the ink bar. */\n    /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    MatInkBar.prototype.hide = /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    function () {\n        this._renderer.setStyle(this._elementRef.nativeElement, 'visibility', 'hidden');\n    };\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @param {?} element\n     * @return {?}\n     */\n    MatInkBar.prototype._setStyles = /**\n     * Sets the proper styles to the ink bar element.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var /** @type {?} */ left = element ? (element.offsetLeft || 0) + 'px' : '0';\n        var /** @type {?} */ width = element ? (element.offsetWidth || 0) + 'px' : '0';\n        this._renderer.setStyle(this._elementRef.nativeElement, 'left', left);\n        this._renderer.setStyle(this._elementRef.nativeElement, 'width', width);\n    };\n    return MatInkBar;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nvar _MatTabLabelBaseClass = CdkPortal;\n/**\n * Used to flag tab labels for use with the portal directive\n */\nvar MatTabLabel = /** @class */ (function (_super) {\n    __extends(MatTabLabel, _super);\n    function MatTabLabel(templateRef, viewContainerRef) {\n        return _super.call(this, templateRef, viewContainerRef) || this;\n    }\n    return MatTabLabel;\n}(_MatTabLabelBaseClass));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n */\nvar MatTabBase = /** @class */ (function () {\n    function MatTabBase() {\n    }\n    return MatTabBase;\n}());\nvar _MatTabMixinBase = mixinDisabled(MatTabBase);\nvar MatTab = /** @class */ (function (_super) {\n    __extends(MatTab, _super);\n    function MatTab(_viewContainerRef) {\n        var _this = _super.call(this) || this;\n        _this._viewContainerRef = _viewContainerRef;\n        return _this;\n    }\n    Object.defineProperty(MatTab.prototype, \"content\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._contentPortal; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MatTab.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (changes.hasOwnProperty('textLabel')) {\n            this._labelChange.next();\n        }\n        if (changes.hasOwnProperty('disabled')) {\n            this._disableChange.next();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatTab.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._disableChange.complete();\n        this._labelChange.complete();\n    };\n    /**\n     * @return {?}\n     */\n    MatTab.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\n    };\n    return MatTab;\n}(_MatTabMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nvar _MatTabBodyPortalBaseClass = CdkPortalOutlet;\n/**\n * The portal host directive for the contents of the tab.\n * \\@docs-private\n */\nvar MatTabBodyPortal = /** @class */ (function (_super) {\n    __extends(MatTabBodyPortal, _super);\n    function MatTabBodyPortal(_componentFactoryResolver, _viewContainerRef, _host) {\n        var _this = _super.call(this, _componentFactoryResolver, _viewContainerRef) || this;\n        _this._host = _host;\n        return _this;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    /**\n     * Set initial visibility or set up subscription for changing visibility.\n     * @return {?}\n     */\n    MatTabBodyPortal.prototype.ngOnInit = /**\n     * Set initial visibility or set up subscription for changing visibility.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._host._isCenterPosition(this._host._position)) {\n            this.attach(this._host._content);\n        }\n        else {\n            this._centeringSub = this._host._beforeCentering.subscribe(function () {\n                _this.attach(_this._host._content);\n                _this._centeringSub.unsubscribe();\n            });\n        }\n    };\n    /** Clean up subscription if necessary. */\n    /**\n     * Clean up subscription if necessary.\n     * @return {?}\n     */\n    MatTabBodyPortal.prototype.ngOnDestroy = /**\n     * Clean up subscription if necessary.\n     * @return {?}\n     */\n    function () {\n        if (this._centeringSub && !this._centeringSub.closed) {\n            this._centeringSub.unsubscribe();\n        }\n    };\n    return MatTabBodyPortal;\n}(_MatTabBodyPortalBaseClass));\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nvar MatTabBody = /** @class */ (function () {\n    function MatTabBody(_elementRef, _dir) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n    }\n    Object.defineProperty(MatTabBody.prototype, \"position\", {\n        set: /**\n         * @param {?} position\n         * @return {?}\n         */\n        function (position) {\n            if (position < 0) {\n                this._position = this._getLayoutDirection() == 'ltr' ? 'left' : 'right';\n            }\n            else if (position > 0) {\n                this._position = this._getLayoutDirection() == 'ltr' ? 'right' : 'left';\n            }\n            else {\n                this._position = 'center';\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTabBody.prototype, \"origin\", {\n        set: /**\n         * The origin position from which this tab should appear when it is centered into view.\n         * @param {?} origin\n         * @return {?}\n         */\n        function (origin) {\n            if (origin == null) {\n                return;\n            }\n            var /** @type {?} */ dir = this._getLayoutDirection();\n            if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n                this._origin = 'left';\n            }\n            else {\n                this._origin = 'right';\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    MatTabBody.prototype.ngOnInit = /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    function () {\n        if (this._position == 'center' && this._origin) {\n            this._position = this._origin == 'left' ? 'left-origin-center' : 'right-origin-center';\n        }\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    MatTabBody.prototype._onTranslateTabStarted = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        if (this._isCenterPosition(e.toState)) {\n            this._beforeCentering.emit();\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    MatTabBody.prototype._onTranslateTabComplete = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        // If the transition to the center is complete, emit an event.\n        if (this._isCenterPosition(e.toState) && this._isCenterPosition(this._position)) {\n            this._onCentered.emit();\n        }\n    };\n    /** The text direction of the containing app. */\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    MatTabBody.prototype._getLayoutDirection = /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    function () {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    };\n    /** Whether the provided position state is considered center, regardless of origin. */\n    /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    MatTabBody.prototype._isCenterPosition = /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    };\n    return MatTabBody;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Used to generate unique ID's for each tab component\n */\nvar nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nvar MatTabChangeEvent = /** @class */ (function () {\n    function MatTabChangeEvent() {\n    }\n    return MatTabChangeEvent;\n}());\n/**\n * \\@docs-private\n */\nvar MatTabGroupBase = /** @class */ (function () {\n    function MatTabGroupBase(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n    }\n    return MatTabGroupBase;\n}());\nvar _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupBase), 'primary');\n/**\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://www.google.com/design/spec/components/tabs.html\n */\nvar MatTabGroup = /** @class */ (function (_super) {\n    __extends(MatTabGroup, _super);\n    function MatTabGroup(_renderer, elementRef, _changeDetectorRef) {\n        var _this = _super.call(this, _renderer, elementRef) || this;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._groupId = nextId++;\n        return _this;\n    }\n    Object.defineProperty(MatTabGroup.prototype, \"dynamicHeight\", {\n        get: /**\n         * Whether the tab group should grow to the size of the active tab.\n         * @return {?}\n         */\n        function () { return this._dynamicHeight; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._dynamicHeight = coerceBooleanProperty(value); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTabGroup.prototype, \"_dynamicHeightDeprecated\", {\n        get: /**\n         * @deprecated\n         * @return {?}\n         */\n        function () { return this._dynamicHeight; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._dynamicHeight = value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTabGroup.prototype, \"selectedIndex\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._selectedIndex; },\n        set: /**\n         * The index of the active tab.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._indexToSelect = coerceNumberProperty(value, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTabGroup.prototype, \"backgroundColor\", {\n        get: /**\n         * Background color of the tab group.\n         * @return {?}\n         */\n        function () { return this._backgroundColor; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            var /** @type {?} */ nativeElement = this._elementRef.nativeElement;\n            this._renderer.removeClass(nativeElement, \"mat-background-\" + this.backgroundColor);\n            if (value) {\n                this._renderer.addClass(nativeElement, \"mat-background-\" + value);\n            }\n            this._backgroundColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    MatTabGroup.prototype.ngAfterContentChecked = /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Clamp the next selected index to the boundsof 0 and the tabs length.\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        var /** @type {?} */ indexToSelect = this._indexToSelect =\n            Math.min(this._tabs.length - 1, Math.max(this._indexToSelect || 0, 0));\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect && this._selectedIndex != null) {\n            var /** @type {?} */ tabChangeEvent = this._createChangeEvent(indexToSelect);\n            this.selectedTabChange.emit(tabChangeEvent);\n            // Emitting this value after change detection has run\n            // since the checked content may contain this variable'\n            Promise.resolve().then(function () { return _this.selectedIndexChange.emit(indexToSelect); });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach(function (tab, index) {\n            tab.position = index - indexToSelect;\n            tab.isActive = index === indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (_this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - _this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatTabGroup.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(function () {\n            _this._subscribeToTabLabels();\n            _this._changeDetectorRef.markForCheck();\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MatTabGroup.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    MatTabGroup.prototype._focusChanged = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    MatTabGroup.prototype._createChangeEvent = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    };\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @return {?}\n     */\n    MatTabGroup.prototype._subscribeToTabLabels = /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge.apply(void 0, this._tabs.map(function (tab) { return tab._disableChange; }).concat(this._tabs.map(function (tab) { return tab._labelChange; }))).subscribe(function () {\n            _this._changeDetectorRef.markForCheck();\n        });\n    };\n    /** Returns a unique id for each tab label element */\n    /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    MatTabGroup.prototype._getTabLabelId = /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    function (i) {\n        return \"mat-tab-label-\" + this._groupId + \"-\" + i;\n    };\n    /** Returns a unique id for each tab content element */\n    /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    MatTabGroup.prototype._getTabContentId = /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    function (i) {\n        return \"mat-tab-content-\" + this._groupId + \"-\" + i;\n    };\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    MatTabGroup.prototype._setTabBodyWrapperHeight = /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    function (tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        this._renderer.setStyle(this._tabBodyWrapper.nativeElement, 'height', this._tabBodyWrapperHeight + 'px');\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            this._renderer.setStyle(this._tabBodyWrapper.nativeElement, 'height', tabHeight + 'px');\n        }\n    };\n    /** Removes the height of the tab body wrapper. */\n    /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    MatTabGroup.prototype._removeTabBodyWrapperHeight = /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    function () {\n        this._tabBodyWrapperHeight = this._tabBodyWrapper.nativeElement.clientHeight;\n        this._renderer.setStyle(this._tabBodyWrapper.nativeElement, 'height', '');\n    };\n    /** Handle click events, setting new selected index if appropriate. */\n    /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} idx\n     * @return {?}\n     */\n    MatTabGroup.prototype._handleClick = /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} idx\n     * @return {?}\n     */\n    function (tab, tabHeader, idx) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = idx;\n        }\n    };\n    /** Retrieves the tabindex for the tab. */\n    /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    MatTabGroup.prototype._getTabIndex = /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    function (tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    };\n    return MatTabGroup;\n}(_MatTabGroupMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n */\nvar MatTabLabelWrapperBase = /** @class */ (function () {\n    function MatTabLabelWrapperBase() {\n    }\n    return MatTabLabelWrapperBase;\n}());\nvar _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * \\@docs-private\n */\nvar MatTabLabelWrapper = /** @class */ (function (_super) {\n    __extends(MatTabLabelWrapper, _super);\n    function MatTabLabelWrapper(elementRef) {\n        var _this = _super.call(this) || this;\n        _this.elementRef = elementRef;\n        return _this;\n    }\n    /** Sets focus on the wrapper element */\n    /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    MatTabLabelWrapper.prototype.focus = /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    function () {\n        this.elementRef.nativeElement.focus();\n    };\n    /**\n     * @return {?}\n     */\n    MatTabLabelWrapper.prototype.getOffsetLeft = /**\n     * @return {?}\n     */\n    function () {\n        return this.elementRef.nativeElement.offsetLeft;\n    };\n    /**\n     * @return {?}\n     */\n    MatTabLabelWrapper.prototype.getOffsetWidth = /**\n     * @return {?}\n     */\n    function () {\n        return this.elementRef.nativeElement.offsetWidth;\n    };\n    return MatTabLabelWrapper;\n}(_MatTabLabelWrapperMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nvar EXAGGERATED_OVERSCROLL = 60;\n/**\n * \\@docs-private\n */\nvar MatTabHeaderBase = /** @class */ (function () {\n    function MatTabHeaderBase() {\n    }\n    return MatTabHeaderBase;\n}());\nvar _MatTabHeaderMixinBase = mixinDisableRipple(MatTabHeaderBase);\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\nvar MatTabHeader = /** @class */ (function (_super) {\n    __extends(MatTabHeader, _super);\n    function MatTabHeader(_elementRef, _renderer, _changeDetectorRef, _viewportRuler, _dir) {\n        var _this = _super.call(this) || this;\n        _this._elementRef = _elementRef;\n        _this._renderer = _renderer;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._viewportRuler = _viewportRuler;\n        _this._dir = _dir;\n        return _this;\n    }\n    Object.defineProperty(MatTabHeader.prototype, \"selectedIndex\", {\n        get: /**\n         * The index of the active tab.\n         * @return {?}\n         */\n        function () { return this._selectedIndex; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            value = coerceNumberProperty(value);\n            this._selectedIndexChanged = this._selectedIndex != value;\n            this._selectedIndex = value;\n            this._focusIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatTabHeader.prototype.ngAfterContentChecked = /**\n     * @return {?}\n     */\n    function () {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._labelWrappers.length) {\n            this._updatePagination();\n            this._tabLabelCount = this._labelWrappers.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatTabHeader.prototype._handleKeydown = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        switch (event.keyCode) {\n            case RIGHT_ARROW:\n                this._focusNextTab();\n                break;\n            case LEFT_ARROW:\n                this._focusPreviousTab();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                event.preventDefault();\n                break;\n        }\n    };\n    /**\n     * Aligns the ink bar to the selected tab on load.\n     */\n    /**\n     * Aligns the ink bar to the selected tab on load.\n     * @return {?}\n     */\n    MatTabHeader.prototype.ngAfterContentInit = /**\n     * Aligns the ink bar to the selected tab on load.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ dirChange = this._dir ? this._dir.change : of(null);\n        var /** @type {?} */ resize = this._viewportRuler.change(150);\n        this._realignInkBar = merge(dirChange, resize).pipe(startWith(null)).subscribe(function () {\n            _this._updatePagination();\n            _this._alignInkBarToSelectedTab();\n        });\n    };\n    /**\n     * @return {?}\n     */\n    MatTabHeader.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._realignInkBar.unsubscribe();\n    };\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    MatTabHeader.prototype._onContentChanges = /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    function () {\n        this._updatePagination();\n        this._alignInkBarToSelectedTab();\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * Updating the view whether pagination should be enabled or not\n     */\n    /**\n     * Updating the view whether pagination should be enabled or not\n     * @return {?}\n     */\n    MatTabHeader.prototype._updatePagination = /**\n     * Updating the view whether pagination should be enabled or not\n     * @return {?}\n     */\n    function () {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    };\n    Object.defineProperty(MatTabHeader.prototype, \"focusIndex\", {\n        /** Tracks which element has focus; used for keyboard navigation */\n        get: /**\n         * Tracks which element has focus; used for keyboard navigation\n         * @return {?}\n         */\n        function () { return this._focusIndex; },\n        /** When the focus index is set, we must manually send focus to the correct label */\n        set: /**\n         * When the focus index is set, we must manually send focus to the correct label\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (!this._isValidIndex(value) || this._focusIndex == value) {\n                return;\n            }\n            this._focusIndex = value;\n            this.indexFocused.emit(value);\n            this._setTabFocus(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    MatTabHeader.prototype._isValidIndex = /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (!this._labelWrappers) {\n            return true;\n        }\n        var /** @type {?} */ tab = this._labelWrappers ? this._labelWrappers.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    };\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    MatTabHeader.prototype._setTabFocus = /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    function (tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._labelWrappers && this._labelWrappers.length) {\n            this._labelWrappers.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            var /** @type {?} */ containerEl = this._tabListContainer.nativeElement;\n            var /** @type {?} */ dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    };\n    /**\n     * Moves the focus towards the beginning or the end of the list depending on the offset provided.\n     * Valid offsets are 1 and -1.\n     */\n    /**\n     * Moves the focus towards the beginning or the end of the list depending on the offset provided.\n     * Valid offsets are 1 and -1.\n     * @param {?} offset\n     * @return {?}\n     */\n    MatTabHeader.prototype._moveFocus = /**\n     * Moves the focus towards the beginning or the end of the list depending on the offset provided.\n     * Valid offsets are 1 and -1.\n     * @param {?} offset\n     * @return {?}\n     */\n    function (offset) {\n        if (this._labelWrappers) {\n            var /** @type {?} */ tabs = this._labelWrappers.toArray();\n            for (var /** @type {?} */ i = this.focusIndex + offset; i < tabs.length && i >= 0; i += offset) {\n                if (this._isValidIndex(i)) {\n                    this.focusIndex = i;\n                    return;\n                }\n            }\n        }\n    };\n    /** Increment the focus index by 1 until a valid tab is found. */\n    /**\n     * Increment the focus index by 1 until a valid tab is found.\n     * @return {?}\n     */\n    MatTabHeader.prototype._focusNextTab = /**\n     * Increment the focus index by 1 until a valid tab is found.\n     * @return {?}\n     */\n    function () {\n        this._moveFocus(this._getLayoutDirection() == 'ltr' ? 1 : -1);\n    };\n    /** Decrement the focus index by 1 until a valid tab is found. */\n    /**\n     * Decrement the focus index by 1 until a valid tab is found.\n     * @return {?}\n     */\n    MatTabHeader.prototype._focusPreviousTab = /**\n     * Decrement the focus index by 1 until a valid tab is found.\n     * @return {?}\n     */\n    function () {\n        this._moveFocus(this._getLayoutDirection() == 'ltr' ? -1 : 1);\n    };\n    /** The layout direction of the containing app. */\n    /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    MatTabHeader.prototype._getLayoutDirection = /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    function () {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    };\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    MatTabHeader.prototype._updateTabScrollPosition = /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ scrollDistance = this.scrollDistance;\n        var /** @type {?} */ translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        this._renderer.setStyle(this._tabList.nativeElement, 'transform', \"translate3d(\" + translateX + \"px, 0, 0)\");\n    };\n    Object.defineProperty(MatTabHeader.prototype, \"scrollDistance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._scrollDistance; },\n        /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n        set: /**\n         * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n         * @param {?} v\n         * @return {?}\n         */\n        function (v) {\n            this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), v));\n            // Mark that the scroll distance has changed so that after the view is checked, the CSS\n            // transformation can move the header.\n            this._scrollDistanceChanged = true;\n            this._checkScrollingControls();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} scrollDir\n     * @return {?}\n     */\n    MatTabHeader.prototype._scrollHeader = /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} scrollDir\n     * @return {?}\n     */\n    function (scrollDir) {\n        var /** @type {?} */ viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        this.scrollDistance += (scrollDir == 'before' ? -1 : 1) * viewLength / 3;\n    };\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    MatTabHeader.prototype._scrollToLabel = /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    function (labelIndex) {\n        var /** @type {?} */ selectedLabel = this._labelWrappers ? this._labelWrappers.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        var /** @type {?} */ viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        var /** @type {?} */ labelBeforePos, /** @type {?} */ labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n        var /** @type {?} */ beforeVisiblePos = this.scrollDistance;\n        var /** @type {?} */ afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    };\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    MatTabHeader.prototype._checkPaginationEnabled = /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n        if (isEnabled !== this._showPaginationControls) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._showPaginationControls = isEnabled;\n    };\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    MatTabHeader.prototype._checkScrollingControls = /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    function () {\n        // Check if the pagination arrows should be activated.\n        this._disableScrollBefore = this.scrollDistance == 0;\n        this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    MatTabHeader.prototype._getMaxScrollDistance = /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        var /** @type {?} */ viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    };\n    /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    MatTabHeader.prototype._alignInkBarToSelectedTab = /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ selectedLabelWrapper = this._labelWrappers && this._labelWrappers.length ?\n            this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement :\n            null;\n        this._inkBar.alignToElement(selectedLabelWrapper);\n    };\n    return MatTabHeader;\n}(_MatTabHeaderMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n */\nvar MatTabNavBase = /** @class */ (function () {\n    function MatTabNavBase(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n    }\n    return MatTabNavBase;\n}());\nvar _MatTabNavMixinBase = mixinDisableRipple(mixinColor(MatTabNavBase, 'primary'));\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nvar MatTabNav = /** @class */ (function (_super) {\n    __extends(MatTabNav, _super);\n    function MatTabNav(renderer, elementRef, _dir, _ngZone, _changeDetectorRef, _viewportRuler) {\n        var _this = _super.call(this, renderer, elementRef) || this;\n        _this._dir = _dir;\n        _this._ngZone = _ngZone;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._viewportRuler = _viewportRuler;\n        return _this;\n    }\n    Object.defineProperty(MatTabNav.prototype, \"backgroundColor\", {\n        get: /**\n         * Background color of the tab nav.\n         * @return {?}\n         */\n        function () { return this._backgroundColor; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            var /** @type {?} */ nativeElement = this._elementRef.nativeElement;\n            this._renderer.removeClass(nativeElement, \"mat-background-\" + this.backgroundColor);\n            if (value) {\n                this._renderer.addClass(nativeElement, \"mat-background-\" + value);\n            }\n            this._backgroundColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTabNav.prototype, \"disableRipple\", {\n        /** Whether ripples should be disabled for all links or not. */\n        get: /**\n         * Whether ripples should be disabled for all links or not.\n         * @return {?}\n         */\n        function () { return this._disableRipple; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disableRipple = coerceBooleanProperty(value);\n            this._setLinkDisableRipple();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Notifies the component that the active link has been changed. */\n    /**\n     * Notifies the component that the active link has been changed.\n     * @param {?} element\n     * @return {?}\n     */\n    MatTabNav.prototype.updateActiveLink = /**\n     * Notifies the component that the active link has been changed.\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        this._activeLinkChanged = this._activeLinkElement != element;\n        this._activeLinkElement = element;\n        if (this._activeLinkChanged) {\n            this._changeDetectorRef.markForCheck();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatTabNav.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.runOutsideAngular(function () {\n            var /** @type {?} */ dirChange = _this._dir ? _this._dir.change : of(null);\n            return merge(dirChange, _this._viewportRuler.change(10)).pipe(takeUntil(_this._onDestroy))\n                .subscribe(function () { return _this._alignInkBar(); });\n        });\n        this._setLinkDisableRipple();\n    };\n    /** Checks if the active link has been changed and, if so, will update the ink bar. */\n    /**\n     * Checks if the active link has been changed and, if so, will update the ink bar.\n     * @return {?}\n     */\n    MatTabNav.prototype.ngAfterContentChecked = /**\n     * Checks if the active link has been changed and, if so, will update the ink bar.\n     * @return {?}\n     */\n    function () {\n        if (this._activeLinkChanged) {\n            this._alignInkBar();\n            this._activeLinkChanged = false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatTabNav.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._onDestroy.next();\n        this._onDestroy.complete();\n    };\n    /** Aligns the ink bar to the active link. */\n    /**\n     * Aligns the ink bar to the active link.\n     * @return {?}\n     */\n    MatTabNav.prototype._alignInkBar = /**\n     * Aligns the ink bar to the active link.\n     * @return {?}\n     */\n    function () {\n        if (this._activeLinkElement) {\n            this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\n        }\n    };\n    /**\n     * Sets the `disableRipple` property on each link of the navigation bar.\n     * @return {?}\n     */\n    MatTabNav.prototype._setLinkDisableRipple = /**\n     * Sets the `disableRipple` property on each link of the navigation bar.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._tabLinks) {\n            this._tabLinks.forEach(function (link) { return link.disableRipple = _this.disableRipple; });\n        }\n    };\n    return MatTabNav;\n}(_MatTabNavMixinBase));\nvar MatTabLinkBase = /** @class */ (function () {\n    function MatTabLinkBase() {\n    }\n    return MatTabLinkBase;\n}());\nvar _MatTabLinkMixinBase = mixinDisabled(MatTabLinkBase);\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nvar MatTabLink = /** @class */ (function (_super) {\n    __extends(MatTabLink, _super);\n    function MatTabLink(_tabNavBar, _elementRef, ngZone, platform, globalOptions) {\n        var _this = _super.call(this) || this;\n        _this._tabNavBar = _tabNavBar;\n        _this._elementRef = _elementRef;\n        // Manually create a ripple instance that uses the tab link element as trigger element.\n        // Notice that the lifecycle hooks for the ripple config won't be called anymore.\n        // Manually create a ripple instance that uses the tab link element as trigger element.\n        // Notice that the lifecycle hooks for the ripple config won't be called anymore.\n        _this._tabLinkRipple = new MatRipple(_elementRef, ngZone, platform, globalOptions);\n        return _this;\n    }\n    Object.defineProperty(MatTabLink.prototype, \"active\", {\n        get: /**\n         * Whether the link is active.\n         * @return {?}\n         */\n        function () { return this._isActive; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._isActive = value;\n            if (value) {\n                this._tabNavBar.updateActiveLink(this._elementRef);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTabLink.prototype, \"disableRipple\", {\n        /** Whether ripples should be disabled or not. */\n        get: /**\n         * Whether ripples should be disabled or not.\n         * @return {?}\n         */\n        function () { return this.disabled || this._disableRipple; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._disableRipple = value;\n            this._tabLinkRipple.disabled = this.disableRipple;\n            this._tabLinkRipple._updateRippleRenderer();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatTabLink.prototype, \"tabIndex\", {\n        /** @docs-private */\n        get: /**\n         * \\@docs-private\n         * @return {?}\n         */\n        function () {\n            return this.disabled ? null : 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatTabLink.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        // Manually call the ngOnDestroy lifecycle hook of the ripple instance because it won't be\n        // called automatically since its instance is not created by Angular.\n        this._tabLinkRipple.ngOnDestroy();\n    };\n    return MatTabLink;\n}(_MatTabLinkMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatTabsModule = /** @class */ (function () {\n    function MatTabsModule() {\n    }\n    return MatTabsModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatInkBar, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabLabelWrapper, MatTab, MatTabLabel, MatTabNav, MatTabLink, MatTabsModule, MatTabChangeEvent, MatTabGroupBase, _MatTabGroupMixinBase, MatTabGroup, MatTabBase as ɵe21, _MatTabMixinBase as ɵf21, MatTabHeaderBase as ɵa21, _MatTabHeaderMixinBase as ɵb21, MatTabLabelWrapperBase as ɵc21, _MatTabLabelWrapperMixinBase as ɵd21, MatTabLinkBase as ɵi21, MatTabNavBase as ɵg21, _MatTabLinkMixinBase as ɵj21, _MatTabNavMixinBase as ɵh21 };\n//# sourceMappingURL=tabs.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { isDevMode } from '@angular/core';\nimport { mixinColor } from '@angular/material/core';\nimport '@angular/cdk/platform';\nimport { __extends } from 'tslib';\nimport * as tslib_1 from 'tslib';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@docs-private\n */\nvar MatToolbarBase = /** @class */ (function () {\n    function MatToolbarBase(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n    }\n    return MatToolbarBase;\n}());\nvar _MatToolbarMixinBase = mixinColor(MatToolbarBase);\nvar MatToolbarRow = /** @class */ (function () {\n    function MatToolbarRow() {\n    }\n    return MatToolbarRow;\n}());\nvar MatToolbar = /** @class */ (function (_super) {\n    __extends(MatToolbar, _super);\n    function MatToolbar(renderer, elementRef, _platform) {\n        var _this = _super.call(this, renderer, elementRef) || this;\n        _this._platform = _platform;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    MatToolbar.prototype.ngAfterViewInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!isDevMode() || !this._platform.isBrowser) {\n            return;\n        }\n        this._checkToolbarMixedModes();\n        this._toolbarRows.changes.subscribe(function () { return _this._checkToolbarMixedModes(); });\n    };\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     * @return {?}\n     */\n    MatToolbar.prototype._checkToolbarMixedModes = /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     * @return {?}\n     */\n    function () {\n        if (!this._toolbarRows.length) {\n            return;\n        }\n        // Check if there are any other DOM nodes that can display content but aren't inside of\n        // a <mat-toolbar-row> element.\n        var /** @type {?} */ isCombinedUsage = [].slice.call(this._elementRef.nativeElement.childNodes)\n            .filter(function (node) { return !(node.classList && node.classList.contains('mat-toolbar-row')); })\n            .filter(function (node) { return node.nodeType !== Node.COMMENT_NODE; })\n            .some(function (node) { return node.textContent.trim(); });\n        if (isCombinedUsage) {\n            throwToolbarMixedModesError();\n        }\n    };\n    return MatToolbar;\n}(_MatToolbarMixinBase));\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * \\@docs-private\n * @return {?}\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatToolbarModule = /** @class */ (function () {\n    function MatToolbarModule() {\n    }\n    return MatToolbarModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbarModule, MatToolbarBase, _MatToolbarMixinBase, MatToolbarRow, MatToolbar, throwToolbarMixedModesError };\n//# sourceMappingURL=toolbar.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Version } from '@angular/core';\nimport { AUTOCOMPLETE_OPTION_HEIGHT, AUTOCOMPLETE_PANEL_HEIGHT, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, getMatAutocompleteMissingPanelError } from '@angular/material/autocomplete';\nimport { MatAnchor, MatButton, MatButtonBase, MatButtonCssMatStyler, MatButtonModule, MatFab, MatIconButtonCssMatStyler, MatMiniFab, MatRaisedButtonCssMatStyler, _MatButtonMixinBase } from '@angular/material/button';\nimport { MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, MatButtonToggle, MatButtonToggleChange, MatButtonToggleGroup, MatButtonToggleGroupBase, MatButtonToggleGroupMultiple, MatButtonToggleModule, _MatButtonToggleGroupMixinBase } from '@angular/material/button-toggle';\nimport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage } from '@angular/material/card';\nimport { MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxBase, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, TransitionCheckState, _MatCheckboxMixinBase, _MatCheckboxRequiredValidator } from '@angular/material/checkbox';\nimport { MatBasicChip, MatChip, MatChipBase, MatChipInput, MatChipList, MatChipListChange, MatChipRemove, MatChipSelectionChange, MatChipsModule, _MatChipMixinBase } from '@angular/material/chips';\nimport { APR, AUG, AnimationCurves, AnimationDurations, DEC, DateAdapter, ErrorStateMatcher, FEB, GestureConfig, JAN, JUL, JUN, MAR, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_PROVIDER, MAT_NATIVE_DATE_FORMATS, MAT_OPTION_PARENT_COMPONENT, MAT_PLACEHOLDER_GLOBAL_OPTIONS, MAT_RIPPLE_GLOBAL_OPTIONS, MAY, MatCommonModule, MatLine, MatLineModule, MatLineSetter, MatNativeDateModule, MatOptgroup, MatOptgroupBase, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NOV, NativeDateAdapter, NativeDateModule, OCT, RIPPLE_FADE_IN_DURATION, RIPPLE_FADE_OUT_DURATION, RippleRef, RippleState, SEP, ShowOnDirtyErrorStateMatcher, _MatOptgroupMixinBase, applyCssTransform, extendObject, mixinColor, mixinDisableRipple, mixinDisabled, mixinTabIndex, ɵa0 } from '@angular/material/core';\nimport { MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_PROVIDER, MAT_DATEPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_DATEPICKER_VALIDATORS, MAT_DATEPICKER_VALUE_ACCESSOR, MatCalendar, MatCalendarBody, MatCalendarCell, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerInputEvent, MatDatepickerIntl, MatDatepickerModule, MatDatepickerToggle, MatMonthView, MatYearView } from '@angular/material/datepicker';\nimport { MAT_DIALOG_DATA, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogTitle, throwMatDialogContentAlreadyAttachedError } from '@angular/material/dialog';\nimport { EXPANSION_PANEL_ANIMATION_TIMING, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelBase, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, _CdkAccordion, _CdkAccordionItem, _MatExpansionPanelMixinBase } from '@angular/material/expansion';\nimport { MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatPlaceholder, MatPrefix, MatSuffix, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError } from '@angular/material/form-field';\nimport { MatGridAvatarCssMatStyler, MatGridList, MatGridListModule, MatGridTile, MatGridTileFooterCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileText } from '@angular/material/grid-list';\nimport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MatIcon, MatIconBase, MatIconModule, MatIconRegistry, _MatIconMixinBase, getMatIconFailedToSanitizeError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError } from '@angular/material/icon';\nimport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError } from '@angular/material/input';\nimport { MatDividerCssMatStyler, MatList, MatListAvatarCssMatStyler, MatListBase, MatListCssMatStyler, MatListDivider, MatListIconCssMatStyler, MatListItem, MatListItemBase, MatListModule, MatListOption, MatListOptionBase, MatListOptionChange, MatListSubheaderCssMatStyler, MatNavListCssMatStyler, MatSelectionList, MatSelectionListBase, _MatListItemMixinBase, _MatListMixinBase, _MatListOptionMixinBase, _MatSelectionListMixinBase } from '@angular/material/list';\nimport { MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_SCROLL_STRATEGY, MatMenu, MatMenuItem, MatMenuModule, MatMenuTrigger, fadeInItems, transformMenu, ɵa12, ɵb12, ɵc12, ɵd12 } from '@angular/material/menu';\nimport { MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent } from '@angular/material/paginator';\nimport { MatProgressBar, MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinner, MatProgressSpinnerBase, MatProgressSpinnerModule, MatSpinner, _MatProgressSpinnerMixinBase } from '@angular/material/progress-spinner';\nimport { MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioButtonBase, MatRadioChange, MatRadioGroup, MatRadioGroupBase, MatRadioModule, _MatRadioButtonMixinBase, _MatRadioGroupMixinBase } from '@angular/material/radio';\nimport { MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MatSelect, MatSelectBase, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, _MatSelectMixinBase, fadeInContent, transformPanel } from '@angular/material/select';\nimport { MatDrawer, MatDrawerContainer, MatDrawerContent, MatDrawerToggleResult, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, throwMatDuplicatedDrawerError } from '@angular/material/sidenav';\nimport { MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleBase, MatSlideToggleChange, MatSlideToggleModule, _MatSlideToggleMixinBase } from '@angular/material/slide-toggle';\nimport { MAT_SLIDER_VALUE_ACCESSOR, MatSlider, MatSliderBase, MatSliderChange, MatSliderModule, _MatSliderMixinBase } from '@angular/material/slider';\nimport { HIDE_ANIMATION, MAT_SNACK_BAR_DATA, MatSnackBar, MatSnackBarConfig, MatSnackBarContainer, MatSnackBarModule, MatSnackBarRef, SHOW_ANIMATION, SimpleSnackBar } from '@angular/material/snack-bar';\nimport { MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule } from '@angular/material/sort';\nimport { MatHorizontalStepper, MatStep, MatStepHeader, MatStepLabel, MatStepper, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, MatVerticalStepper, _MatStep, _MatStepLabel, _MatStepper, _MatStepperNext, _MatStepperPrevious } from '@angular/material/stepper';\nimport { MatCell, MatCellDef, MatColumnDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, _MatCdkRowDef, _MatCell, _MatCellDef, _MatColumnDef, _MatHeaderCell, _MatHeaderCellDef, _MatHeaderRow, _MatHeaderRowDef, _MatRow, _MatTable } from '@angular/material/table';\nimport { MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabGroup, MatTabGroupBase, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MatTabGroupMixinBase, ɵa21, ɵb21, ɵc21, ɵd21, ɵe21, ɵf21, ɵg21, ɵh21, ɵi21, ɵj21 } from '@angular/material/tabs';\nimport { MatToolbar, MatToolbarBase, MatToolbarModule, MatToolbarRow, _MatToolbarMixinBase, throwToolbarMixedModesError } from '@angular/material/toolbar';\nimport { MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER, MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TOUCHEND_HIDE_DELAY, TooltipComponent, getMatTooltipInvalidPositionError } from '@angular/material/tooltip';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Current version of Angular Material.\n */\nvar VERSION = new Version('5.0.0-rc0-353f586');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { VERSION, MatAutocompleteSelectedEvent, MatAutocomplete, MatAutocompleteModule, AUTOCOMPLETE_OPTION_HEIGHT, AUTOCOMPLETE_PANEL_HEIGHT, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, getMatAutocompleteMissingPanelError, MatAutocompleteTrigger, MatButtonModule, MatButtonCssMatStyler, MatRaisedButtonCssMatStyler, MatIconButtonCssMatStyler, MatFab, MatMiniFab, MatButtonBase, _MatButtonMixinBase, MatButton, MatAnchor, MatButtonToggleGroupBase, _MatButtonToggleGroupMixinBase, MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, MatButtonToggleChange, MatButtonToggleGroup, MatButtonToggleGroupMultiple, MatButtonToggle, MatButtonToggleModule, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardImage, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardXlImage, MatCardAvatar, MatCard, MatCardHeader, MatCardTitleGroup, MatCardModule, MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, TransitionCheckState, MatCheckboxChange, MatCheckboxBase, _MatCheckboxMixinBase, MatCheckbox, MatCheckboxModule, _MatCheckboxRequiredValidator, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckboxRequiredValidator, MatChipsModule, MatChipListChange, MatChipList, MatChipSelectionChange, MatChipBase, _MatChipMixinBase, MatBasicChip, MatChip, MatChipRemove, MatChipInput, ɵa0, AnimationCurves, AnimationDurations, MatCommonModule, MATERIAL_SANITY_CHECKS, mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, NativeDateModule, MatNativeDateModule, MAT_DATE_LOCALE, MAT_DATE_LOCALE_PROVIDER, DateAdapter, MAT_DATE_FORMATS, NativeDateAdapter, MAT_NATIVE_DATE_FORMATS, ShowOnDirtyErrorStateMatcher, ErrorStateMatcher, GestureConfig, MatLine, MatLineSetter, MatLineModule, MatOptionModule, MatOptionSelectionChange, MAT_OPTION_PARENT_COMPONENT, MatOption, MatOptgroupBase, _MatOptgroupMixinBase, MatOptgroup, MAT_PLACEHOLDER_GLOBAL_OPTIONS, MatRipple, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRef, RippleState, RIPPLE_FADE_IN_DURATION, RIPPLE_FADE_OUT_DURATION, MatRippleModule, MatPseudoCheckboxModule, MatPseudoCheckbox, applyCssTransform, extendObject, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC, MatDatepickerModule, MatCalendar, MatCalendarCell, MatCalendarBody, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY_PROVIDER, MatDatepickerContent, MatDatepicker, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, MatDatepickerInputEvent, MatDatepickerInput, MatDatepickerIntl, MatDatepickerToggle, MatMonthView, MatYearView, MatDialogModule, MAT_DIALOG_DATA, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MatDialog, throwMatDialogContentAlreadyAttachedError, MatDialogContainer, MatDialogClose, MatDialogTitle, MatDialogContent, MatDialogActions, MatDialogConfig, MatDialogRef, MatExpansionModule, _CdkAccordion, MatAccordion, _CdkAccordionItem, EXPANSION_PANEL_ANIMATION_TIMING, MatExpansionPanelBase, _MatExpansionPanelMixinBase, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelDescription, MatExpansionPanelTitle, MatFormFieldModule, MatError, MatFormField, MatFormFieldControl, getMatFormFieldPlaceholderConflictError, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, MatHint, MatPlaceholder, MatPrefix, MatSuffix, MatGridListModule, MatGridList, MatGridTile, MatGridTileText, MatGridAvatarCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileFooterCssMatStyler, MatIconModule, MatIconBase, _MatIconMixinBase, MatIcon, getMatIconNameNotFoundError, getMatIconNoHttpProviderError, getMatIconFailedToSanitizeError, MatIconRegistry, ICON_REGISTRY_PROVIDER_FACTORY, ICON_REGISTRY_PROVIDER, MatInputModule, MatTextareaAutosize, MatInput, getMatInputUnsupportedTypeError, MAT_INPUT_VALUE_ACCESSOR, MatListModule, MatListBase, _MatListMixinBase, MatListItemBase, _MatListItemMixinBase, MatListDivider, MatList, MatListCssMatStyler, MatNavListCssMatStyler, MatDividerCssMatStyler, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatListItem, MatSelectionListBase, _MatSelectionListMixinBase, MatListOptionBase, _MatListOptionMixinBase, MatListOptionChange, MatListOption, MatSelectionList, ɵa12, ɵb12, ɵd12, ɵc12, MAT_MENU_SCROLL_STRATEGY, fadeInItems, transformMenu, MatMenuModule, MatMenu, MAT_MENU_DEFAULT_OPTIONS, MatMenuItem, MatMenuTrigger, MatPaginatorModule, PageEvent, MatPaginator, MatPaginatorIntl, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MAT_PAGINATOR_INTL_PROVIDER, MatProgressBarModule, MatProgressBar, MatProgressSpinnerModule, MatProgressSpinnerBase, _MatProgressSpinnerMixinBase, MatProgressSpinner, MatSpinner, MatRadioModule, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioChange, MatRadioGroupBase, _MatRadioGroupMixinBase, MatRadioGroup, MatRadioButtonBase, _MatRadioButtonMixinBase, MatRadioButton, MatSelectModule, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MatSelectChange, MatSelectBase, _MatSelectMixinBase, MatSelectTrigger, MatSelect, transformPanel, fadeInContent, MatSidenavModule, throwMatDuplicatedDrawerError, MatDrawerToggleResult, MatDrawerContent, MatDrawer, MatDrawerContainer, MatSidenavContent, MatSidenav, MatSidenavContainer, MatSlideToggleModule, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggleChange, MatSlideToggleBase, _MatSlideToggleMixinBase, MatSlideToggle, MatSliderModule, MAT_SLIDER_VALUE_ACCESSOR, MatSliderChange, MatSliderBase, _MatSliderMixinBase, MatSlider, MatSnackBarModule, MatSnackBar, SHOW_ANIMATION, HIDE_ANIMATION, MatSnackBarContainer, MAT_SNACK_BAR_DATA, MatSnackBarConfig, MatSnackBarRef, SimpleSnackBar, MatSortModule, MatSortHeader, MatSortHeaderIntl, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MAT_SORT_HEADER_INTL_PROVIDER, MatSort, MatStepperModule, _MatStepLabel, MatStepLabel, _MatStep, _MatStepper, MatStep, MatStepper, MatHorizontalStepper, MatVerticalStepper, _MatStepperNext, _MatStepperPrevious, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIntl, MatTableModule, _MatCellDef, _MatHeaderCellDef, _MatColumnDef, _MatHeaderCell, _MatCell, MatCellDef, MatHeaderCellDef, MatColumnDef, MatHeaderCell, MatCell, _MatTable, MatTable, _MatHeaderRowDef, _MatCdkRowDef, _MatHeaderRow, _MatRow, MatHeaderRowDef, MatRowDef, MatHeaderRow, MatRow, MatTableDataSource, ɵe21, ɵf21, ɵa21, ɵb21, ɵc21, ɵd21, ɵi21, ɵg21, ɵj21, ɵh21, MatInkBar, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabLabelWrapper, MatTab, MatTabLabel, MatTabNav, MatTabLink, MatTabsModule, MatTabChangeEvent, MatTabGroupBase, _MatTabGroupMixinBase, MatTabGroup, MatToolbarModule, MatToolbarBase, _MatToolbarMixinBase, MatToolbarRow, MatToolbar, throwToolbarMixedModesError, MatTooltipModule, TOUCHEND_HIDE_DELAY, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, getMatTooltipInvalidPositionError, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER, MatTooltip, TooltipComponent };\n//# sourceMappingURL=material.es5.js.map\n"],"names":["InjectionToken","isDevMode","coerceBooleanProperty","LOCALE_ID","first","style","HammerGestureConfig","delay","ENTER","SPACE","startWith","fromEvent","ActiveDescendantKeyManager","Overlay","NG_VALUE_ACCESSOR","forwardRef","merge","of","filter","ESCAPE","UP_ARROW","DOWN_ARROW","TAB","tap","switchMap","TemplatePortal","OverlayConfig","CheckboxRequiredValidator","NG_VALIDATORS","DELETE","BACKSPACE","FocusKeyManager","SelectionModel","RIGHT_ARROW","LEFT_ARROW","BasePortalOutlet","ComponentPortal","TemplateRef","Directionality","PortalInjector","SecurityContext","map","_throw","catchError","forkJoin","finalize","share","Optional","SkipSelf","HttpClient","DomSanitizer","getSupportedInputTypes","HOME","END","PAGE_UP","PAGE_DOWN","CdkAccordion","CdkAccordionItem","trigger","state","transition","animate","isFakeMousedownFromScreenReader","takeUntil","coerceNumberProperty","_applyConfigDefaults","Breakpoints","CdkStepLabel","CdkStep","CdkStepper","CdkStepperNext","CdkStepperPrevious","CdkTable","CdkCellDef","CdkHeaderCellDef","CdkColumnDef","CdkHeaderCell","CdkCell","CdkHeaderRowDef","CdkRowDef","CdkHeaderRow","CdkRow","BehaviorSubject","empty","combineLatest","CdkPortal","CdkPortalOutlet","Version"],"mappings":"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"}