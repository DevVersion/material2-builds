{"version":3,"file":"material-paginator.umd.js","sources":["material/paginator.es5.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport '@angular/common';\nimport { Optional, SkipSelf } from '@angular/core';\nimport '@angular/material/button';\nimport '@angular/material/select';\nimport '@angular/material/tooltip';\nimport 'rxjs/Subject';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nvar MatPaginatorIntl = /** @class */ (function () {\n    function MatPaginatorIntl() {\n    }\n    return MatPaginatorIntl;\n}());\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/**\n * \\@docs-private\n */\nvar MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * The default page size if there is no page size and there are no provided page size options.\n */\nvar DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nvar PageEvent = /** @class */ (function () {\n    function PageEvent() {\n    }\n    return PageEvent;\n}());\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nvar MatPaginator = /** @class */ (function () {\n    function MatPaginator(_intl, _changeDetectorRef) {\n        var _this = this;\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._intlChanges = _intl.changes.subscribe(function () { return _this._changeDetectorRef.markForCheck(); });\n    }\n    Object.defineProperty(MatPaginator.prototype, \"pageIndex\", {\n        get: /**\n         * The zero-based page index of the displayed list of items. Defaulted to 0.\n         * @return {?}\n         */\n        function () { return this._pageIndex; },\n        set: /**\n         * @param {?} pageIndex\n         * @return {?}\n         */\n        function (pageIndex) {\n            this._pageIndex = pageIndex;\n            this._changeDetectorRef.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatPaginator.prototype, \"length\", {\n        get: /**\n         * The length of the total number of items that are being paginated. Defaulted to 0.\n         * @return {?}\n         */\n        function () { return this._length; },\n        set: /**\n         * @param {?} length\n         * @return {?}\n         */\n        function (length) {\n            this._length = length;\n            this._changeDetectorRef.markForCheck();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatPaginator.prototype, \"pageSize\", {\n        get: /**\n         * Number of items to display on a page. By default set to 50.\n         * @return {?}\n         */\n        function () { return this._pageSize; },\n        set: /**\n         * @param {?} pageSize\n         * @return {?}\n         */\n        function (pageSize) {\n            this._pageSize = pageSize;\n            this._updateDisplayedPageSizeOptions();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatPaginator.prototype, \"pageSizeOptions\", {\n        get: /**\n         * The set of provided page size options to display to the user.\n         * @return {?}\n         */\n        function () { return this._pageSizeOptions; },\n        set: /**\n         * @param {?} pageSizeOptions\n         * @return {?}\n         */\n        function (pageSizeOptions) {\n            this._pageSizeOptions = pageSizeOptions;\n            this._updateDisplayedPageSizeOptions();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatPaginator.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n    };\n    /**\n     * @return {?}\n     */\n    MatPaginator.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._intlChanges.unsubscribe();\n    };\n    /** Advances to the next page if it exists. */\n    /**\n     * Advances to the next page if it exists.\n     * @return {?}\n     */\n    MatPaginator.prototype.nextPage = /**\n     * Advances to the next page if it exists.\n     * @return {?}\n     */\n    function () {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        this.pageIndex++;\n        this._emitPageEvent();\n    };\n    /** Move back to the previous page if it exists. */\n    /**\n     * Move back to the previous page if it exists.\n     * @return {?}\n     */\n    MatPaginator.prototype.previousPage = /**\n     * Move back to the previous page if it exists.\n     * @return {?}\n     */\n    function () {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        this.pageIndex--;\n        this._emitPageEvent();\n    };\n    /** Whether there is a previous page. */\n    /**\n     * Whether there is a previous page.\n     * @return {?}\n     */\n    MatPaginator.prototype.hasPreviousPage = /**\n     * Whether there is a previous page.\n     * @return {?}\n     */\n    function () {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    };\n    /** Whether there is a next page. */\n    /**\n     * Whether there is a next page.\n     * @return {?}\n     */\n    MatPaginator.prototype.hasNextPage = /**\n     * Whether there is a next page.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ numberOfPages = Math.ceil(this.length / this.pageSize) - 1;\n        return this.pageIndex < numberOfPages && this.pageSize != 0;\n    };\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     * @param {?} pageSize\n     * @return {?}\n     */\n    MatPaginator.prototype._changePageSize = /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     * @param {?} pageSize\n     * @return {?}\n     */\n    function (pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        var /** @type {?} */ startIndex = this.pageIndex * this.pageSize;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent();\n    };\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     * @return {?}\n     */\n    MatPaginator.prototype._updateDisplayedPageSizeOptions = /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     * @return {?}\n     */\n    function () {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize = this.pageSizeOptions.length != 0 ?\n                this.pageSizeOptions[0] :\n                DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) == -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort(function (a, b) { return a - b; });\n        this._changeDetectorRef.markForCheck();\n    };\n    /**\n     * Emits an event notifying that a change of the paginator's properties has been triggered.\n     * @return {?}\n     */\n    MatPaginator.prototype._emitPageEvent = /**\n     * Emits an event notifying that a change of the paginator's properties has been triggered.\n     * @return {?}\n     */\n    function () {\n        this.page.next({\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length\n        });\n    };\n    return MatPaginator;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar MatPaginatorModule = /** @class */ (function () {\n    function MatPaginatorModule() {\n    }\n    return MatPaginatorModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatPaginatorModule, PageEvent, MatPaginator, MatPaginatorIntl, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MAT_PAGINATOR_INTL_PROVIDER };\n//# sourceMappingURL=paginator.es5.js.map\n"],"names":["Optional","SkipSelf"],"mappings":"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"}