{"version":3,"file":"dialog-content-directives.js","sourceRoot":"","sources":["../../../../src/lib/dialog/dialog-content-directives.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAC,SAAS,EAAE,KAAK,EAAC,MAAM,eAAe,CAAC;AAC/C,OAAO,EAAC,WAAW,EAAC,MAAM,cAAc,CAAC;AAGzC;;GAEG;AASH,IAAa,aAAa;IAIxB,uBAAmB,SAA2B;QAA3B,cAAS,GAAT,SAAS,CAAkB;QAH9C,yCAAyC;QACpB,cAAS,GAAW,cAAc,CAAC;IAEN,CAAC;IACrD,oBAAC;AAAD,CAAC,AALD,IAKC;AAHsB;IAApB,KAAK,CAAC,YAAY,CAAC;;gDAAoC;AAF7C,aAAa;IARzB,SAAS,CAAC;QACT,QAAQ,EAAE,mDAAmD;QAC7D,IAAI,EAAE;YACJ,SAAS,EAAE,mBAAmB;YAC9B,mBAAmB,EAAE,WAAW;YAChC,MAAM,EAAE,QAAQ;SACjB;KACF,CAAC;qCAK8B,WAAW;GAJ9B,aAAa,CAKzB;SALY,aAAa;AAO1B;;GAEG;AAOH,IAAa,aAAa;IAA1B;IAA6B,CAAC;IAAD,oBAAC;AAAD,CAAC,AAA9B,IAA8B;AAAjB,aAAa;IANzB,SAAS,CAAC;QACT,QAAQ,EAAE,uCAAuC;QACjD,IAAI,EAAE;YACJ,0BAA0B,EAAE,MAAM;SACnC;KACF,CAAC;GACW,aAAa,CAAI;SAAjB,aAAa;AAG1B;;GAEG;AAOH,IAAa,eAAe;IAA5B;IAA+B,CAAC;IAAD,sBAAC;AAAD,CAAC,AAAhC,IAAgC;AAAnB,eAAe;IAN3B,SAAS,CAAC;QACT,QAAQ,EAAE,kFAAkF;QAC5F,IAAI,EAAE;YACJ,4BAA4B,EAAE,MAAM;SACrC;KACF,CAAC;GACW,eAAe,CAAI;SAAnB,eAAe;AAG5B;;;GAGG;AAOH,IAAa,eAAe;IAA5B;IAA+B,CAAC;IAAD,sBAAC;AAAD,CAAC,AAAhC,IAAgC;AAAnB,eAAe;IAN3B,SAAS,CAAC;QACT,QAAQ,EAAE,kFAAkF;QAC5F,IAAI,EAAE;YACJ,4BAA4B,EAAE,MAAM;SACrC;KACF,CAAC;GACW,eAAe,CAAI;SAAnB,eAAe","sourcesContent":["import {Directive, Input} from '@angular/core';\nimport {MdDialogRef} from './dialog-ref';\n\n\n/**\n * Button that will close the current dialog.\n */\n@Directive({\n  selector: 'button[md-dialog-close], button[mat-dialog-close]',\n  host: {\n    '(click)': 'dialogRef.close()',\n    '[attr.aria-label]': 'ariaLabel',\n    'type': 'button', // Prevents accidental form submits.\n  }\n})\nexport class MdDialogClose {\n  /** Screenreader label for the button. */\n  @Input('aria-label') ariaLabel: string = 'Close dialog';\n\n  constructor(public dialogRef: MdDialogRef<any>) { }\n}\n\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\n@Directive({\n  selector: '[md-dialog-title], [mat-dialog-title]',\n  host: {\n    '[class.mat-dialog-title]': 'true'\n  }\n})\nexport class MdDialogTitle { }\n\n\n/**\n * Scrollable content container of a dialog.\n */\n@Directive({\n  selector: '[md-dialog-content], md-dialog-content, [mat-dialog-content], mat-dialog-content',\n  host: {\n    '[class.mat-dialog-content]': 'true'\n  }\n})\nexport class MdDialogContent { }\n\n\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\n@Directive({\n  selector: '[md-dialog-actions], md-dialog-actions, [mat-dialog-actions], mat-dialog-actions',\n  host: {\n    '[class.mat-dialog-actions]': 'true'\n  }\n})\nexport class MdDialogActions { }\n"]}